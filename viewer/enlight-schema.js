// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var enlight_schema = enlight_schema || {};

/**
 * @enum {number}
 */
enlight_schema.DataType = {
  Float16: 0,
  Float32: 1,
  Float64: 2,
  Signed8: 3,
  Signed16: 4,
  Signed32: 5,
  Signed64: 6,
  Unsigned8: 7,
  Unsigned16: 8,
  Unsigned32: 9,
  Unsigned64: 10
};

/**
 * @enum {string}
 */
enlight_schema.DataTypeName = {
  '0': 'Float16',
  '1': 'Float32',
  '2': 'Float64',
  '3': 'Signed8',
  '4': 'Signed16',
  '5': 'Signed32',
  '6': 'Signed64',
  '7': 'Unsigned8',
  '8': 'Unsigned16',
  '9': 'Unsigned32',
  '10': 'Unsigned64'
};

/**
 * @enum {number}
 */
enlight_schema.DataLayout = {
  NHWC: 0,
  NCHW: 1
};

/**
 * @enum {string}
 */
enlight_schema.DataLayoutName = {
  '0': 'NHWC',
  '1': 'NCHW'
};

/**
 * @enum {number}
 */
enlight_schema.ResizeMethod = {
  NearestNeighbor: 0,
  Bilinear: 1
};

/**
 * @enum {string}
 */
enlight_schema.ResizeMethodName = {
  '0': 'NearestNeighbor',
  '1': 'Bilinear'
};

/**
 * @enum {number}
 */
enlight_schema.ConstTensorData = {
  NONE: 0,
  ByteData: 1,
  ShortData: 2,
  IntData: 3,
  LongData: 4,
  FloatData: 5
};

/**
 * @enum {string}
 */
enlight_schema.ConstTensorDataName = {
  '0': 'NONE',
  '1': 'ByteData',
  '2': 'ShortData',
  '3': 'IntData',
  '4': 'LongData',
  '5': 'FloatData'
};

/**
 * @enum {number}
 */
enlight_schema.CeilMode = {
  Floor: 0,
  Ceiling: 1
};

/**
 * @enum {string}
 */
enlight_schema.CeilModeName = {
  '0': 'Floor',
  '1': 'Ceiling'
};

/**
 * @enum {number}
 */
enlight_schema.PaddingMethod = {
  IgnoreValue: 0,
  Exclude: 1
};

/**
 * @enum {string}
 */
enlight_schema.PaddingMethodName = {
  '0': 'IgnoreValue',
  '1': 'Exclude'
};

/**
 * @enum {number}
 */
enlight_schema.GroupLayer = {
  NONE: 0,
  ResidualGroup: 1,
  SerialGroup: 2,
  InverseYGroup: 3,
  SingleGroup: 4,
  RowPartitionedResidualGroup: 5,
  RowPartitionedSerialGroup: 6,
  RowPartitionedInverseYGroup: 7,
  RowPartitionedSingleGroup: 8,
  OchPartitionedResidualGroup: 9,
  OchPartitionedSerialGroup: 10,
  OchPartitionedInverseYGroup: 11,
  OchPartitionedSingleGroup: 12,
  RowOchPartitionedResidualGroup: 13,
  RowOchPartitionedSerialGroup: 14,
  RowOchPartitionedInverseYGroup: 15,
  RowOchPartitionedSingleGroup: 16,
  FusedResidualSerialGroup: 17,
  MiscGroup: 18,
  RowPartitionedMiscGroup: 19,
  OchPartitionedMiscGroup: 20,
  OchRowPartitionedMiscGroup: 21,
  RowPartitionedSerialResidualGroup: 22,
  SerialResidualGroup: 23,
  RowOchPartitionedSerialResidualGroup: 24,
  NpuFriendlyReshapeGroup: 25,
  ConstGroup: 26,
  RowPartitionedConstGroup: 27,
  OchPartitionedConstGroup: 28,
  OchRowPartitionedConstGroup: 29
};

/**
 * @enum {string}
 */
enlight_schema.GroupLayerName = {
  '0': 'NONE',
  '1': 'ResidualGroup',
  '2': 'SerialGroup',
  '3': 'InverseYGroup',
  '4': 'SingleGroup',
  '5': 'RowPartitionedResidualGroup',
  '6': 'RowPartitionedSerialGroup',
  '7': 'RowPartitionedInverseYGroup',
  '8': 'RowPartitionedSingleGroup',
  '9': 'OchPartitionedResidualGroup',
  '10': 'OchPartitionedSerialGroup',
  '11': 'OchPartitionedInverseYGroup',
  '12': 'OchPartitionedSingleGroup',
  '13': 'RowOchPartitionedResidualGroup',
  '14': 'RowOchPartitionedSerialGroup',
  '15': 'RowOchPartitionedInverseYGroup',
  '16': 'RowOchPartitionedSingleGroup',
  '17': 'FusedResidualSerialGroup',
  '18': 'MiscGroup',
  '19': 'RowPartitionedMiscGroup',
  '20': 'OchPartitionedMiscGroup',
  '21': 'OchRowPartitionedMiscGroup',
  '22': 'RowPartitionedSerialResidualGroup',
  '23': 'SerialResidualGroup',
  '24': 'RowOchPartitionedSerialResidualGroup',
  '25': 'NpuFriendlyReshapeGroup',
  '26': 'ConstGroup',
  '27': 'RowPartitionedConstGroup',
  '28': 'OchPartitionedConstGroup',
  '29': 'OchRowPartitionedConstGroup'
};

/**
 * @enum {number}
 */
enlight_schema.Layer = {
  NONE: 0,
  InputLayer: 1,
  OutputLayer: 2,
  ConstantLayer: 3,
  ReLULayer: 4,
  SigmoidLayer: 5,
  LeakyReLULayer: 6,
  TanhLayer: 7,
  ReLU6Layer: 8,
  ClipLayer: 9,
  AddLayer: 10,
  SubLayer: 11,
  MulLayer: 12,
  MulConstLayer: 13,
  DivLayer: 14,
  Conv2dLayer: 15,
  DwConv2dLayer: 16,
  TransposedConv2dLayer: 17,
  BatchNorm2dLayer: 18,
  MaxPool2dLayer: 19,
  AvgPool2dLayer: 20,
  AdaptiveMaxPool2dLayer: 21,
  AdaptiveAvgPool2dLayer: 22,
  ReduceMeanLayer: 23,
  LinearLayer: 24,
  UpsampleLayer: 25,
  SoftmaxLayer: 26,
  DetectionPostProcessLayer: 27,
  YoloPostProcessLayer: 28,
  ConcatLayer: 29,
  FlattenLayer: 30,
  PadLayer: 31,
  PermuteLayer: 32,
  ReshapeLayer: 33,
  ReorgLayer: 34,
  SliceLayer: 35,
  HardSwishLayer: 36,
  HardSigmoidLayer: 37,
  SwishLayer: 38,
  Reorg3dLayer: 39,
  ExpLayer: 40,
  MishLayer: 41,
  VirtualDmaLayer: 42,
  VirtualScalerLayer: 43,
  VirtualBitConverterLayer: 44,
  VirtualScaleConverterLayer: 45,
  MishResidualLayer: 46,
  ReduceSumLayer: 47,
  UnsqueezeLayer: 48,
  DelimiterLayer: 49,
  MatMulLayer: 50,
  DarknetDeConv2dLayer: 51,
  PadExtensionLayer: 52,
  SplitLayer: 53,
  PowLayer: 54,
  MishAttentionLayer: 55,
  AddConstLayer: 56,
  SqueezeLayer: 57
};

/**
 * @enum {string}
 */
enlight_schema.LayerName = {
  '0': 'NONE',
  '1': 'InputLayer',
  '2': 'OutputLayer',
  '3': 'ConstantLayer',
  '4': 'ReLULayer',
  '5': 'SigmoidLayer',
  '6': 'LeakyReLULayer',
  '7': 'TanhLayer',
  '8': 'ReLU6Layer',
  '9': 'ClipLayer',
  '10': 'AddLayer',
  '11': 'SubLayer',
  '12': 'MulLayer',
  '13': 'MulConstLayer',
  '14': 'DivLayer',
  '15': 'Conv2dLayer',
  '16': 'DwConv2dLayer',
  '17': 'TransposedConv2dLayer',
  '18': 'BatchNorm2dLayer',
  '19': 'MaxPool2dLayer',
  '20': 'AvgPool2dLayer',
  '21': 'AdaptiveMaxPool2dLayer',
  '22': 'AdaptiveAvgPool2dLayer',
  '23': 'ReduceMeanLayer',
  '24': 'LinearLayer',
  '25': 'UpsampleLayer',
  '26': 'SoftmaxLayer',
  '27': 'DetectionPostProcessLayer',
  '28': 'YoloPostProcessLayer',
  '29': 'ConcatLayer',
  '30': 'FlattenLayer',
  '31': 'PadLayer',
  '32': 'PermuteLayer',
  '33': 'ReshapeLayer',
  '34': 'ReorgLayer',
  '35': 'SliceLayer',
  '36': 'HardSwishLayer',
  '37': 'HardSigmoidLayer',
  '38': 'SwishLayer',
  '39': 'Reorg3dLayer',
  '40': 'ExpLayer',
  '41': 'MishLayer',
  '42': 'VirtualDmaLayer',
  '43': 'VirtualScalerLayer',
  '44': 'VirtualBitConverterLayer',
  '45': 'VirtualScaleConverterLayer',
  '46': 'MishResidualLayer',
  '47': 'ReduceSumLayer',
  '48': 'UnsqueezeLayer',
  '49': 'DelimiterLayer',
  '50': 'MatMulLayer',
  '51': 'DarknetDeConv2dLayer',
  '52': 'PadExtensionLayer',
  '53': 'SplitLayer',
  '54': 'PowLayer',
  '55': 'MishAttentionLayer',
  '56': 'AddConstLayer',
  '57': 'SqueezeLayer'
};

/**
 * @constructor
 */
enlight_schema.TensorInfo = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.TensorInfo}
 */
enlight_schema.TensorInfo.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TensorInfo=} obj
 * @returns {enlight_schema.TensorInfo}
 */
enlight_schema.TensorInfo.getRootAsTensorInfo = function(bb, obj) {
  return (obj || new enlight_schema.TensorInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TensorInfo=} obj
 * @returns {enlight_schema.TensorInfo}
 */
enlight_schema.TensorInfo.getSizePrefixedRootAsTensorInfo = function(bb, obj) {
  return (obj || new enlight_schema.TensorInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.TensorInfo.prototype.dimensions = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TensorInfo.prototype.dimensionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.TensorInfo.prototype.dimensionsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {enlight_schema.DataType}
 */
enlight_schema.TensorInfo.prototype.dataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {enlight_schema.DataType} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataType.Float16;
};

/**
 * @returns {boolean}
 */
enlight_schema.TensorInfo.prototype.quantizationEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.TensorInfo.prototype.quantizationScale = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TensorInfo.prototype.quantizationScaleLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.TensorInfo.prototype.quantizationScaleArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
enlight_schema.TensorInfo.prototype.quantizationOffset = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.TensorInfo.startTensorInfo = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dimensionsOffset
 */
enlight_schema.TensorInfo.addDimensions = function(builder, dimensionsOffset) {
  builder.addFieldOffset(0, dimensionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TensorInfo.createDimensionsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.TensorInfo.startDimensionsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataType} dataType
 */
enlight_schema.TensorInfo.addDataType = function(builder, dataType) {
  builder.addFieldInt8(1, dataType, enlight_schema.DataType.Float16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} quantizationEnabled
 */
enlight_schema.TensorInfo.addQuantizationEnabled = function(builder, quantizationEnabled) {
  builder.addFieldInt8(2, +quantizationEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} quantizationScaleOffset
 */
enlight_schema.TensorInfo.addQuantizationScale = function(builder, quantizationScaleOffset) {
  builder.addFieldOffset(3, quantizationScaleOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TensorInfo.createQuantizationScaleVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.TensorInfo.startQuantizationScaleVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} quantizationOffset
 */
enlight_schema.TensorInfo.addQuantizationOffset = function(builder, quantizationOffset) {
  builder.addFieldInt32(4, quantizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TensorInfo.endTensorInfo = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dimensionsOffset
 * @param {enlight_schema.DataType} dataType
 * @param {boolean} quantizationEnabled
 * @param {flatbuffers.Offset} quantizationScaleOffset
 * @param {number} quantizationOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TensorInfo.createTensorInfo = function(builder, dimensionsOffset, dataType, quantizationEnabled, quantizationScaleOffset, quantizationOffset) {
  enlight_schema.TensorInfo.startTensorInfo(builder);
  enlight_schema.TensorInfo.addDimensions(builder, dimensionsOffset);
  enlight_schema.TensorInfo.addDataType(builder, dataType);
  enlight_schema.TensorInfo.addQuantizationEnabled(builder, quantizationEnabled);
  enlight_schema.TensorInfo.addQuantizationScale(builder, quantizationScaleOffset);
  enlight_schema.TensorInfo.addQuantizationOffset(builder, quantizationOffset);
  return enlight_schema.TensorInfo.endTensorInfo(builder);
}

/**
 * @constructor
 */
enlight_schema.Connection = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Connection}
 */
enlight_schema.Connection.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
enlight_schema.Connection.prototype.sourceLayerIndex = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @returns {number}
 */
enlight_schema.Connection.prototype.outputSlotIndex = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} sourceLayerIndex
 * @param {number} outputSlotIndex
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Connection.createConnection = function(builder, sourceLayerIndex, outputSlotIndex) {
  builder.prep(4, 8);
  builder.writeInt32(outputSlotIndex);
  builder.writeInt32(sourceLayerIndex);
  return builder.offset();
};

/**
 * @constructor
 */
enlight_schema.ByteData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ByteData}
 */
enlight_schema.ByteData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ByteData=} obj
 * @returns {enlight_schema.ByteData}
 */
enlight_schema.ByteData.getRootAsByteData = function(bb, obj) {
  return (obj || new enlight_schema.ByteData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ByteData=} obj
 * @returns {enlight_schema.ByteData}
 */
enlight_schema.ByteData.getSizePrefixedRootAsByteData = function(bb, obj) {
  return (obj || new enlight_schema.ByteData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.ByteData.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.ByteData.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int8Array}
 */
enlight_schema.ByteData.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ByteData.startByteData = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.ByteData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ByteData.createDataVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ByteData.startDataVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ByteData.endByteData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ByteData.createByteData = function(builder, dataOffset) {
  enlight_schema.ByteData.startByteData(builder);
  enlight_schema.ByteData.addData(builder, dataOffset);
  return enlight_schema.ByteData.endByteData(builder);
}

/**
 * @constructor
 */
enlight_schema.ShortData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ShortData}
 */
enlight_schema.ShortData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ShortData=} obj
 * @returns {enlight_schema.ShortData}
 */
enlight_schema.ShortData.getRootAsShortData = function(bb, obj) {
  return (obj || new enlight_schema.ShortData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ShortData=} obj
 * @returns {enlight_schema.ShortData}
 */
enlight_schema.ShortData.getSizePrefixedRootAsShortData = function(bb, obj) {
  return (obj || new enlight_schema.ShortData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.ShortData.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.ShortData.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int16Array}
 */
enlight_schema.ShortData.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int16Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ShortData.startShortData = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.ShortData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ShortData.createDataVector = function(builder, data) {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ShortData.startDataVector = function(builder, numElems) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ShortData.endShortData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ShortData.createShortData = function(builder, dataOffset) {
  enlight_schema.ShortData.startShortData(builder);
  enlight_schema.ShortData.addData(builder, dataOffset);
  return enlight_schema.ShortData.endShortData(builder);
}

/**
 * @constructor
 */
enlight_schema.IntData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.IntData}
 */
enlight_schema.IntData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.IntData=} obj
 * @returns {enlight_schema.IntData}
 */
enlight_schema.IntData.getRootAsIntData = function(bb, obj) {
  return (obj || new enlight_schema.IntData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.IntData=} obj
 * @returns {enlight_schema.IntData}
 */
enlight_schema.IntData.getSizePrefixedRootAsIntData = function(bb, obj) {
  return (obj || new enlight_schema.IntData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.IntData.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.IntData.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.IntData.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.IntData.startIntData = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.IntData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.IntData.createDataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.IntData.startDataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.IntData.endIntData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.IntData.createIntData = function(builder, dataOffset) {
  enlight_schema.IntData.startIntData(builder);
  enlight_schema.IntData.addData(builder, dataOffset);
  return enlight_schema.IntData.endIntData(builder);
}

/**
 * @constructor
 */
enlight_schema.LongData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LongData}
 */
enlight_schema.LongData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LongData=} obj
 * @returns {enlight_schema.LongData}
 */
enlight_schema.LongData.getRootAsLongData = function(bb, obj) {
  return (obj || new enlight_schema.LongData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LongData=} obj
 * @returns {enlight_schema.LongData}
 */
enlight_schema.LongData.getSizePrefixedRootAsLongData = function(bb, obj) {
  return (obj || new enlight_schema.LongData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {flatbuffers.Long}
 */
enlight_schema.LongData.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
enlight_schema.LongData.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LongData.startLongData = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.LongData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Long>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LongData.createDataVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.LongData.startDataVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LongData.endLongData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LongData.createLongData = function(builder, dataOffset) {
  enlight_schema.LongData.startLongData(builder);
  enlight_schema.LongData.addData(builder, dataOffset);
  return enlight_schema.LongData.endLongData(builder);
}

/**
 * @constructor
 */
enlight_schema.FloatData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.FloatData}
 */
enlight_schema.FloatData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FloatData=} obj
 * @returns {enlight_schema.FloatData}
 */
enlight_schema.FloatData.getRootAsFloatData = function(bb, obj) {
  return (obj || new enlight_schema.FloatData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FloatData=} obj
 * @returns {enlight_schema.FloatData}
 */
enlight_schema.FloatData.getSizePrefixedRootAsFloatData = function(bb, obj) {
  return (obj || new enlight_schema.FloatData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.FloatData.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.FloatData.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.FloatData.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.FloatData.startFloatData = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.FloatData.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FloatData.createDataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.FloatData.startDataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FloatData.endFloatData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FloatData.createFloatData = function(builder, dataOffset) {
  enlight_schema.FloatData.startFloatData(builder);
  enlight_schema.FloatData.addData(builder, dataOffset);
  return enlight_schema.FloatData.endFloatData(builder);
}

/**
 * @constructor
 */
enlight_schema.ConstTensor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ConstTensor}
 */
enlight_schema.ConstTensor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor}
 */
enlight_schema.ConstTensor.getRootAsConstTensor = function(bb, obj) {
  return (obj || new enlight_schema.ConstTensor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor}
 */
enlight_schema.ConstTensor.getSizePrefixedRootAsConstTensor = function(bb, obj) {
  return (obj || new enlight_schema.ConstTensor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.TensorInfo=} obj
 * @returns {enlight_schema.TensorInfo|null}
 */
enlight_schema.ConstTensor.prototype.info = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.TensorInfo).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {enlight_schema.ConstTensorData}
 */
enlight_schema.ConstTensor.prototype.dataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {enlight_schema.ConstTensorData} */ (this.bb.readUint8(this.bb_pos + offset)) : enlight_schema.ConstTensorData.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
enlight_schema.ConstTensor.prototype.data = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ConstTensor.startConstTensor = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} infoOffset
 */
enlight_schema.ConstTensor.addInfo = function(builder, infoOffset) {
  builder.addFieldOffset(0, infoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.ConstTensorData} dataType
 */
enlight_schema.ConstTensor.addDataType = function(builder, dataType) {
  builder.addFieldInt8(1, dataType, enlight_schema.ConstTensorData.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
enlight_schema.ConstTensor.addData = function(builder, dataOffset) {
  builder.addFieldOffset(2, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstTensor.endConstTensor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} infoOffset
 * @param {enlight_schema.ConstTensorData} dataType
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstTensor.createConstTensor = function(builder, infoOffset, dataType, dataOffset) {
  enlight_schema.ConstTensor.startConstTensor(builder);
  enlight_schema.ConstTensor.addInfo(builder, infoOffset);
  enlight_schema.ConstTensor.addDataType(builder, dataType);
  enlight_schema.ConstTensor.addData(builder, dataOffset);
  return enlight_schema.ConstTensor.endConstTensor(builder);
}

/**
 * @constructor
 */
enlight_schema.InputSlot = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.InputSlot}
 */
enlight_schema.InputSlot.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputSlot=} obj
 * @returns {enlight_schema.InputSlot}
 */
enlight_schema.InputSlot.getRootAsInputSlot = function(bb, obj) {
  return (obj || new enlight_schema.InputSlot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputSlot=} obj
 * @returns {enlight_schema.InputSlot}
 */
enlight_schema.InputSlot.getSizePrefixedRootAsInputSlot = function(bb, obj) {
  return (obj || new enlight_schema.InputSlot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.InputSlot.prototype.index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {enlight_schema.Connection=} obj
 * @returns {enlight_schema.Connection|null}
 */
enlight_schema.InputSlot.prototype.connection = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.Connection).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {enlight_schema.TensorInfo=} obj
 * @returns {enlight_schema.TensorInfo|null}
 */
enlight_schema.InputSlot.prototype.tensorInfo = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.TensorInfo).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.InputSlot.startInputSlot = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 */
enlight_schema.InputSlot.addIndex = function(builder, index) {
  builder.addFieldInt32(0, index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} connectionOffset
 */
enlight_schema.InputSlot.addConnection = function(builder, connectionOffset) {
  builder.addFieldStruct(1, connectionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tensorInfoOffset
 */
enlight_schema.InputSlot.addTensorInfo = function(builder, tensorInfoOffset) {
  builder.addFieldOffset(2, tensorInfoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputSlot.endInputSlot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 * @param {flatbuffers.Offset} connectionOffset
 * @param {flatbuffers.Offset} tensorInfoOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputSlot.createInputSlot = function(builder, index, connectionOffset, tensorInfoOffset) {
  enlight_schema.InputSlot.startInputSlot(builder);
  enlight_schema.InputSlot.addIndex(builder, index);
  enlight_schema.InputSlot.addConnection(builder, connectionOffset);
  enlight_schema.InputSlot.addTensorInfo(builder, tensorInfoOffset);
  return enlight_schema.InputSlot.endInputSlot(builder);
}

/**
 * @constructor
 */
enlight_schema.OutputSlot = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OutputSlot}
 */
enlight_schema.OutputSlot.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OutputSlot=} obj
 * @returns {enlight_schema.OutputSlot}
 */
enlight_schema.OutputSlot.getRootAsOutputSlot = function(bb, obj) {
  return (obj || new enlight_schema.OutputSlot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OutputSlot=} obj
 * @returns {enlight_schema.OutputSlot}
 */
enlight_schema.OutputSlot.getSizePrefixedRootAsOutputSlot = function(bb, obj) {
  return (obj || new enlight_schema.OutputSlot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {enlight_schema.TensorInfo=} obj
 * @returns {enlight_schema.TensorInfo|null}
 */
enlight_schema.OutputSlot.prototype.tensorInfo = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.TensorInfo).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.min = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : -1.0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.max = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 1.0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.mean = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.std = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 1.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.OutputSlot.prototype.statisticsEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.threshold = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.OutputSlot.prototype.thresholdEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.OutputSlot.prototype.statisticsEnabledPerChannel = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.minPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.minPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.OutputSlot.prototype.minPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.maxPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.maxPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.OutputSlot.prototype.maxPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.meanPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.meanPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.OutputSlot.prototype.meanPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.stdPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.OutputSlot.prototype.stdPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.OutputSlot.prototype.stdPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OutputSlot.startOutputSlot = function(builder) {
  builder.startObject(14);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 */
enlight_schema.OutputSlot.addIndex = function(builder, index) {
  builder.addFieldInt32(0, index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tensorInfoOffset
 */
enlight_schema.OutputSlot.addTensorInfo = function(builder, tensorInfoOffset) {
  builder.addFieldOffset(1, tensorInfoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 */
enlight_schema.OutputSlot.addMin = function(builder, min) {
  builder.addFieldFloat32(2, min, -1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} max
 */
enlight_schema.OutputSlot.addMax = function(builder, max) {
  builder.addFieldFloat32(3, max, 1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mean
 */
enlight_schema.OutputSlot.addMean = function(builder, mean) {
  builder.addFieldFloat32(4, mean, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} std
 */
enlight_schema.OutputSlot.addStd = function(builder, std) {
  builder.addFieldFloat32(5, std, 1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} statisticsEnabled
 */
enlight_schema.OutputSlot.addStatisticsEnabled = function(builder, statisticsEnabled) {
  builder.addFieldInt8(6, +statisticsEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} threshold
 */
enlight_schema.OutputSlot.addThreshold = function(builder, threshold) {
  builder.addFieldFloat32(7, threshold, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} thresholdEnabled
 */
enlight_schema.OutputSlot.addThresholdEnabled = function(builder, thresholdEnabled) {
  builder.addFieldInt8(8, +thresholdEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} statisticsEnabledPerChannel
 */
enlight_schema.OutputSlot.addStatisticsEnabledPerChannel = function(builder, statisticsEnabledPerChannel) {
  builder.addFieldInt8(9, +statisticsEnabledPerChannel, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} minPerChannelOffset
 */
enlight_schema.OutputSlot.addMinPerChannel = function(builder, minPerChannelOffset) {
  builder.addFieldOffset(10, minPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.createMinPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.OutputSlot.startMinPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} maxPerChannelOffset
 */
enlight_schema.OutputSlot.addMaxPerChannel = function(builder, maxPerChannelOffset) {
  builder.addFieldOffset(11, maxPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.createMaxPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.OutputSlot.startMaxPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} meanPerChannelOffset
 */
enlight_schema.OutputSlot.addMeanPerChannel = function(builder, meanPerChannelOffset) {
  builder.addFieldOffset(12, meanPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.createMeanPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.OutputSlot.startMeanPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stdPerChannelOffset
 */
enlight_schema.OutputSlot.addStdPerChannel = function(builder, stdPerChannelOffset) {
  builder.addFieldOffset(13, stdPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.createStdPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.OutputSlot.startStdPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.endOutputSlot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 * @param {flatbuffers.Offset} tensorInfoOffset
 * @param {number} min
 * @param {number} max
 * @param {number} mean
 * @param {number} std
 * @param {boolean} statisticsEnabled
 * @param {number} threshold
 * @param {boolean} thresholdEnabled
 * @param {boolean} statisticsEnabledPerChannel
 * @param {flatbuffers.Offset} minPerChannelOffset
 * @param {flatbuffers.Offset} maxPerChannelOffset
 * @param {flatbuffers.Offset} meanPerChannelOffset
 * @param {flatbuffers.Offset} stdPerChannelOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputSlot.createOutputSlot = function(builder, index, tensorInfoOffset, min, max, mean, std, statisticsEnabled, threshold, thresholdEnabled, statisticsEnabledPerChannel, minPerChannelOffset, maxPerChannelOffset, meanPerChannelOffset, stdPerChannelOffset) {
  enlight_schema.OutputSlot.startOutputSlot(builder);
  enlight_schema.OutputSlot.addIndex(builder, index);
  enlight_schema.OutputSlot.addTensorInfo(builder, tensorInfoOffset);
  enlight_schema.OutputSlot.addMin(builder, min);
  enlight_schema.OutputSlot.addMax(builder, max);
  enlight_schema.OutputSlot.addMean(builder, mean);
  enlight_schema.OutputSlot.addStd(builder, std);
  enlight_schema.OutputSlot.addStatisticsEnabled(builder, statisticsEnabled);
  enlight_schema.OutputSlot.addThreshold(builder, threshold);
  enlight_schema.OutputSlot.addThresholdEnabled(builder, thresholdEnabled);
  enlight_schema.OutputSlot.addStatisticsEnabledPerChannel(builder, statisticsEnabledPerChannel);
  enlight_schema.OutputSlot.addMinPerChannel(builder, minPerChannelOffset);
  enlight_schema.OutputSlot.addMaxPerChannel(builder, maxPerChannelOffset);
  enlight_schema.OutputSlot.addMeanPerChannel(builder, meanPerChannelOffset);
  enlight_schema.OutputSlot.addStdPerChannel(builder, stdPerChannelOffset);
  return enlight_schema.OutputSlot.endOutputSlot(builder);
}

/**
 * @constructor
 */
enlight_schema.LayerBase = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LayerBase}
 */
enlight_schema.LayerBase.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LayerBase=} obj
 * @returns {enlight_schema.LayerBase}
 */
enlight_schema.LayerBase.getRootAsLayerBase = function(bb, obj) {
  return (obj || new enlight_schema.LayerBase).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LayerBase=} obj
 * @returns {enlight_schema.LayerBase}
 */
enlight_schema.LayerBase.getSizePrefixedRootAsLayerBase = function(bb, obj) {
  return (obj || new enlight_schema.LayerBase).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.LayerBase.prototype.index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.LayerBase.prototype.layerName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {enlight_schema.InputSlot=} obj
 * @returns {enlight_schema.InputSlot}
 */
enlight_schema.LayerBase.prototype.inputSlots = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.InputSlot).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.LayerBase.prototype.inputSlotsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {enlight_schema.OutputSlot=} obj
 * @returns {enlight_schema.OutputSlot}
 */
enlight_schema.LayerBase.prototype.outputSlots = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new enlight_schema.OutputSlot).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.LayerBase.prototype.outputSlotsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LayerBase.startLayerBase = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 */
enlight_schema.LayerBase.addIndex = function(builder, index) {
  builder.addFieldInt32(0, index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} layerNameOffset
 */
enlight_schema.LayerBase.addLayerName = function(builder, layerNameOffset) {
  builder.addFieldOffset(1, layerNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputSlotsOffset
 */
enlight_schema.LayerBase.addInputSlots = function(builder, inputSlotsOffset) {
  builder.addFieldOffset(2, inputSlotsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LayerBase.createInputSlotsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.LayerBase.startInputSlotsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputSlotsOffset
 */
enlight_schema.LayerBase.addOutputSlots = function(builder, outputSlotsOffset) {
  builder.addFieldOffset(3, outputSlotsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LayerBase.createOutputSlotsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.LayerBase.startOutputSlotsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LayerBase.endLayerBase = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} index
 * @param {flatbuffers.Offset} layerNameOffset
 * @param {flatbuffers.Offset} inputSlotsOffset
 * @param {flatbuffers.Offset} outputSlotsOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LayerBase.createLayerBase = function(builder, index, layerNameOffset, inputSlotsOffset, outputSlotsOffset) {
  enlight_schema.LayerBase.startLayerBase(builder);
  enlight_schema.LayerBase.addIndex(builder, index);
  enlight_schema.LayerBase.addLayerName(builder, layerNameOffset);
  enlight_schema.LayerBase.addInputSlots(builder, inputSlotsOffset);
  enlight_schema.LayerBase.addOutputSlots(builder, outputSlotsOffset);
  return enlight_schema.LayerBase.endLayerBase(builder);
}

/**
 * @constructor
 */
enlight_schema.InputLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.InputLayer}
 */
enlight_schema.InputLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputLayer=} obj
 * @returns {enlight_schema.InputLayer}
 */
enlight_schema.InputLayer.getRootAsInputLayer = function(bb, obj) {
  return (obj || new enlight_schema.InputLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputLayer=} obj
 * @returns {enlight_schema.InputLayer}
 */
enlight_schema.InputLayer.getSizePrefixedRootAsInputLayer = function(bb, obj) {
  return (obj || new enlight_schema.InputLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.InputLayer.prototype.layerBindingId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {enlight_schema.InputDescriptor=} obj
 * @returns {enlight_schema.InputDescriptor|null}
 */
enlight_schema.InputLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.InputDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.InputLayer.startInputLayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} layerBindingId
 */
enlight_schema.InputLayer.addLayerBindingId = function(builder, layerBindingId) {
  builder.addFieldInt32(0, layerBindingId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.InputLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(1, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputLayer.endInputLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} layerBindingId
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputLayer.createInputLayer = function(builder, layerBindingId, descriptorOffset) {
  enlight_schema.InputLayer.startInputLayer(builder);
  enlight_schema.InputLayer.addLayerBindingId(builder, layerBindingId);
  enlight_schema.InputLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.InputLayer.endInputLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.InputDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.InputDescriptor}
 */
enlight_schema.InputDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputDescriptor=} obj
 * @returns {enlight_schema.InputDescriptor}
 */
enlight_schema.InputDescriptor.getRootAsInputDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.InputDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InputDescriptor=} obj
 * @returns {enlight_schema.InputDescriptor}
 */
enlight_schema.InputDescriptor.getSizePrefixedRootAsInputDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.InputDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.InputDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.InputDescriptor.startInputDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.InputDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(0, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputDescriptor.endInputDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InputDescriptor.createInputDescriptor = function(builder, dataLayout) {
  enlight_schema.InputDescriptor.startInputDescriptor(builder);
  enlight_schema.InputDescriptor.addDataLayout(builder, dataLayout);
  return enlight_schema.InputDescriptor.endInputDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.OutputLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OutputLayer}
 */
enlight_schema.OutputLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OutputLayer=} obj
 * @returns {enlight_schema.OutputLayer}
 */
enlight_schema.OutputLayer.getRootAsOutputLayer = function(bb, obj) {
  return (obj || new enlight_schema.OutputLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OutputLayer=} obj
 * @returns {enlight_schema.OutputLayer}
 */
enlight_schema.OutputLayer.getSizePrefixedRootAsOutputLayer = function(bb, obj) {
  return (obj || new enlight_schema.OutputLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.OutputLayer.prototype.layerBindingId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OutputLayer.startOutputLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} layerBindingId
 */
enlight_schema.OutputLayer.addLayerBindingId = function(builder, layerBindingId) {
  builder.addFieldInt32(0, layerBindingId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputLayer.endOutputLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} layerBindingId
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OutputLayer.createOutputLayer = function(builder, layerBindingId) {
  enlight_schema.OutputLayer.startOutputLayer(builder);
  enlight_schema.OutputLayer.addLayerBindingId(builder, layerBindingId);
  return enlight_schema.OutputLayer.endOutputLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ConstantLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ConstantLayer}
 */
enlight_schema.ConstantLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstantLayer=} obj
 * @returns {enlight_schema.ConstantLayer}
 */
enlight_schema.ConstantLayer.getRootAsConstantLayer = function(bb, obj) {
  return (obj || new enlight_schema.ConstantLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstantLayer=} obj
 * @returns {enlight_schema.ConstantLayer}
 */
enlight_schema.ConstantLayer.getSizePrefixedRootAsConstantLayer = function(bb, obj) {
  return (obj || new enlight_schema.ConstantLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.ConstantLayer.prototype.input = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ConstantLayer.startConstantLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputOffset
 */
enlight_schema.ConstantLayer.addInput = function(builder, inputOffset) {
  builder.addFieldOffset(0, inputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstantLayer.endConstantLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstantLayer.createConstantLayer = function(builder, inputOffset) {
  enlight_schema.ConstantLayer.startConstantLayer(builder);
  enlight_schema.ConstantLayer.addInput(builder, inputOffset);
  return enlight_schema.ConstantLayer.endConstantLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReLULayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReLULayer}
 */
enlight_schema.ReLULayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReLULayer=} obj
 * @returns {enlight_schema.ReLULayer}
 */
enlight_schema.ReLULayer.getRootAsReLULayer = function(bb, obj) {
  return (obj || new enlight_schema.ReLULayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReLULayer=} obj
 * @returns {enlight_schema.ReLULayer}
 */
enlight_schema.ReLULayer.getSizePrefixedRootAsReLULayer = function(bb, obj) {
  return (obj || new enlight_schema.ReLULayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReLULayer.startReLULayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReLULayer.endReLULayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReLULayer.createReLULayer = function(builder) {
  enlight_schema.ReLULayer.startReLULayer(builder);
  return enlight_schema.ReLULayer.endReLULayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SigmoidLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SigmoidLayer}
 */
enlight_schema.SigmoidLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SigmoidLayer=} obj
 * @returns {enlight_schema.SigmoidLayer}
 */
enlight_schema.SigmoidLayer.getRootAsSigmoidLayer = function(bb, obj) {
  return (obj || new enlight_schema.SigmoidLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SigmoidLayer=} obj
 * @returns {enlight_schema.SigmoidLayer}
 */
enlight_schema.SigmoidLayer.getSizePrefixedRootAsSigmoidLayer = function(bb, obj) {
  return (obj || new enlight_schema.SigmoidLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SigmoidLayer.startSigmoidLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SigmoidLayer.endSigmoidLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SigmoidLayer.createSigmoidLayer = function(builder) {
  enlight_schema.SigmoidLayer.startSigmoidLayer(builder);
  return enlight_schema.SigmoidLayer.endSigmoidLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PowLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PowLayer}
 */
enlight_schema.PowLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PowLayer=} obj
 * @returns {enlight_schema.PowLayer}
 */
enlight_schema.PowLayer.getRootAsPowLayer = function(bb, obj) {
  return (obj || new enlight_schema.PowLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PowLayer=} obj
 * @returns {enlight_schema.PowLayer}
 */
enlight_schema.PowLayer.getSizePrefixedRootAsPowLayer = function(bb, obj) {
  return (obj || new enlight_schema.PowLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.PowDescriptor=} obj
 * @returns {enlight_schema.PowDescriptor|null}
 */
enlight_schema.PowLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.PowDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PowLayer.startPowLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.PowLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PowLayer.endPowLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PowLayer.createPowLayer = function(builder, descriptorOffset) {
  enlight_schema.PowLayer.startPowLayer(builder);
  enlight_schema.PowLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.PowLayer.endPowLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PowDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PowDescriptor}
 */
enlight_schema.PowDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PowDescriptor=} obj
 * @returns {enlight_schema.PowDescriptor}
 */
enlight_schema.PowDescriptor.getRootAsPowDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PowDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PowDescriptor=} obj
 * @returns {enlight_schema.PowDescriptor}
 */
enlight_schema.PowDescriptor.getSizePrefixedRootAsPowDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PowDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.PowDescriptor.prototype.exponent = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PowDescriptor.startPowDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} exponent
 */
enlight_schema.PowDescriptor.addExponent = function(builder, exponent) {
  builder.addFieldFloat32(0, exponent, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PowDescriptor.endPowDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} exponent
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PowDescriptor.createPowDescriptor = function(builder, exponent) {
  enlight_schema.PowDescriptor.startPowDescriptor(builder);
  enlight_schema.PowDescriptor.addExponent(builder, exponent);
  return enlight_schema.PowDescriptor.endPowDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.SplitLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SplitLayer}
 */
enlight_schema.SplitLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SplitLayer=} obj
 * @returns {enlight_schema.SplitLayer}
 */
enlight_schema.SplitLayer.getRootAsSplitLayer = function(bb, obj) {
  return (obj || new enlight_schema.SplitLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SplitLayer=} obj
 * @returns {enlight_schema.SplitLayer}
 */
enlight_schema.SplitLayer.getSizePrefixedRootAsSplitLayer = function(bb, obj) {
  return (obj || new enlight_schema.SplitLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.SplitDescriptor=} obj
 * @returns {enlight_schema.SplitDescriptor|null}
 */
enlight_schema.SplitLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.SplitDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SplitLayer.startSplitLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.SplitLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SplitLayer.endSplitLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SplitLayer.createSplitLayer = function(builder, descriptorOffset) {
  enlight_schema.SplitLayer.startSplitLayer(builder);
  enlight_schema.SplitLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.SplitLayer.endSplitLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SplitDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SplitDescriptor}
 */
enlight_schema.SplitDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SplitDescriptor=} obj
 * @returns {enlight_schema.SplitDescriptor}
 */
enlight_schema.SplitDescriptor.getRootAsSplitDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SplitDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SplitDescriptor=} obj
 * @returns {enlight_schema.SplitDescriptor}
 */
enlight_schema.SplitDescriptor.getSizePrefixedRootAsSplitDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SplitDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.SplitDescriptor.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SplitDescriptor.prototype.splitSize = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SplitDescriptor.prototype.splitSizeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SplitDescriptor.prototype.splitSizeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SplitDescriptor.startSplitDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
enlight_schema.SplitDescriptor.addAxis = function(builder, axis) {
  builder.addFieldInt32(0, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} splitSizeOffset
 */
enlight_schema.SplitDescriptor.addSplitSize = function(builder, splitSizeOffset) {
  builder.addFieldOffset(1, splitSizeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SplitDescriptor.createSplitSizeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SplitDescriptor.startSplitSizeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SplitDescriptor.endSplitDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 * @param {flatbuffers.Offset} splitSizeOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SplitDescriptor.createSplitDescriptor = function(builder, axis, splitSizeOffset) {
  enlight_schema.SplitDescriptor.startSplitDescriptor(builder);
  enlight_schema.SplitDescriptor.addAxis(builder, axis);
  enlight_schema.SplitDescriptor.addSplitSize(builder, splitSizeOffset);
  return enlight_schema.SplitDescriptor.endSplitDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.LeakyReLULayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LeakyReLULayer}
 */
enlight_schema.LeakyReLULayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LeakyReLULayer=} obj
 * @returns {enlight_schema.LeakyReLULayer}
 */
enlight_schema.LeakyReLULayer.getRootAsLeakyReLULayer = function(bb, obj) {
  return (obj || new enlight_schema.LeakyReLULayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LeakyReLULayer=} obj
 * @returns {enlight_schema.LeakyReLULayer}
 */
enlight_schema.LeakyReLULayer.getSizePrefixedRootAsLeakyReLULayer = function(bb, obj) {
  return (obj || new enlight_schema.LeakyReLULayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.LeakyReLUDescriptor=} obj
 * @returns {enlight_schema.LeakyReLUDescriptor|null}
 */
enlight_schema.LeakyReLULayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.LeakyReLUDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LeakyReLULayer.startLeakyReLULayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.LeakyReLULayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LeakyReLULayer.endLeakyReLULayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LeakyReLULayer.createLeakyReLULayer = function(builder, descriptorOffset) {
  enlight_schema.LeakyReLULayer.startLeakyReLULayer(builder);
  enlight_schema.LeakyReLULayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.LeakyReLULayer.endLeakyReLULayer(builder);
}

/**
 * @constructor
 */
enlight_schema.LeakyReLUDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LeakyReLUDescriptor}
 */
enlight_schema.LeakyReLUDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LeakyReLUDescriptor=} obj
 * @returns {enlight_schema.LeakyReLUDescriptor}
 */
enlight_schema.LeakyReLUDescriptor.getRootAsLeakyReLUDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.LeakyReLUDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LeakyReLUDescriptor=} obj
 * @returns {enlight_schema.LeakyReLUDescriptor}
 */
enlight_schema.LeakyReLUDescriptor.getSizePrefixedRootAsLeakyReLUDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.LeakyReLUDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.LeakyReLUDescriptor.prototype.negativeSlope = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.01;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LeakyReLUDescriptor.startLeakyReLUDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} negativeSlope
 */
enlight_schema.LeakyReLUDescriptor.addNegativeSlope = function(builder, negativeSlope) {
  builder.addFieldFloat32(0, negativeSlope, 0.01);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LeakyReLUDescriptor.endLeakyReLUDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} negativeSlope
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LeakyReLUDescriptor.createLeakyReLUDescriptor = function(builder, negativeSlope) {
  enlight_schema.LeakyReLUDescriptor.startLeakyReLUDescriptor(builder);
  enlight_schema.LeakyReLUDescriptor.addNegativeSlope(builder, negativeSlope);
  return enlight_schema.LeakyReLUDescriptor.endLeakyReLUDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.TanhLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.TanhLayer}
 */
enlight_schema.TanhLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TanhLayer=} obj
 * @returns {enlight_schema.TanhLayer}
 */
enlight_schema.TanhLayer.getRootAsTanhLayer = function(bb, obj) {
  return (obj || new enlight_schema.TanhLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TanhLayer=} obj
 * @returns {enlight_schema.TanhLayer}
 */
enlight_schema.TanhLayer.getSizePrefixedRootAsTanhLayer = function(bb, obj) {
  return (obj || new enlight_schema.TanhLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.TanhLayer.startTanhLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TanhLayer.endTanhLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TanhLayer.createTanhLayer = function(builder) {
  enlight_schema.TanhLayer.startTanhLayer(builder);
  return enlight_schema.TanhLayer.endTanhLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReLU6Layer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReLU6Layer}
 */
enlight_schema.ReLU6Layer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReLU6Layer=} obj
 * @returns {enlight_schema.ReLU6Layer}
 */
enlight_schema.ReLU6Layer.getRootAsReLU6Layer = function(bb, obj) {
  return (obj || new enlight_schema.ReLU6Layer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReLU6Layer=} obj
 * @returns {enlight_schema.ReLU6Layer}
 */
enlight_schema.ReLU6Layer.getSizePrefixedRootAsReLU6Layer = function(bb, obj) {
  return (obj || new enlight_schema.ReLU6Layer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReLU6Layer.startReLU6Layer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReLU6Layer.endReLU6Layer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReLU6Layer.createReLU6Layer = function(builder) {
  enlight_schema.ReLU6Layer.startReLU6Layer(builder);
  return enlight_schema.ReLU6Layer.endReLU6Layer(builder);
}

/**
 * @constructor
 */
enlight_schema.ClipLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ClipLayer}
 */
enlight_schema.ClipLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ClipLayer=} obj
 * @returns {enlight_schema.ClipLayer}
 */
enlight_schema.ClipLayer.getRootAsClipLayer = function(bb, obj) {
  return (obj || new enlight_schema.ClipLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ClipLayer=} obj
 * @returns {enlight_schema.ClipLayer}
 */
enlight_schema.ClipLayer.getSizePrefixedRootAsClipLayer = function(bb, obj) {
  return (obj || new enlight_schema.ClipLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ClipDescriptor=} obj
 * @returns {enlight_schema.ClipDescriptor|null}
 */
enlight_schema.ClipLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ClipDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ClipLayer.startClipLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ClipLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ClipLayer.endClipLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ClipLayer.createClipLayer = function(builder, descriptorOffset) {
  enlight_schema.ClipLayer.startClipLayer(builder);
  enlight_schema.ClipLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ClipLayer.endClipLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ClipDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ClipDescriptor}
 */
enlight_schema.ClipDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ClipDescriptor=} obj
 * @returns {enlight_schema.ClipDescriptor}
 */
enlight_schema.ClipDescriptor.getRootAsClipDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ClipDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ClipDescriptor=} obj
 * @returns {enlight_schema.ClipDescriptor}
 */
enlight_schema.ClipDescriptor.getSizePrefixedRootAsClipDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ClipDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.ClipDescriptor.prototype.min = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.ClipDescriptor.prototype.max = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ClipDescriptor.startClipDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 */
enlight_schema.ClipDescriptor.addMin = function(builder, min) {
  builder.addFieldFloat32(0, min, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} max
 */
enlight_schema.ClipDescriptor.addMax = function(builder, max) {
  builder.addFieldFloat32(1, max, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ClipDescriptor.endClipDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 * @param {number} max
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ClipDescriptor.createClipDescriptor = function(builder, min, max) {
  enlight_schema.ClipDescriptor.startClipDescriptor(builder);
  enlight_schema.ClipDescriptor.addMin(builder, min);
  enlight_schema.ClipDescriptor.addMax(builder, max);
  return enlight_schema.ClipDescriptor.endClipDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.HardSigmoidLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.HardSigmoidLayer}
 */
enlight_schema.HardSigmoidLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.HardSigmoidLayer=} obj
 * @returns {enlight_schema.HardSigmoidLayer}
 */
enlight_schema.HardSigmoidLayer.getRootAsHardSigmoidLayer = function(bb, obj) {
  return (obj || new enlight_schema.HardSigmoidLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.HardSigmoidLayer=} obj
 * @returns {enlight_schema.HardSigmoidLayer}
 */
enlight_schema.HardSigmoidLayer.getSizePrefixedRootAsHardSigmoidLayer = function(bb, obj) {
  return (obj || new enlight_schema.HardSigmoidLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.HardSigmoidLayer.startHardSigmoidLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.HardSigmoidLayer.endHardSigmoidLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.HardSigmoidLayer.createHardSigmoidLayer = function(builder) {
  enlight_schema.HardSigmoidLayer.startHardSigmoidLayer(builder);
  return enlight_schema.HardSigmoidLayer.endHardSigmoidLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.HardSwishLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.HardSwishLayer}
 */
enlight_schema.HardSwishLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.HardSwishLayer=} obj
 * @returns {enlight_schema.HardSwishLayer}
 */
enlight_schema.HardSwishLayer.getRootAsHardSwishLayer = function(bb, obj) {
  return (obj || new enlight_schema.HardSwishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.HardSwishLayer=} obj
 * @returns {enlight_schema.HardSwishLayer}
 */
enlight_schema.HardSwishLayer.getSizePrefixedRootAsHardSwishLayer = function(bb, obj) {
  return (obj || new enlight_schema.HardSwishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.HardSwishLayer.startHardSwishLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.HardSwishLayer.endHardSwishLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.HardSwishLayer.createHardSwishLayer = function(builder) {
  enlight_schema.HardSwishLayer.startHardSwishLayer(builder);
  return enlight_schema.HardSwishLayer.endHardSwishLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MishLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MishLayer}
 */
enlight_schema.MishLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishLayer=} obj
 * @returns {enlight_schema.MishLayer}
 */
enlight_schema.MishLayer.getRootAsMishLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishLayer=} obj
 * @returns {enlight_schema.MishLayer}
 */
enlight_schema.MishLayer.getSizePrefixedRootAsMishLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MishLayer.startMishLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishLayer.endMishLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishLayer.createMishLayer = function(builder) {
  enlight_schema.MishLayer.startMishLayer(builder);
  return enlight_schema.MishLayer.endMishLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MishResidualLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MishResidualLayer}
 */
enlight_schema.MishResidualLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishResidualLayer=} obj
 * @returns {enlight_schema.MishResidualLayer}
 */
enlight_schema.MishResidualLayer.getRootAsMishResidualLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishResidualLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishResidualLayer=} obj
 * @returns {enlight_schema.MishResidualLayer}
 */
enlight_schema.MishResidualLayer.getSizePrefixedRootAsMishResidualLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishResidualLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MishResidualLayer.startMishResidualLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishResidualLayer.endMishResidualLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishResidualLayer.createMishResidualLayer = function(builder) {
  enlight_schema.MishResidualLayer.startMishResidualLayer(builder);
  return enlight_schema.MishResidualLayer.endMishResidualLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MishAttentionLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MishAttentionLayer}
 */
enlight_schema.MishAttentionLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishAttentionLayer=} obj
 * @returns {enlight_schema.MishAttentionLayer}
 */
enlight_schema.MishAttentionLayer.getRootAsMishAttentionLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishAttentionLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MishAttentionLayer=} obj
 * @returns {enlight_schema.MishAttentionLayer}
 */
enlight_schema.MishAttentionLayer.getSizePrefixedRootAsMishAttentionLayer = function(bb, obj) {
  return (obj || new enlight_schema.MishAttentionLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MishAttentionLayer.startMishAttentionLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishAttentionLayer.endMishAttentionLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MishAttentionLayer.createMishAttentionLayer = function(builder) {
  enlight_schema.MishAttentionLayer.startMishAttentionLayer(builder);
  return enlight_schema.MishAttentionLayer.endMishAttentionLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AddLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AddLayer}
 */
enlight_schema.AddLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddLayer=} obj
 * @returns {enlight_schema.AddLayer}
 */
enlight_schema.AddLayer.getRootAsAddLayer = function(bb, obj) {
  return (obj || new enlight_schema.AddLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddLayer=} obj
 * @returns {enlight_schema.AddLayer}
 */
enlight_schema.AddLayer.getSizePrefixedRootAsAddLayer = function(bb, obj) {
  return (obj || new enlight_schema.AddLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AddLayer.startAddLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddLayer.endAddLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddLayer.createAddLayer = function(builder) {
  enlight_schema.AddLayer.startAddLayer(builder);
  return enlight_schema.AddLayer.endAddLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SubLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SubLayer}
 */
enlight_schema.SubLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SubLayer=} obj
 * @returns {enlight_schema.SubLayer}
 */
enlight_schema.SubLayer.getRootAsSubLayer = function(bb, obj) {
  return (obj || new enlight_schema.SubLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SubLayer=} obj
 * @returns {enlight_schema.SubLayer}
 */
enlight_schema.SubLayer.getSizePrefixedRootAsSubLayer = function(bb, obj) {
  return (obj || new enlight_schema.SubLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SubLayer.startSubLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SubLayer.endSubLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SubLayer.createSubLayer = function(builder) {
  enlight_schema.SubLayer.startSubLayer(builder);
  return enlight_schema.SubLayer.endSubLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MulLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MulLayer}
 */
enlight_schema.MulLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulLayer=} obj
 * @returns {enlight_schema.MulLayer}
 */
enlight_schema.MulLayer.getRootAsMulLayer = function(bb, obj) {
  return (obj || new enlight_schema.MulLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulLayer=} obj
 * @returns {enlight_schema.MulLayer}
 */
enlight_schema.MulLayer.getSizePrefixedRootAsMulLayer = function(bb, obj) {
  return (obj || new enlight_schema.MulLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MulLayer.startMulLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulLayer.endMulLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulLayer.createMulLayer = function(builder) {
  enlight_schema.MulLayer.startMulLayer(builder);
  return enlight_schema.MulLayer.endMulLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MulConstLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MulConstLayer}
 */
enlight_schema.MulConstLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulConstLayer=} obj
 * @returns {enlight_schema.MulConstLayer}
 */
enlight_schema.MulConstLayer.getRootAsMulConstLayer = function(bb, obj) {
  return (obj || new enlight_schema.MulConstLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulConstLayer=} obj
 * @returns {enlight_schema.MulConstLayer}
 */
enlight_schema.MulConstLayer.getSizePrefixedRootAsMulConstLayer = function(bb, obj) {
  return (obj || new enlight_schema.MulConstLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.MulConstDescriptor=} obj
 * @returns {enlight_schema.MulConstDescriptor|null}
 */
enlight_schema.MulConstLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.MulConstDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MulConstLayer.startMulConstLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.MulConstLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulConstLayer.endMulConstLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulConstLayer.createMulConstLayer = function(builder, descriptorOffset) {
  enlight_schema.MulConstLayer.startMulConstLayer(builder);
  enlight_schema.MulConstLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.MulConstLayer.endMulConstLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.MulConstDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MulConstDescriptor}
 */
enlight_schema.MulConstDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulConstDescriptor=} obj
 * @returns {enlight_schema.MulConstDescriptor}
 */
enlight_schema.MulConstDescriptor.getRootAsMulConstDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.MulConstDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MulConstDescriptor=} obj
 * @returns {enlight_schema.MulConstDescriptor}
 */
enlight_schema.MulConstDescriptor.getSizePrefixedRootAsMulConstDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.MulConstDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.MulConstDescriptor.prototype.val = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MulConstDescriptor.startMulConstDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} val
 */
enlight_schema.MulConstDescriptor.addVal = function(builder, val) {
  builder.addFieldFloat32(0, val, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulConstDescriptor.endMulConstDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} val
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MulConstDescriptor.createMulConstDescriptor = function(builder, val) {
  enlight_schema.MulConstDescriptor.startMulConstDescriptor(builder);
  enlight_schema.MulConstDescriptor.addVal(builder, val);
  return enlight_schema.MulConstDescriptor.endMulConstDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.AddConstLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AddConstLayer}
 */
enlight_schema.AddConstLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddConstLayer=} obj
 * @returns {enlight_schema.AddConstLayer}
 */
enlight_schema.AddConstLayer.getRootAsAddConstLayer = function(bb, obj) {
  return (obj || new enlight_schema.AddConstLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddConstLayer=} obj
 * @returns {enlight_schema.AddConstLayer}
 */
enlight_schema.AddConstLayer.getSizePrefixedRootAsAddConstLayer = function(bb, obj) {
  return (obj || new enlight_schema.AddConstLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.AddConstDescriptor=} obj
 * @returns {enlight_schema.AddConstDescriptor|null}
 */
enlight_schema.AddConstLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.AddConstDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AddConstLayer.startAddConstLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.AddConstLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddConstLayer.endAddConstLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddConstLayer.createAddConstLayer = function(builder, descriptorOffset) {
  enlight_schema.AddConstLayer.startAddConstLayer(builder);
  enlight_schema.AddConstLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.AddConstLayer.endAddConstLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AddConstDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AddConstDescriptor}
 */
enlight_schema.AddConstDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddConstDescriptor=} obj
 * @returns {enlight_schema.AddConstDescriptor}
 */
enlight_schema.AddConstDescriptor.getRootAsAddConstDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.AddConstDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AddConstDescriptor=} obj
 * @returns {enlight_schema.AddConstDescriptor}
 */
enlight_schema.AddConstDescriptor.getSizePrefixedRootAsAddConstDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.AddConstDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.AddConstDescriptor.prototype.val = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.AddConstDescriptor.prototype.isSub = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AddConstDescriptor.startAddConstDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} val
 */
enlight_schema.AddConstDescriptor.addVal = function(builder, val) {
  builder.addFieldFloat32(0, val, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isSub
 */
enlight_schema.AddConstDescriptor.addIsSub = function(builder, isSub) {
  builder.addFieldInt8(1, +isSub, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddConstDescriptor.endAddConstDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} val
 * @param {boolean} isSub
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AddConstDescriptor.createAddConstDescriptor = function(builder, val, isSub) {
  enlight_schema.AddConstDescriptor.startAddConstDescriptor(builder);
  enlight_schema.AddConstDescriptor.addVal(builder, val);
  enlight_schema.AddConstDescriptor.addIsSub(builder, isSub);
  return enlight_schema.AddConstDescriptor.endAddConstDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.DivLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DivLayer}
 */
enlight_schema.DivLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DivLayer=} obj
 * @returns {enlight_schema.DivLayer}
 */
enlight_schema.DivLayer.getRootAsDivLayer = function(bb, obj) {
  return (obj || new enlight_schema.DivLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DivLayer=} obj
 * @returns {enlight_schema.DivLayer}
 */
enlight_schema.DivLayer.getSizePrefixedRootAsDivLayer = function(bb, obj) {
  return (obj || new enlight_schema.DivLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DivLayer.startDivLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DivLayer.endDivLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DivLayer.createDivLayer = function(builder) {
  enlight_schema.DivLayer.startDivLayer(builder);
  return enlight_schema.DivLayer.endDivLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ExpLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ExpLayer}
 */
enlight_schema.ExpLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ExpLayer=} obj
 * @returns {enlight_schema.ExpLayer}
 */
enlight_schema.ExpLayer.getRootAsExpLayer = function(bb, obj) {
  return (obj || new enlight_schema.ExpLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ExpLayer=} obj
 * @returns {enlight_schema.ExpLayer}
 */
enlight_schema.ExpLayer.getSizePrefixedRootAsExpLayer = function(bb, obj) {
  return (obj || new enlight_schema.ExpLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ExpLayer.startExpLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ExpLayer.endExpLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ExpLayer.createExpLayer = function(builder) {
  enlight_schema.ExpLayer.startExpLayer(builder);
  return enlight_schema.ExpLayer.endExpLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.Conv2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Conv2dLayer}
 */
enlight_schema.Conv2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Conv2dLayer=} obj
 * @returns {enlight_schema.Conv2dLayer}
 */
enlight_schema.Conv2dLayer.getRootAsConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.Conv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Conv2dLayer=} obj
 * @returns {enlight_schema.Conv2dLayer}
 */
enlight_schema.Conv2dLayer.getSizePrefixedRootAsConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.Conv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.Conv2dDescriptor=} obj
 * @returns {enlight_schema.Conv2dDescriptor|null}
 */
enlight_schema.Conv2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.Conv2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.Conv2dLayer.prototype.weights = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.Conv2dLayer.prototype.biases = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.VirtualScaleStatistics=} obj
 * @returns {enlight_schema.VirtualScaleStatistics|null}
 */
enlight_schema.Conv2dLayer.prototype.statistics = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new enlight_schema.VirtualScaleStatistics).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dLayer.prototype.VirtualInScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dLayer.prototype.VirtualOutScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Conv2dLayer.startConv2dLayer = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.Conv2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} weightsOffset
 */
enlight_schema.Conv2dLayer.addWeights = function(builder, weightsOffset) {
  builder.addFieldOffset(1, weightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} biasesOffset
 */
enlight_schema.Conv2dLayer.addBiases = function(builder, biasesOffset) {
  builder.addFieldOffset(2, biasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} statisticsOffset
 */
enlight_schema.Conv2dLayer.addStatistics = function(builder, statisticsOffset) {
  builder.addFieldOffset(3, statisticsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} VirtualInScale
 */
enlight_schema.Conv2dLayer.addVirtualInScale = function(builder, VirtualInScale) {
  builder.addFieldFloat32(4, VirtualInScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} VirtualOutScale
 */
enlight_schema.Conv2dLayer.addVirtualOutScale = function(builder, VirtualOutScale) {
  builder.addFieldFloat32(5, VirtualOutScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Conv2dLayer.endConv2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} weightsOffset
 * @param {flatbuffers.Offset} biasesOffset
 * @param {flatbuffers.Offset} statisticsOffset
 * @param {number} VirtualInScale
 * @param {number} VirtualOutScale
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Conv2dLayer.createConv2dLayer = function(builder, descriptorOffset, weightsOffset, biasesOffset, statisticsOffset, VirtualInScale, VirtualOutScale) {
  enlight_schema.Conv2dLayer.startConv2dLayer(builder);
  enlight_schema.Conv2dLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.Conv2dLayer.addWeights(builder, weightsOffset);
  enlight_schema.Conv2dLayer.addBiases(builder, biasesOffset);
  enlight_schema.Conv2dLayer.addStatistics(builder, statisticsOffset);
  enlight_schema.Conv2dLayer.addVirtualInScale(builder, VirtualInScale);
  enlight_schema.Conv2dLayer.addVirtualOutScale(builder, VirtualOutScale);
  return enlight_schema.Conv2dLayer.endConv2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.Conv2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Conv2dDescriptor}
 */
enlight_schema.Conv2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Conv2dDescriptor=} obj
 * @returns {enlight_schema.Conv2dDescriptor}
 */
enlight_schema.Conv2dDescriptor.getRootAsConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Conv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Conv2dDescriptor=} obj
 * @returns {enlight_schema.Conv2dDescriptor}
 */
enlight_schema.Conv2dDescriptor.getSizePrefixedRootAsConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Conv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.inChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.outChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.kernelWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.kernelHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.padWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.padHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.strideX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.strideY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.dilationX = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.dilationY = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {boolean}
 */
enlight_schema.Conv2dDescriptor.prototype.biasEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.Conv2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.quantizedBitwidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 8;
};

/**
 * @returns {boolean}
 */
enlight_schema.Conv2dDescriptor.prototype.existBitConverter = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.Conv2dDescriptor.prototype.groups = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Conv2dDescriptor.startConv2dDescriptor = function(builder) {
  builder.startObject(15);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 */
enlight_schema.Conv2dDescriptor.addInChannels = function(builder, inChannels) {
  builder.addFieldInt32(0, inChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outChannels
 */
enlight_schema.Conv2dDescriptor.addOutChannels = function(builder, outChannels) {
  builder.addFieldInt32(1, outChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelWidth
 */
enlight_schema.Conv2dDescriptor.addKernelWidth = function(builder, kernelWidth) {
  builder.addFieldInt32(2, kernelWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelHeight
 */
enlight_schema.Conv2dDescriptor.addKernelHeight = function(builder, kernelHeight) {
  builder.addFieldInt32(3, kernelHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 */
enlight_schema.Conv2dDescriptor.addPadWidth = function(builder, padWidth) {
  builder.addFieldInt32(4, padWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padHeight
 */
enlight_schema.Conv2dDescriptor.addPadHeight = function(builder, padHeight) {
  builder.addFieldInt32(5, padHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideX
 */
enlight_schema.Conv2dDescriptor.addStrideX = function(builder, strideX) {
  builder.addFieldInt32(6, strideX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideY
 */
enlight_schema.Conv2dDescriptor.addStrideY = function(builder, strideY) {
  builder.addFieldInt32(7, strideY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationX
 */
enlight_schema.Conv2dDescriptor.addDilationX = function(builder, dilationX) {
  builder.addFieldInt32(8, dilationX, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationY
 */
enlight_schema.Conv2dDescriptor.addDilationY = function(builder, dilationY) {
  builder.addFieldInt32(9, dilationY, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 */
enlight_schema.Conv2dDescriptor.addBiasEnabled = function(builder, biasEnabled) {
  builder.addFieldInt8(10, +biasEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.Conv2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(11, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} quantizedBitwidth
 */
enlight_schema.Conv2dDescriptor.addQuantizedBitwidth = function(builder, quantizedBitwidth) {
  builder.addFieldInt32(12, quantizedBitwidth, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} existBitConverter
 */
enlight_schema.Conv2dDescriptor.addExistBitConverter = function(builder, existBitConverter) {
  builder.addFieldInt8(13, +existBitConverter, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} groups
 */
enlight_schema.Conv2dDescriptor.addGroups = function(builder, groups) {
  builder.addFieldInt32(14, groups, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Conv2dDescriptor.endConv2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 * @param {number} outChannels
 * @param {number} kernelWidth
 * @param {number} kernelHeight
 * @param {number} padWidth
 * @param {number} padHeight
 * @param {number} strideX
 * @param {number} strideY
 * @param {number} dilationX
 * @param {number} dilationY
 * @param {boolean} biasEnabled
 * @param {enlight_schema.DataLayout} dataLayout
 * @param {number} quantizedBitwidth
 * @param {boolean} existBitConverter
 * @param {number} groups
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Conv2dDescriptor.createConv2dDescriptor = function(builder, inChannels, outChannels, kernelWidth, kernelHeight, padWidth, padHeight, strideX, strideY, dilationX, dilationY, biasEnabled, dataLayout, quantizedBitwidth, existBitConverter, groups) {
  enlight_schema.Conv2dDescriptor.startConv2dDescriptor(builder);
  enlight_schema.Conv2dDescriptor.addInChannels(builder, inChannels);
  enlight_schema.Conv2dDescriptor.addOutChannels(builder, outChannels);
  enlight_schema.Conv2dDescriptor.addKernelWidth(builder, kernelWidth);
  enlight_schema.Conv2dDescriptor.addKernelHeight(builder, kernelHeight);
  enlight_schema.Conv2dDescriptor.addPadWidth(builder, padWidth);
  enlight_schema.Conv2dDescriptor.addPadHeight(builder, padHeight);
  enlight_schema.Conv2dDescriptor.addStrideX(builder, strideX);
  enlight_schema.Conv2dDescriptor.addStrideY(builder, strideY);
  enlight_schema.Conv2dDescriptor.addDilationX(builder, dilationX);
  enlight_schema.Conv2dDescriptor.addDilationY(builder, dilationY);
  enlight_schema.Conv2dDescriptor.addBiasEnabled(builder, biasEnabled);
  enlight_schema.Conv2dDescriptor.addDataLayout(builder, dataLayout);
  enlight_schema.Conv2dDescriptor.addQuantizedBitwidth(builder, quantizedBitwidth);
  enlight_schema.Conv2dDescriptor.addExistBitConverter(builder, existBitConverter);
  enlight_schema.Conv2dDescriptor.addGroups(builder, groups);
  return enlight_schema.Conv2dDescriptor.endConv2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualScaleStatistics = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualScaleStatistics}
 */
enlight_schema.VirtualScaleStatistics.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScaleStatistics=} obj
 * @returns {enlight_schema.VirtualScaleStatistics}
 */
enlight_schema.VirtualScaleStatistics.getRootAsVirtualScaleStatistics = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScaleStatistics).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScaleStatistics=} obj
 * @returns {enlight_schema.VirtualScaleStatistics}
 */
enlight_schema.VirtualScaleStatistics.getSizePrefixedRootAsVirtualScaleStatistics = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScaleStatistics).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScaleStatistics.prototype.min = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : -1.0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScaleStatistics.prototype.max = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 1.0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScaleStatistics.prototype.mean = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScaleStatistics.prototype.std = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 1.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.VirtualScaleStatistics.prototype.statisticsEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualScaleStatistics.startVirtualScaleStatistics = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 */
enlight_schema.VirtualScaleStatistics.addMin = function(builder, min) {
  builder.addFieldFloat32(0, min, -1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} max
 */
enlight_schema.VirtualScaleStatistics.addMax = function(builder, max) {
  builder.addFieldFloat32(1, max, 1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mean
 */
enlight_schema.VirtualScaleStatistics.addMean = function(builder, mean) {
  builder.addFieldFloat32(2, mean, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} std
 */
enlight_schema.VirtualScaleStatistics.addStd = function(builder, std) {
  builder.addFieldFloat32(3, std, 1.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} statisticsEnabled
 */
enlight_schema.VirtualScaleStatistics.addStatisticsEnabled = function(builder, statisticsEnabled) {
  builder.addFieldInt8(4, +statisticsEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScaleStatistics.endVirtualScaleStatistics = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 * @param {number} max
 * @param {number} mean
 * @param {number} std
 * @param {boolean} statisticsEnabled
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScaleStatistics.createVirtualScaleStatistics = function(builder, min, max, mean, std, statisticsEnabled) {
  enlight_schema.VirtualScaleStatistics.startVirtualScaleStatistics(builder);
  enlight_schema.VirtualScaleStatistics.addMin(builder, min);
  enlight_schema.VirtualScaleStatistics.addMax(builder, max);
  enlight_schema.VirtualScaleStatistics.addMean(builder, mean);
  enlight_schema.VirtualScaleStatistics.addStd(builder, std);
  enlight_schema.VirtualScaleStatistics.addStatisticsEnabled(builder, statisticsEnabled);
  return enlight_schema.VirtualScaleStatistics.endVirtualScaleStatistics(builder);
}

/**
 * @constructor
 */
enlight_schema.DwConv2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DwConv2dLayer}
 */
enlight_schema.DwConv2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DwConv2dLayer=} obj
 * @returns {enlight_schema.DwConv2dLayer}
 */
enlight_schema.DwConv2dLayer.getRootAsDwConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.DwConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DwConv2dLayer=} obj
 * @returns {enlight_schema.DwConv2dLayer}
 */
enlight_schema.DwConv2dLayer.getSizePrefixedRootAsDwConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.DwConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.DwConv2dDescriptor=} obj
 * @returns {enlight_schema.DwConv2dDescriptor|null}
 */
enlight_schema.DwConv2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.DwConv2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.DwConv2dLayer.prototype.weights = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.DwConv2dLayer.prototype.biases = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DwConv2dLayer.startDwConv2dLayer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.DwConv2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} weightsOffset
 */
enlight_schema.DwConv2dLayer.addWeights = function(builder, weightsOffset) {
  builder.addFieldOffset(1, weightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} biasesOffset
 */
enlight_schema.DwConv2dLayer.addBiases = function(builder, biasesOffset) {
  builder.addFieldOffset(2, biasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DwConv2dLayer.endDwConv2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} weightsOffset
 * @param {flatbuffers.Offset} biasesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DwConv2dLayer.createDwConv2dLayer = function(builder, descriptorOffset, weightsOffset, biasesOffset) {
  enlight_schema.DwConv2dLayer.startDwConv2dLayer(builder);
  enlight_schema.DwConv2dLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.DwConv2dLayer.addWeights(builder, weightsOffset);
  enlight_schema.DwConv2dLayer.addBiases(builder, biasesOffset);
  return enlight_schema.DwConv2dLayer.endDwConv2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.DwConv2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DwConv2dDescriptor}
 */
enlight_schema.DwConv2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DwConv2dDescriptor=} obj
 * @returns {enlight_schema.DwConv2dDescriptor}
 */
enlight_schema.DwConv2dDescriptor.getRootAsDwConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DwConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DwConv2dDescriptor=} obj
 * @returns {enlight_schema.DwConv2dDescriptor}
 */
enlight_schema.DwConv2dDescriptor.getSizePrefixedRootAsDwConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DwConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.inChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.outChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.kernelWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.kernelHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.padWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.padHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.strideX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.strideY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.groups = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.dilationX = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {number}
 */
enlight_schema.DwConv2dDescriptor.prototype.dilationY = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {boolean}
 */
enlight_schema.DwConv2dDescriptor.prototype.biasEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.DwConv2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DwConv2dDescriptor.startDwConv2dDescriptor = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 */
enlight_schema.DwConv2dDescriptor.addInChannels = function(builder, inChannels) {
  builder.addFieldInt32(0, inChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outChannels
 */
enlight_schema.DwConv2dDescriptor.addOutChannels = function(builder, outChannels) {
  builder.addFieldInt32(1, outChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelWidth
 */
enlight_schema.DwConv2dDescriptor.addKernelWidth = function(builder, kernelWidth) {
  builder.addFieldInt32(2, kernelWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelHeight
 */
enlight_schema.DwConv2dDescriptor.addKernelHeight = function(builder, kernelHeight) {
  builder.addFieldInt32(3, kernelHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 */
enlight_schema.DwConv2dDescriptor.addPadWidth = function(builder, padWidth) {
  builder.addFieldInt32(4, padWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padHeight
 */
enlight_schema.DwConv2dDescriptor.addPadHeight = function(builder, padHeight) {
  builder.addFieldInt32(5, padHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideX
 */
enlight_schema.DwConv2dDescriptor.addStrideX = function(builder, strideX) {
  builder.addFieldInt32(6, strideX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideY
 */
enlight_schema.DwConv2dDescriptor.addStrideY = function(builder, strideY) {
  builder.addFieldInt32(7, strideY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} groups
 */
enlight_schema.DwConv2dDescriptor.addGroups = function(builder, groups) {
  builder.addFieldInt32(8, groups, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationX
 */
enlight_schema.DwConv2dDescriptor.addDilationX = function(builder, dilationX) {
  builder.addFieldInt32(9, dilationX, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationY
 */
enlight_schema.DwConv2dDescriptor.addDilationY = function(builder, dilationY) {
  builder.addFieldInt32(10, dilationY, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 */
enlight_schema.DwConv2dDescriptor.addBiasEnabled = function(builder, biasEnabled) {
  builder.addFieldInt8(11, +biasEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.DwConv2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(12, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DwConv2dDescriptor.endDwConv2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 * @param {number} outChannels
 * @param {number} kernelWidth
 * @param {number} kernelHeight
 * @param {number} padWidth
 * @param {number} padHeight
 * @param {number} strideX
 * @param {number} strideY
 * @param {number} groups
 * @param {number} dilationX
 * @param {number} dilationY
 * @param {boolean} biasEnabled
 * @param {enlight_schema.DataLayout} dataLayout
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DwConv2dDescriptor.createDwConv2dDescriptor = function(builder, inChannels, outChannels, kernelWidth, kernelHeight, padWidth, padHeight, strideX, strideY, groups, dilationX, dilationY, biasEnabled, dataLayout) {
  enlight_schema.DwConv2dDescriptor.startDwConv2dDescriptor(builder);
  enlight_schema.DwConv2dDescriptor.addInChannels(builder, inChannels);
  enlight_schema.DwConv2dDescriptor.addOutChannels(builder, outChannels);
  enlight_schema.DwConv2dDescriptor.addKernelWidth(builder, kernelWidth);
  enlight_schema.DwConv2dDescriptor.addKernelHeight(builder, kernelHeight);
  enlight_schema.DwConv2dDescriptor.addPadWidth(builder, padWidth);
  enlight_schema.DwConv2dDescriptor.addPadHeight(builder, padHeight);
  enlight_schema.DwConv2dDescriptor.addStrideX(builder, strideX);
  enlight_schema.DwConv2dDescriptor.addStrideY(builder, strideY);
  enlight_schema.DwConv2dDescriptor.addGroups(builder, groups);
  enlight_schema.DwConv2dDescriptor.addDilationX(builder, dilationX);
  enlight_schema.DwConv2dDescriptor.addDilationY(builder, dilationY);
  enlight_schema.DwConv2dDescriptor.addBiasEnabled(builder, biasEnabled);
  enlight_schema.DwConv2dDescriptor.addDataLayout(builder, dataLayout);
  return enlight_schema.DwConv2dDescriptor.endDwConv2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.TransposedConv2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.TransposedConv2dLayer}
 */
enlight_schema.TransposedConv2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TransposedConv2dLayer=} obj
 * @returns {enlight_schema.TransposedConv2dLayer}
 */
enlight_schema.TransposedConv2dLayer.getRootAsTransposedConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.TransposedConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TransposedConv2dLayer=} obj
 * @returns {enlight_schema.TransposedConv2dLayer}
 */
enlight_schema.TransposedConv2dLayer.getSizePrefixedRootAsTransposedConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.TransposedConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.TransposedConv2dDescriptor=} obj
 * @returns {enlight_schema.TransposedConv2dDescriptor|null}
 */
enlight_schema.TransposedConv2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.TransposedConv2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.TransposedConv2dLayer.prototype.weights = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.TransposedConv2dLayer.prototype.biases = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.TransposedConv2dLayer.startTransposedConv2dLayer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.TransposedConv2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} weightsOffset
 */
enlight_schema.TransposedConv2dLayer.addWeights = function(builder, weightsOffset) {
  builder.addFieldOffset(1, weightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} biasesOffset
 */
enlight_schema.TransposedConv2dLayer.addBiases = function(builder, biasesOffset) {
  builder.addFieldOffset(2, biasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TransposedConv2dLayer.endTransposedConv2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} weightsOffset
 * @param {flatbuffers.Offset} biasesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TransposedConv2dLayer.createTransposedConv2dLayer = function(builder, descriptorOffset, weightsOffset, biasesOffset) {
  enlight_schema.TransposedConv2dLayer.startTransposedConv2dLayer(builder);
  enlight_schema.TransposedConv2dLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.TransposedConv2dLayer.addWeights(builder, weightsOffset);
  enlight_schema.TransposedConv2dLayer.addBiases(builder, biasesOffset);
  return enlight_schema.TransposedConv2dLayer.endTransposedConv2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.TransposedConv2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.TransposedConv2dDescriptor}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TransposedConv2dDescriptor=} obj
 * @returns {enlight_schema.TransposedConv2dDescriptor}
 */
enlight_schema.TransposedConv2dDescriptor.getRootAsTransposedConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.TransposedConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.TransposedConv2dDescriptor=} obj
 * @returns {enlight_schema.TransposedConv2dDescriptor}
 */
enlight_schema.TransposedConv2dDescriptor.getSizePrefixedRootAsTransposedConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.TransposedConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.inChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.outChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.kernelWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.kernelHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.padWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.padHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.strideX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.strideY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.dilationX = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.dilationY = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {boolean}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.biasEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @returns {number}
 */
enlight_schema.TransposedConv2dDescriptor.prototype.groups = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.TransposedConv2dDescriptor.startTransposedConv2dDescriptor = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 */
enlight_schema.TransposedConv2dDescriptor.addInChannels = function(builder, inChannels) {
  builder.addFieldInt32(0, inChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outChannels
 */
enlight_schema.TransposedConv2dDescriptor.addOutChannels = function(builder, outChannels) {
  builder.addFieldInt32(1, outChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelWidth
 */
enlight_schema.TransposedConv2dDescriptor.addKernelWidth = function(builder, kernelWidth) {
  builder.addFieldInt32(2, kernelWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelHeight
 */
enlight_schema.TransposedConv2dDescriptor.addKernelHeight = function(builder, kernelHeight) {
  builder.addFieldInt32(3, kernelHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 */
enlight_schema.TransposedConv2dDescriptor.addPadWidth = function(builder, padWidth) {
  builder.addFieldInt32(4, padWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padHeight
 */
enlight_schema.TransposedConv2dDescriptor.addPadHeight = function(builder, padHeight) {
  builder.addFieldInt32(5, padHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideX
 */
enlight_schema.TransposedConv2dDescriptor.addStrideX = function(builder, strideX) {
  builder.addFieldInt32(6, strideX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideY
 */
enlight_schema.TransposedConv2dDescriptor.addStrideY = function(builder, strideY) {
  builder.addFieldInt32(7, strideY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationX
 */
enlight_schema.TransposedConv2dDescriptor.addDilationX = function(builder, dilationX) {
  builder.addFieldInt32(8, dilationX, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationY
 */
enlight_schema.TransposedConv2dDescriptor.addDilationY = function(builder, dilationY) {
  builder.addFieldInt32(9, dilationY, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 */
enlight_schema.TransposedConv2dDescriptor.addBiasEnabled = function(builder, biasEnabled) {
  builder.addFieldInt8(10, +biasEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.TransposedConv2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(11, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} groups
 */
enlight_schema.TransposedConv2dDescriptor.addGroups = function(builder, groups) {
  builder.addFieldInt32(12, groups, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TransposedConv2dDescriptor.endTransposedConv2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 * @param {number} outChannels
 * @param {number} kernelWidth
 * @param {number} kernelHeight
 * @param {number} padWidth
 * @param {number} padHeight
 * @param {number} strideX
 * @param {number} strideY
 * @param {number} dilationX
 * @param {number} dilationY
 * @param {boolean} biasEnabled
 * @param {enlight_schema.DataLayout} dataLayout
 * @param {number} groups
 * @returns {flatbuffers.Offset}
 */
enlight_schema.TransposedConv2dDescriptor.createTransposedConv2dDescriptor = function(builder, inChannels, outChannels, kernelWidth, kernelHeight, padWidth, padHeight, strideX, strideY, dilationX, dilationY, biasEnabled, dataLayout, groups) {
  enlight_schema.TransposedConv2dDescriptor.startTransposedConv2dDescriptor(builder);
  enlight_schema.TransposedConv2dDescriptor.addInChannels(builder, inChannels);
  enlight_schema.TransposedConv2dDescriptor.addOutChannels(builder, outChannels);
  enlight_schema.TransposedConv2dDescriptor.addKernelWidth(builder, kernelWidth);
  enlight_schema.TransposedConv2dDescriptor.addKernelHeight(builder, kernelHeight);
  enlight_schema.TransposedConv2dDescriptor.addPadWidth(builder, padWidth);
  enlight_schema.TransposedConv2dDescriptor.addPadHeight(builder, padHeight);
  enlight_schema.TransposedConv2dDescriptor.addStrideX(builder, strideX);
  enlight_schema.TransposedConv2dDescriptor.addStrideY(builder, strideY);
  enlight_schema.TransposedConv2dDescriptor.addDilationX(builder, dilationX);
  enlight_schema.TransposedConv2dDescriptor.addDilationY(builder, dilationY);
  enlight_schema.TransposedConv2dDescriptor.addBiasEnabled(builder, biasEnabled);
  enlight_schema.TransposedConv2dDescriptor.addDataLayout(builder, dataLayout);
  enlight_schema.TransposedConv2dDescriptor.addGroups(builder, groups);
  return enlight_schema.TransposedConv2dDescriptor.endTransposedConv2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.BatchNorm2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.BatchNorm2dLayer}
 */
enlight_schema.BatchNorm2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.BatchNorm2dLayer=} obj
 * @returns {enlight_schema.BatchNorm2dLayer}
 */
enlight_schema.BatchNorm2dLayer.getRootAsBatchNorm2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.BatchNorm2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.BatchNorm2dLayer=} obj
 * @returns {enlight_schema.BatchNorm2dLayer}
 */
enlight_schema.BatchNorm2dLayer.getSizePrefixedRootAsBatchNorm2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.BatchNorm2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.BatchNorm2dDescriptor=} obj
 * @returns {enlight_schema.BatchNorm2dDescriptor|null}
 */
enlight_schema.BatchNorm2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.BatchNorm2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.BatchNorm2dLayer.prototype.mean = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.BatchNorm2dLayer.prototype.variance = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.BatchNorm2dLayer.prototype.beta = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.BatchNorm2dLayer.prototype.gamma = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.BatchNorm2dLayer.prototype.eps = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.BatchNorm2dLayer.startBatchNorm2dLayer = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.BatchNorm2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} meanOffset
 */
enlight_schema.BatchNorm2dLayer.addMean = function(builder, meanOffset) {
  builder.addFieldOffset(1, meanOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} varianceOffset
 */
enlight_schema.BatchNorm2dLayer.addVariance = function(builder, varianceOffset) {
  builder.addFieldOffset(2, varianceOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} betaOffset
 */
enlight_schema.BatchNorm2dLayer.addBeta = function(builder, betaOffset) {
  builder.addFieldOffset(3, betaOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} gammaOffset
 */
enlight_schema.BatchNorm2dLayer.addGamma = function(builder, gammaOffset) {
  builder.addFieldOffset(4, gammaOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} eps
 */
enlight_schema.BatchNorm2dLayer.addEps = function(builder, eps) {
  builder.addFieldFloat32(5, eps, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.BatchNorm2dLayer.endBatchNorm2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} meanOffset
 * @param {flatbuffers.Offset} varianceOffset
 * @param {flatbuffers.Offset} betaOffset
 * @param {flatbuffers.Offset} gammaOffset
 * @param {number} eps
 * @returns {flatbuffers.Offset}
 */
enlight_schema.BatchNorm2dLayer.createBatchNorm2dLayer = function(builder, descriptorOffset, meanOffset, varianceOffset, betaOffset, gammaOffset, eps) {
  enlight_schema.BatchNorm2dLayer.startBatchNorm2dLayer(builder);
  enlight_schema.BatchNorm2dLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.BatchNorm2dLayer.addMean(builder, meanOffset);
  enlight_schema.BatchNorm2dLayer.addVariance(builder, varianceOffset);
  enlight_schema.BatchNorm2dLayer.addBeta(builder, betaOffset);
  enlight_schema.BatchNorm2dLayer.addGamma(builder, gammaOffset);
  enlight_schema.BatchNorm2dLayer.addEps(builder, eps);
  return enlight_schema.BatchNorm2dLayer.endBatchNorm2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.BatchNorm2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.BatchNorm2dDescriptor}
 */
enlight_schema.BatchNorm2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.BatchNorm2dDescriptor=} obj
 * @returns {enlight_schema.BatchNorm2dDescriptor}
 */
enlight_schema.BatchNorm2dDescriptor.getRootAsBatchNorm2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.BatchNorm2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.BatchNorm2dDescriptor=} obj
 * @returns {enlight_schema.BatchNorm2dDescriptor}
 */
enlight_schema.BatchNorm2dDescriptor.getSizePrefixedRootAsBatchNorm2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.BatchNorm2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.BatchNorm2dDescriptor.prototype.eps = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.BatchNorm2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NHWC;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.BatchNorm2dDescriptor.startBatchNorm2dDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} eps
 */
enlight_schema.BatchNorm2dDescriptor.addEps = function(builder, eps) {
  builder.addFieldFloat32(0, eps, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.BatchNorm2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(1, dataLayout, enlight_schema.DataLayout.NHWC);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.BatchNorm2dDescriptor.endBatchNorm2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} eps
 * @param {enlight_schema.DataLayout} dataLayout
 * @returns {flatbuffers.Offset}
 */
enlight_schema.BatchNorm2dDescriptor.createBatchNorm2dDescriptor = function(builder, eps, dataLayout) {
  enlight_schema.BatchNorm2dDescriptor.startBatchNorm2dDescriptor(builder);
  enlight_schema.BatchNorm2dDescriptor.addEps(builder, eps);
  enlight_schema.BatchNorm2dDescriptor.addDataLayout(builder, dataLayout);
  return enlight_schema.BatchNorm2dDescriptor.endBatchNorm2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.MaxPool2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MaxPool2dLayer}
 */
enlight_schema.MaxPool2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MaxPool2dLayer=} obj
 * @returns {enlight_schema.MaxPool2dLayer}
 */
enlight_schema.MaxPool2dLayer.getRootAsMaxPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.MaxPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MaxPool2dLayer=} obj
 * @returns {enlight_schema.MaxPool2dLayer}
 */
enlight_schema.MaxPool2dLayer.getSizePrefixedRootAsMaxPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.MaxPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.Pool2dDescriptor=} obj
 * @returns {enlight_schema.Pool2dDescriptor|null}
 */
enlight_schema.MaxPool2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.Pool2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MaxPool2dLayer.startMaxPool2dLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.MaxPool2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MaxPool2dLayer.endMaxPool2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MaxPool2dLayer.createMaxPool2dLayer = function(builder, descriptorOffset) {
  enlight_schema.MaxPool2dLayer.startMaxPool2dLayer(builder);
  enlight_schema.MaxPool2dLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.MaxPool2dLayer.endMaxPool2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AvgPool2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AvgPool2dLayer}
 */
enlight_schema.AvgPool2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AvgPool2dLayer=} obj
 * @returns {enlight_schema.AvgPool2dLayer}
 */
enlight_schema.AvgPool2dLayer.getRootAsAvgPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AvgPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AvgPool2dLayer=} obj
 * @returns {enlight_schema.AvgPool2dLayer}
 */
enlight_schema.AvgPool2dLayer.getSizePrefixedRootAsAvgPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AvgPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.Pool2dDescriptor=} obj
 * @returns {enlight_schema.Pool2dDescriptor|null}
 */
enlight_schema.AvgPool2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.Pool2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AvgPool2dLayer.startAvgPool2dLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.AvgPool2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AvgPool2dLayer.endAvgPool2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AvgPool2dLayer.createAvgPool2dLayer = function(builder, descriptorOffset) {
  enlight_schema.AvgPool2dLayer.startAvgPool2dLayer(builder);
  enlight_schema.AvgPool2dLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.AvgPool2dLayer.endAvgPool2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.Pool2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Pool2dDescriptor}
 */
enlight_schema.Pool2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Pool2dDescriptor=} obj
 * @returns {enlight_schema.Pool2dDescriptor}
 */
enlight_schema.Pool2dDescriptor.getRootAsPool2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Pool2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Pool2dDescriptor=} obj
 * @returns {enlight_schema.Pool2dDescriptor}
 */
enlight_schema.Pool2dDescriptor.getSizePrefixedRootAsPool2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Pool2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.padWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.padHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.poolWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.poolHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.strideX = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.strideY = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.dilationX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {number}
 */
enlight_schema.Pool2dDescriptor.prototype.dilationY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1;
};

/**
 * @returns {enlight_schema.CeilMode}
 */
enlight_schema.Pool2dDescriptor.prototype.ceilMode = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? /** @type {enlight_schema.CeilMode} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.CeilMode.Floor;
};

/**
 * @returns {enlight_schema.PaddingMethod}
 */
enlight_schema.Pool2dDescriptor.prototype.paddingMethod = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {enlight_schema.PaddingMethod} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.PaddingMethod.Exclude;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.Pool2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @returns {boolean}
 */
enlight_schema.Pool2dDescriptor.prototype.enableRound = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Pool2dDescriptor.startPool2dDescriptor = function(builder) {
  builder.startObject(12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 */
enlight_schema.Pool2dDescriptor.addPadWidth = function(builder, padWidth) {
  builder.addFieldInt32(0, padWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padHeight
 */
enlight_schema.Pool2dDescriptor.addPadHeight = function(builder, padHeight) {
  builder.addFieldInt32(1, padHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} poolWidth
 */
enlight_schema.Pool2dDescriptor.addPoolWidth = function(builder, poolWidth) {
  builder.addFieldInt32(2, poolWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} poolHeight
 */
enlight_schema.Pool2dDescriptor.addPoolHeight = function(builder, poolHeight) {
  builder.addFieldInt32(3, poolHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideX
 */
enlight_schema.Pool2dDescriptor.addStrideX = function(builder, strideX) {
  builder.addFieldInt32(4, strideX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideY
 */
enlight_schema.Pool2dDescriptor.addStrideY = function(builder, strideY) {
  builder.addFieldInt32(5, strideY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationX
 */
enlight_schema.Pool2dDescriptor.addDilationX = function(builder, dilationX) {
  builder.addFieldInt32(6, dilationX, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationY
 */
enlight_schema.Pool2dDescriptor.addDilationY = function(builder, dilationY) {
  builder.addFieldInt32(7, dilationY, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.CeilMode} ceilMode
 */
enlight_schema.Pool2dDescriptor.addCeilMode = function(builder, ceilMode) {
  builder.addFieldInt8(8, ceilMode, enlight_schema.CeilMode.Floor);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.PaddingMethod} paddingMethod
 */
enlight_schema.Pool2dDescriptor.addPaddingMethod = function(builder, paddingMethod) {
  builder.addFieldInt8(9, paddingMethod, enlight_schema.PaddingMethod.Exclude);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.Pool2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(10, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} enableRound
 */
enlight_schema.Pool2dDescriptor.addEnableRound = function(builder, enableRound) {
  builder.addFieldInt8(11, +enableRound, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Pool2dDescriptor.endPool2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 * @param {number} padHeight
 * @param {number} poolWidth
 * @param {number} poolHeight
 * @param {number} strideX
 * @param {number} strideY
 * @param {number} dilationX
 * @param {number} dilationY
 * @param {enlight_schema.CeilMode} ceilMode
 * @param {enlight_schema.PaddingMethod} paddingMethod
 * @param {enlight_schema.DataLayout} dataLayout
 * @param {boolean} enableRound
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Pool2dDescriptor.createPool2dDescriptor = function(builder, padWidth, padHeight, poolWidth, poolHeight, strideX, strideY, dilationX, dilationY, ceilMode, paddingMethod, dataLayout, enableRound) {
  enlight_schema.Pool2dDescriptor.startPool2dDescriptor(builder);
  enlight_schema.Pool2dDescriptor.addPadWidth(builder, padWidth);
  enlight_schema.Pool2dDescriptor.addPadHeight(builder, padHeight);
  enlight_schema.Pool2dDescriptor.addPoolWidth(builder, poolWidth);
  enlight_schema.Pool2dDescriptor.addPoolHeight(builder, poolHeight);
  enlight_schema.Pool2dDescriptor.addStrideX(builder, strideX);
  enlight_schema.Pool2dDescriptor.addStrideY(builder, strideY);
  enlight_schema.Pool2dDescriptor.addDilationX(builder, dilationX);
  enlight_schema.Pool2dDescriptor.addDilationY(builder, dilationY);
  enlight_schema.Pool2dDescriptor.addCeilMode(builder, ceilMode);
  enlight_schema.Pool2dDescriptor.addPaddingMethod(builder, paddingMethod);
  enlight_schema.Pool2dDescriptor.addDataLayout(builder, dataLayout);
  enlight_schema.Pool2dDescriptor.addEnableRound(builder, enableRound);
  return enlight_schema.Pool2dDescriptor.endPool2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.AdaptiveMaxPool2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AdaptiveMaxPool2dLayer}
 */
enlight_schema.AdaptiveMaxPool2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptiveMaxPool2dLayer=} obj
 * @returns {enlight_schema.AdaptiveMaxPool2dLayer}
 */
enlight_schema.AdaptiveMaxPool2dLayer.getRootAsAdaptiveMaxPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AdaptiveMaxPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptiveMaxPool2dLayer=} obj
 * @returns {enlight_schema.AdaptiveMaxPool2dLayer}
 */
enlight_schema.AdaptiveMaxPool2dLayer.getSizePrefixedRootAsAdaptiveMaxPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AdaptiveMaxPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.AdaptivePool2dDescriptor=} obj
 * @returns {enlight_schema.AdaptivePool2dDescriptor|null}
 */
enlight_schema.AdaptiveMaxPool2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.AdaptivePool2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AdaptiveMaxPool2dLayer.startAdaptiveMaxPool2dLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.AdaptiveMaxPool2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptiveMaxPool2dLayer.endAdaptiveMaxPool2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptiveMaxPool2dLayer.createAdaptiveMaxPool2dLayer = function(builder, descriptorOffset) {
  enlight_schema.AdaptiveMaxPool2dLayer.startAdaptiveMaxPool2dLayer(builder);
  enlight_schema.AdaptiveMaxPool2dLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.AdaptiveMaxPool2dLayer.endAdaptiveMaxPool2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AdaptiveAvgPool2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AdaptiveAvgPool2dLayer}
 */
enlight_schema.AdaptiveAvgPool2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptiveAvgPool2dLayer=} obj
 * @returns {enlight_schema.AdaptiveAvgPool2dLayer}
 */
enlight_schema.AdaptiveAvgPool2dLayer.getRootAsAdaptiveAvgPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AdaptiveAvgPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptiveAvgPool2dLayer=} obj
 * @returns {enlight_schema.AdaptiveAvgPool2dLayer}
 */
enlight_schema.AdaptiveAvgPool2dLayer.getSizePrefixedRootAsAdaptiveAvgPool2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.AdaptiveAvgPool2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.AdaptivePool2dDescriptor=} obj
 * @returns {enlight_schema.AdaptivePool2dDescriptor|null}
 */
enlight_schema.AdaptiveAvgPool2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.AdaptivePool2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AdaptiveAvgPool2dLayer.startAdaptiveAvgPool2dLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.AdaptiveAvgPool2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptiveAvgPool2dLayer.endAdaptiveAvgPool2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptiveAvgPool2dLayer.createAdaptiveAvgPool2dLayer = function(builder, descriptorOffset) {
  enlight_schema.AdaptiveAvgPool2dLayer.startAdaptiveAvgPool2dLayer(builder);
  enlight_schema.AdaptiveAvgPool2dLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.AdaptiveAvgPool2dLayer.endAdaptiveAvgPool2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AdaptivePool2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AdaptivePool2dDescriptor}
 */
enlight_schema.AdaptivePool2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptivePool2dDescriptor=} obj
 * @returns {enlight_schema.AdaptivePool2dDescriptor}
 */
enlight_schema.AdaptivePool2dDescriptor.getRootAsAdaptivePool2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.AdaptivePool2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AdaptivePool2dDescriptor=} obj
 * @returns {enlight_schema.AdaptivePool2dDescriptor}
 */
enlight_schema.AdaptivePool2dDescriptor.getSizePrefixedRootAsAdaptivePool2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.AdaptivePool2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.AdaptivePool2dDescriptor.prototype.outputWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.AdaptivePool2dDescriptor.prototype.outputHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.AdaptivePool2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AdaptivePool2dDescriptor.startAdaptivePool2dDescriptor = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outputWidth
 */
enlight_schema.AdaptivePool2dDescriptor.addOutputWidth = function(builder, outputWidth) {
  builder.addFieldInt32(0, outputWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outputHeight
 */
enlight_schema.AdaptivePool2dDescriptor.addOutputHeight = function(builder, outputHeight) {
  builder.addFieldInt32(1, outputHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.AdaptivePool2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(2, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptivePool2dDescriptor.endAdaptivePool2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outputWidth
 * @param {number} outputHeight
 * @param {enlight_schema.DataLayout} dataLayout
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AdaptivePool2dDescriptor.createAdaptivePool2dDescriptor = function(builder, outputWidth, outputHeight, dataLayout) {
  enlight_schema.AdaptivePool2dDescriptor.startAdaptivePool2dDescriptor(builder);
  enlight_schema.AdaptivePool2dDescriptor.addOutputWidth(builder, outputWidth);
  enlight_schema.AdaptivePool2dDescriptor.addOutputHeight(builder, outputHeight);
  enlight_schema.AdaptivePool2dDescriptor.addDataLayout(builder, dataLayout);
  return enlight_schema.AdaptivePool2dDescriptor.endAdaptivePool2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ReduceMeanLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReduceMeanLayer}
 */
enlight_schema.ReduceMeanLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceMeanLayer=} obj
 * @returns {enlight_schema.ReduceMeanLayer}
 */
enlight_schema.ReduceMeanLayer.getRootAsReduceMeanLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReduceMeanLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceMeanLayer=} obj
 * @returns {enlight_schema.ReduceMeanLayer}
 */
enlight_schema.ReduceMeanLayer.getSizePrefixedRootAsReduceMeanLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReduceMeanLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ReduceMeanDescriptor=} obj
 * @returns {enlight_schema.ReduceMeanDescriptor|null}
 */
enlight_schema.ReduceMeanLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ReduceMeanDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReduceMeanLayer.startReduceMeanLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ReduceMeanLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceMeanLayer.endReduceMeanLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceMeanLayer.createReduceMeanLayer = function(builder, descriptorOffset) {
  enlight_schema.ReduceMeanLayer.startReduceMeanLayer(builder);
  enlight_schema.ReduceMeanLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ReduceMeanLayer.endReduceMeanLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReduceMeanDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReduceMeanDescriptor}
 */
enlight_schema.ReduceMeanDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceMeanDescriptor=} obj
 * @returns {enlight_schema.ReduceMeanDescriptor}
 */
enlight_schema.ReduceMeanDescriptor.getRootAsReduceMeanDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReduceMeanDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceMeanDescriptor=} obj
 * @returns {enlight_schema.ReduceMeanDescriptor}
 */
enlight_schema.ReduceMeanDescriptor.getSizePrefixedRootAsReduceMeanDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReduceMeanDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.ReduceMeanDescriptor.prototype.axis = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.ReduceMeanDescriptor.prototype.axisLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.ReduceMeanDescriptor.prototype.axisArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.ReduceMeanDescriptor.prototype.keepDims = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReduceMeanDescriptor.startReduceMeanDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axisOffset
 */
enlight_schema.ReduceMeanDescriptor.addAxis = function(builder, axisOffset) {
  builder.addFieldOffset(0, axisOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceMeanDescriptor.createAxisVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ReduceMeanDescriptor.startAxisVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} keepDims
 */
enlight_schema.ReduceMeanDescriptor.addKeepDims = function(builder, keepDims) {
  builder.addFieldInt8(1, +keepDims, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceMeanDescriptor.endReduceMeanDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axisOffset
 * @param {boolean} keepDims
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceMeanDescriptor.createReduceMeanDescriptor = function(builder, axisOffset, keepDims) {
  enlight_schema.ReduceMeanDescriptor.startReduceMeanDescriptor(builder);
  enlight_schema.ReduceMeanDescriptor.addAxis(builder, axisOffset);
  enlight_schema.ReduceMeanDescriptor.addKeepDims(builder, keepDims);
  return enlight_schema.ReduceMeanDescriptor.endReduceMeanDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ReduceSumLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReduceSumLayer}
 */
enlight_schema.ReduceSumLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceSumLayer=} obj
 * @returns {enlight_schema.ReduceSumLayer}
 */
enlight_schema.ReduceSumLayer.getRootAsReduceSumLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReduceSumLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceSumLayer=} obj
 * @returns {enlight_schema.ReduceSumLayer}
 */
enlight_schema.ReduceSumLayer.getSizePrefixedRootAsReduceSumLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReduceSumLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ReduceMeanDescriptor=} obj
 * @returns {enlight_schema.ReduceMeanDescriptor|null}
 */
enlight_schema.ReduceSumLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ReduceMeanDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReduceSumLayer.startReduceSumLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ReduceSumLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceSumLayer.endReduceSumLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceSumLayer.createReduceSumLayer = function(builder, descriptorOffset) {
  enlight_schema.ReduceSumLayer.startReduceSumLayer(builder);
  enlight_schema.ReduceSumLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ReduceSumLayer.endReduceSumLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReduceSumDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReduceSumDescriptor}
 */
enlight_schema.ReduceSumDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceSumDescriptor=} obj
 * @returns {enlight_schema.ReduceSumDescriptor}
 */
enlight_schema.ReduceSumDescriptor.getRootAsReduceSumDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReduceSumDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReduceSumDescriptor=} obj
 * @returns {enlight_schema.ReduceSumDescriptor}
 */
enlight_schema.ReduceSumDescriptor.getSizePrefixedRootAsReduceSumDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReduceSumDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.ReduceSumDescriptor.prototype.axis = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.ReduceSumDescriptor.prototype.axisLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.ReduceSumDescriptor.prototype.axisArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.ReduceSumDescriptor.prototype.keepDims = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReduceSumDescriptor.startReduceSumDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axisOffset
 */
enlight_schema.ReduceSumDescriptor.addAxis = function(builder, axisOffset) {
  builder.addFieldOffset(0, axisOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceSumDescriptor.createAxisVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ReduceSumDescriptor.startAxisVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} keepDims
 */
enlight_schema.ReduceSumDescriptor.addKeepDims = function(builder, keepDims) {
  builder.addFieldInt8(1, +keepDims, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceSumDescriptor.endReduceSumDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axisOffset
 * @param {boolean} keepDims
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReduceSumDescriptor.createReduceSumDescriptor = function(builder, axisOffset, keepDims) {
  enlight_schema.ReduceSumDescriptor.startReduceSumDescriptor(builder);
  enlight_schema.ReduceSumDescriptor.addAxis(builder, axisOffset);
  enlight_schema.ReduceSumDescriptor.addKeepDims(builder, keepDims);
  return enlight_schema.ReduceSumDescriptor.endReduceSumDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.LinearLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LinearLayer}
 */
enlight_schema.LinearLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LinearLayer=} obj
 * @returns {enlight_schema.LinearLayer}
 */
enlight_schema.LinearLayer.getRootAsLinearLayer = function(bb, obj) {
  return (obj || new enlight_schema.LinearLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LinearLayer=} obj
 * @returns {enlight_schema.LinearLayer}
 */
enlight_schema.LinearLayer.getSizePrefixedRootAsLinearLayer = function(bb, obj) {
  return (obj || new enlight_schema.LinearLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.LinearDescriptor=} obj
 * @returns {enlight_schema.LinearDescriptor|null}
 */
enlight_schema.LinearLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.LinearDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.LinearLayer.prototype.weights = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.LinearLayer.prototype.biases = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LinearLayer.startLinearLayer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.LinearLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} weightsOffset
 */
enlight_schema.LinearLayer.addWeights = function(builder, weightsOffset) {
  builder.addFieldOffset(1, weightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} biasesOffset
 */
enlight_schema.LinearLayer.addBiases = function(builder, biasesOffset) {
  builder.addFieldOffset(2, biasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LinearLayer.endLinearLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} weightsOffset
 * @param {flatbuffers.Offset} biasesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LinearLayer.createLinearLayer = function(builder, descriptorOffset, weightsOffset, biasesOffset) {
  enlight_schema.LinearLayer.startLinearLayer(builder);
  enlight_schema.LinearLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.LinearLayer.addWeights(builder, weightsOffset);
  enlight_schema.LinearLayer.addBiases(builder, biasesOffset);
  return enlight_schema.LinearLayer.endLinearLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.LinearDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.LinearDescriptor}
 */
enlight_schema.LinearDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LinearDescriptor=} obj
 * @returns {enlight_schema.LinearDescriptor}
 */
enlight_schema.LinearDescriptor.getRootAsLinearDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.LinearDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.LinearDescriptor=} obj
 * @returns {enlight_schema.LinearDescriptor}
 */
enlight_schema.LinearDescriptor.getSizePrefixedRootAsLinearDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.LinearDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
enlight_schema.LinearDescriptor.prototype.biasEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.LinearDescriptor.startLinearDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 */
enlight_schema.LinearDescriptor.addBiasEnabled = function(builder, biasEnabled) {
  builder.addFieldInt8(0, +biasEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LinearDescriptor.endLinearDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 * @returns {flatbuffers.Offset}
 */
enlight_schema.LinearDescriptor.createLinearDescriptor = function(builder, biasEnabled) {
  enlight_schema.LinearDescriptor.startLinearDescriptor(builder);
  enlight_schema.LinearDescriptor.addBiasEnabled(builder, biasEnabled);
  return enlight_schema.LinearDescriptor.endLinearDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.UpsampleLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.UpsampleLayer}
 */
enlight_schema.UpsampleLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UpsampleLayer=} obj
 * @returns {enlight_schema.UpsampleLayer}
 */
enlight_schema.UpsampleLayer.getRootAsUpsampleLayer = function(bb, obj) {
  return (obj || new enlight_schema.UpsampleLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UpsampleLayer=} obj
 * @returns {enlight_schema.UpsampleLayer}
 */
enlight_schema.UpsampleLayer.getSizePrefixedRootAsUpsampleLayer = function(bb, obj) {
  return (obj || new enlight_schema.UpsampleLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.UpsampleDescriptor=} obj
 * @returns {enlight_schema.UpsampleDescriptor|null}
 */
enlight_schema.UpsampleLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.UpsampleDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.UpsampleLayer.startUpsampleLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.UpsampleLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UpsampleLayer.endUpsampleLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UpsampleLayer.createUpsampleLayer = function(builder, descriptorOffset) {
  enlight_schema.UpsampleLayer.startUpsampleLayer(builder);
  enlight_schema.UpsampleLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.UpsampleLayer.endUpsampleLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.UpsampleDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.UpsampleDescriptor}
 */
enlight_schema.UpsampleDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UpsampleDescriptor=} obj
 * @returns {enlight_schema.UpsampleDescriptor}
 */
enlight_schema.UpsampleDescriptor.getRootAsUpsampleDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.UpsampleDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UpsampleDescriptor=} obj
 * @returns {enlight_schema.UpsampleDescriptor}
 */
enlight_schema.UpsampleDescriptor.getSizePrefixedRootAsUpsampleDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.UpsampleDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.UpsampleDescriptor.prototype.scaleFactor = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.UpsampleDescriptor.prototype.scaleFactorLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.UpsampleDescriptor.prototype.scaleFactorArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.UpsampleDescriptor.prototype.mode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.UpsampleDescriptor.startUpsampleDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} scaleFactorOffset
 */
enlight_schema.UpsampleDescriptor.addScaleFactor = function(builder, scaleFactorOffset) {
  builder.addFieldOffset(0, scaleFactorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UpsampleDescriptor.createScaleFactorVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.UpsampleDescriptor.startScaleFactorVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modeOffset
 */
enlight_schema.UpsampleDescriptor.addMode = function(builder, modeOffset) {
  builder.addFieldOffset(1, modeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UpsampleDescriptor.endUpsampleDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} scaleFactorOffset
 * @param {flatbuffers.Offset} modeOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UpsampleDescriptor.createUpsampleDescriptor = function(builder, scaleFactorOffset, modeOffset) {
  enlight_schema.UpsampleDescriptor.startUpsampleDescriptor(builder);
  enlight_schema.UpsampleDescriptor.addScaleFactor(builder, scaleFactorOffset);
  enlight_schema.UpsampleDescriptor.addMode(builder, modeOffset);
  return enlight_schema.UpsampleDescriptor.endUpsampleDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.SoftmaxLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SoftmaxLayer}
 */
enlight_schema.SoftmaxLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SoftmaxLayer=} obj
 * @returns {enlight_schema.SoftmaxLayer}
 */
enlight_schema.SoftmaxLayer.getRootAsSoftmaxLayer = function(bb, obj) {
  return (obj || new enlight_schema.SoftmaxLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SoftmaxLayer=} obj
 * @returns {enlight_schema.SoftmaxLayer}
 */
enlight_schema.SoftmaxLayer.getSizePrefixedRootAsSoftmaxLayer = function(bb, obj) {
  return (obj || new enlight_schema.SoftmaxLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.SoftmaxDescriptor=} obj
 * @returns {enlight_schema.SoftmaxDescriptor|null}
 */
enlight_schema.SoftmaxLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.SoftmaxDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SoftmaxLayer.startSoftmaxLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.SoftmaxLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SoftmaxLayer.endSoftmaxLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SoftmaxLayer.createSoftmaxLayer = function(builder, descriptorOffset) {
  enlight_schema.SoftmaxLayer.startSoftmaxLayer(builder);
  enlight_schema.SoftmaxLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.SoftmaxLayer.endSoftmaxLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SoftmaxDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SoftmaxDescriptor}
 */
enlight_schema.SoftmaxDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SoftmaxDescriptor=} obj
 * @returns {enlight_schema.SoftmaxDescriptor}
 */
enlight_schema.SoftmaxDescriptor.getRootAsSoftmaxDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SoftmaxDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SoftmaxDescriptor=} obj
 * @returns {enlight_schema.SoftmaxDescriptor}
 */
enlight_schema.SoftmaxDescriptor.getSizePrefixedRootAsSoftmaxDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SoftmaxDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.SoftmaxDescriptor.prototype.beta = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SoftmaxDescriptor.startSoftmaxDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beta
 */
enlight_schema.SoftmaxDescriptor.addBeta = function(builder, beta) {
  builder.addFieldFloat32(0, beta, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SoftmaxDescriptor.endSoftmaxDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beta
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SoftmaxDescriptor.createSoftmaxDescriptor = function(builder, beta) {
  enlight_schema.SoftmaxDescriptor.startSoftmaxDescriptor(builder);
  enlight_schema.SoftmaxDescriptor.addBeta(builder, beta);
  return enlight_schema.SoftmaxDescriptor.endSoftmaxDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.DetectionPostProcessLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DetectionPostProcessLayer}
 */
enlight_schema.DetectionPostProcessLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DetectionPostProcessLayer=} obj
 * @returns {enlight_schema.DetectionPostProcessLayer}
 */
enlight_schema.DetectionPostProcessLayer.getRootAsDetectionPostProcessLayer = function(bb, obj) {
  return (obj || new enlight_schema.DetectionPostProcessLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DetectionPostProcessLayer=} obj
 * @returns {enlight_schema.DetectionPostProcessLayer}
 */
enlight_schema.DetectionPostProcessLayer.getSizePrefixedRootAsDetectionPostProcessLayer = function(bb, obj) {
  return (obj || new enlight_schema.DetectionPostProcessLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.DetectionPostProcessDescriptor=} obj
 * @returns {enlight_schema.DetectionPostProcessDescriptor|null}
 */
enlight_schema.DetectionPostProcessLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.DetectionPostProcessDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.DetectionPostProcessLayer.prototype.anchors = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DetectionPostProcessLayer.startDetectionPostProcessLayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.DetectionPostProcessLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} anchorsOffset
 */
enlight_schema.DetectionPostProcessLayer.addAnchors = function(builder, anchorsOffset) {
  builder.addFieldOffset(1, anchorsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DetectionPostProcessLayer.endDetectionPostProcessLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} anchorsOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DetectionPostProcessLayer.createDetectionPostProcessLayer = function(builder, descriptorOffset, anchorsOffset) {
  enlight_schema.DetectionPostProcessLayer.startDetectionPostProcessLayer(builder);
  enlight_schema.DetectionPostProcessLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.DetectionPostProcessLayer.addAnchors(builder, anchorsOffset);
  return enlight_schema.DetectionPostProcessLayer.endDetectionPostProcessLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.DetectionPostProcessDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DetectionPostProcessDescriptor}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DetectionPostProcessDescriptor=} obj
 * @returns {enlight_schema.DetectionPostProcessDescriptor}
 */
enlight_schema.DetectionPostProcessDescriptor.getRootAsDetectionPostProcessDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DetectionPostProcessDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DetectionPostProcessDescriptor=} obj
 * @returns {enlight_schema.DetectionPostProcessDescriptor}
 */
enlight_schema.DetectionPostProcessDescriptor.getSizePrefixedRootAsDetectionPostProcessDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DetectionPostProcessDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.numClass = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.nmsScoreThreshold = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.nmsIouThreshold = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.scaleXY = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.scaleWH = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.isquantized = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.LocScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.ScoreScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.PriorScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.imgSize = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.imgSizeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.imgSizeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.backgroundEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.logistic = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.IsRegularNMS = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.OutScoreScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.OutBoxScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.ExpTableScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.SigTableScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.SoftmaxScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 38);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.scaleXYOrigin = function() {
  var offset = this.bb.__offset(this.bb_pos, 40);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.DetectionPostProcessDescriptor.prototype.scaleWHOrigin = function() {
  var offset = this.bb.__offset(this.bb_pos, 42);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DetectionPostProcessDescriptor.startDetectionPostProcessDescriptor = function(builder) {
  builder.startObject(20);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numClass
 */
enlight_schema.DetectionPostProcessDescriptor.addNumClass = function(builder, numClass) {
  builder.addFieldInt32(0, numClass, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nmsScoreThreshold
 */
enlight_schema.DetectionPostProcessDescriptor.addNmsScoreThreshold = function(builder, nmsScoreThreshold) {
  builder.addFieldFloat32(1, nmsScoreThreshold, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nmsIouThreshold
 */
enlight_schema.DetectionPostProcessDescriptor.addNmsIouThreshold = function(builder, nmsIouThreshold) {
  builder.addFieldFloat32(2, nmsIouThreshold, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} scaleXY
 */
enlight_schema.DetectionPostProcessDescriptor.addScaleXY = function(builder, scaleXY) {
  builder.addFieldFloat32(3, scaleXY, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} scaleWH
 */
enlight_schema.DetectionPostProcessDescriptor.addScaleWH = function(builder, scaleWH) {
  builder.addFieldFloat32(4, scaleWH, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isquantized
 */
enlight_schema.DetectionPostProcessDescriptor.addIsquantized = function(builder, isquantized) {
  builder.addFieldInt8(5, +isquantized, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} LocScale
 */
enlight_schema.DetectionPostProcessDescriptor.addLocScale = function(builder, LocScale) {
  builder.addFieldFloat32(6, LocScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ScoreScale
 */
enlight_schema.DetectionPostProcessDescriptor.addScoreScale = function(builder, ScoreScale) {
  builder.addFieldFloat32(7, ScoreScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PriorScale
 */
enlight_schema.DetectionPostProcessDescriptor.addPriorScale = function(builder, PriorScale) {
  builder.addFieldFloat32(8, PriorScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} imgSizeOffset
 */
enlight_schema.DetectionPostProcessDescriptor.addImgSize = function(builder, imgSizeOffset) {
  builder.addFieldOffset(9, imgSizeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DetectionPostProcessDescriptor.createImgSizeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.DetectionPostProcessDescriptor.startImgSizeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} backgroundEnabled
 */
enlight_schema.DetectionPostProcessDescriptor.addBackgroundEnabled = function(builder, backgroundEnabled) {
  builder.addFieldInt8(10, +backgroundEnabled, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} logisticOffset
 */
enlight_schema.DetectionPostProcessDescriptor.addLogistic = function(builder, logisticOffset) {
  builder.addFieldOffset(11, logisticOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} IsRegularNMS
 */
enlight_schema.DetectionPostProcessDescriptor.addIsRegularNMS = function(builder, IsRegularNMS) {
  builder.addFieldInt8(12, +IsRegularNMS, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutScoreScale
 */
enlight_schema.DetectionPostProcessDescriptor.addOutScoreScale = function(builder, OutScoreScale) {
  builder.addFieldFloat32(13, OutScoreScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutBoxScale
 */
enlight_schema.DetectionPostProcessDescriptor.addOutBoxScale = function(builder, OutBoxScale) {
  builder.addFieldFloat32(14, OutBoxScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ExpTableScale
 */
enlight_schema.DetectionPostProcessDescriptor.addExpTableScale = function(builder, ExpTableScale) {
  builder.addFieldFloat32(15, ExpTableScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SigTableScale
 */
enlight_schema.DetectionPostProcessDescriptor.addSigTableScale = function(builder, SigTableScale) {
  builder.addFieldFloat32(16, SigTableScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SoftmaxScale
 */
enlight_schema.DetectionPostProcessDescriptor.addSoftmaxScale = function(builder, SoftmaxScale) {
  builder.addFieldFloat32(17, SoftmaxScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} scaleXYOrigin
 */
enlight_schema.DetectionPostProcessDescriptor.addScaleXYOrigin = function(builder, scaleXYOrigin) {
  builder.addFieldFloat32(18, scaleXYOrigin, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} scaleWHOrigin
 */
enlight_schema.DetectionPostProcessDescriptor.addScaleWHOrigin = function(builder, scaleWHOrigin) {
  builder.addFieldFloat32(19, scaleWHOrigin, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DetectionPostProcessDescriptor.endDetectionPostProcessDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numClass
 * @param {number} nmsScoreThreshold
 * @param {number} nmsIouThreshold
 * @param {number} scaleXY
 * @param {number} scaleWH
 * @param {boolean} isquantized
 * @param {number} LocScale
 * @param {number} ScoreScale
 * @param {number} PriorScale
 * @param {flatbuffers.Offset} imgSizeOffset
 * @param {boolean} backgroundEnabled
 * @param {flatbuffers.Offset} logisticOffset
 * @param {boolean} IsRegularNMS
 * @param {number} OutScoreScale
 * @param {number} OutBoxScale
 * @param {number} ExpTableScale
 * @param {number} SigTableScale
 * @param {number} SoftmaxScale
 * @param {number} scaleXYOrigin
 * @param {number} scaleWHOrigin
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DetectionPostProcessDescriptor.createDetectionPostProcessDescriptor = function(builder, numClass, nmsScoreThreshold, nmsIouThreshold, scaleXY, scaleWH, isquantized, LocScale, ScoreScale, PriorScale, imgSizeOffset, backgroundEnabled, logisticOffset, IsRegularNMS, OutScoreScale, OutBoxScale, ExpTableScale, SigTableScale, SoftmaxScale, scaleXYOrigin, scaleWHOrigin) {
  enlight_schema.DetectionPostProcessDescriptor.startDetectionPostProcessDescriptor(builder);
  enlight_schema.DetectionPostProcessDescriptor.addNumClass(builder, numClass);
  enlight_schema.DetectionPostProcessDescriptor.addNmsScoreThreshold(builder, nmsScoreThreshold);
  enlight_schema.DetectionPostProcessDescriptor.addNmsIouThreshold(builder, nmsIouThreshold);
  enlight_schema.DetectionPostProcessDescriptor.addScaleXY(builder, scaleXY);
  enlight_schema.DetectionPostProcessDescriptor.addScaleWH(builder, scaleWH);
  enlight_schema.DetectionPostProcessDescriptor.addIsquantized(builder, isquantized);
  enlight_schema.DetectionPostProcessDescriptor.addLocScale(builder, LocScale);
  enlight_schema.DetectionPostProcessDescriptor.addScoreScale(builder, ScoreScale);
  enlight_schema.DetectionPostProcessDescriptor.addPriorScale(builder, PriorScale);
  enlight_schema.DetectionPostProcessDescriptor.addImgSize(builder, imgSizeOffset);
  enlight_schema.DetectionPostProcessDescriptor.addBackgroundEnabled(builder, backgroundEnabled);
  enlight_schema.DetectionPostProcessDescriptor.addLogistic(builder, logisticOffset);
  enlight_schema.DetectionPostProcessDescriptor.addIsRegularNMS(builder, IsRegularNMS);
  enlight_schema.DetectionPostProcessDescriptor.addOutScoreScale(builder, OutScoreScale);
  enlight_schema.DetectionPostProcessDescriptor.addOutBoxScale(builder, OutBoxScale);
  enlight_schema.DetectionPostProcessDescriptor.addExpTableScale(builder, ExpTableScale);
  enlight_schema.DetectionPostProcessDescriptor.addSigTableScale(builder, SigTableScale);
  enlight_schema.DetectionPostProcessDescriptor.addSoftmaxScale(builder, SoftmaxScale);
  enlight_schema.DetectionPostProcessDescriptor.addScaleXYOrigin(builder, scaleXYOrigin);
  enlight_schema.DetectionPostProcessDescriptor.addScaleWHOrigin(builder, scaleWHOrigin);
  return enlight_schema.DetectionPostProcessDescriptor.endDetectionPostProcessDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.YoloPostProcessLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.YoloPostProcessLayer}
 */
enlight_schema.YoloPostProcessLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.YoloPostProcessLayer=} obj
 * @returns {enlight_schema.YoloPostProcessLayer}
 */
enlight_schema.YoloPostProcessLayer.getRootAsYoloPostProcessLayer = function(bb, obj) {
  return (obj || new enlight_schema.YoloPostProcessLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.YoloPostProcessLayer=} obj
 * @returns {enlight_schema.YoloPostProcessLayer}
 */
enlight_schema.YoloPostProcessLayer.getSizePrefixedRootAsYoloPostProcessLayer = function(bb, obj) {
  return (obj || new enlight_schema.YoloPostProcessLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.YoloPostProcessDescriptor=} obj
 * @returns {enlight_schema.YoloPostProcessDescriptor|null}
 */
enlight_schema.YoloPostProcessLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.YoloPostProcessDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.YoloPostProcessLayer.startYoloPostProcessLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.YoloPostProcessLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessLayer.endYoloPostProcessLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessLayer.createYoloPostProcessLayer = function(builder, descriptorOffset) {
  enlight_schema.YoloPostProcessLayer.startYoloPostProcessLayer(builder);
  enlight_schema.YoloPostProcessLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.YoloPostProcessLayer.endYoloPostProcessLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.YoloPostProcessDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.YoloPostProcessDescriptor}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.YoloPostProcessDescriptor=} obj
 * @returns {enlight_schema.YoloPostProcessDescriptor}
 */
enlight_schema.YoloPostProcessDescriptor.getRootAsYoloPostProcessDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.YoloPostProcessDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.YoloPostProcessDescriptor=} obj
 * @returns {enlight_schema.YoloPostProcessDescriptor}
 */
enlight_schema.YoloPostProcessDescriptor.getSizePrefixedRootAsYoloPostProcessDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.YoloPostProcessDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.numClass = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.softmaxEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.backgroundEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.anchors = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.nmsScoreThreshold = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.6;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.nmsIouThreshold = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.45;
};

/**
 * @returns {boolean}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.isquantized = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.type = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.anchorBoxes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.anchorBoxesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.numGrid = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.numAnchor = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.outputTensorScales = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.outputTensorScalesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.outputTensorScalesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.imgSize = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.imgSizeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.imgSizeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.isSrcTensorDivided = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.processSigmoid = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.OutScoreScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.OutBoxScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.ExpTableScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 38);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.SigTableScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 40);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.YoloPostProcessDescriptor.prototype.SoftmaxScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 42);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.YoloPostProcessDescriptor.startYoloPostProcessDescriptor = function(builder) {
  builder.startObject(20);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numClass
 */
enlight_schema.YoloPostProcessDescriptor.addNumClass = function(builder, numClass) {
  builder.addFieldInt32(0, numClass, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} softmaxEnabled
 */
enlight_schema.YoloPostProcessDescriptor.addSoftmaxEnabled = function(builder, softmaxEnabled) {
  builder.addFieldInt8(1, +softmaxEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} backgroundEnabled
 */
enlight_schema.YoloPostProcessDescriptor.addBackgroundEnabled = function(builder, backgroundEnabled) {
  builder.addFieldInt8(2, +backgroundEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} anchorsOffset
 */
enlight_schema.YoloPostProcessDescriptor.addAnchors = function(builder, anchorsOffset) {
  builder.addFieldOffset(3, anchorsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nmsScoreThreshold
 */
enlight_schema.YoloPostProcessDescriptor.addNmsScoreThreshold = function(builder, nmsScoreThreshold) {
  builder.addFieldFloat32(4, nmsScoreThreshold, 0.6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} nmsIouThreshold
 */
enlight_schema.YoloPostProcessDescriptor.addNmsIouThreshold = function(builder, nmsIouThreshold) {
  builder.addFieldFloat32(5, nmsIouThreshold, 0.45);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isquantized
 */
enlight_schema.YoloPostProcessDescriptor.addIsquantized = function(builder, isquantized) {
  builder.addFieldInt8(6, +isquantized, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} typeOffset
 */
enlight_schema.YoloPostProcessDescriptor.addType = function(builder, typeOffset) {
  builder.addFieldOffset(7, typeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} anchorBoxesOffset
 */
enlight_schema.YoloPostProcessDescriptor.addAnchorBoxes = function(builder, anchorBoxesOffset) {
  builder.addFieldOffset(8, anchorBoxesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessDescriptor.createAnchorBoxesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.YoloPostProcessDescriptor.startAnchorBoxesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} numGridOffset
 */
enlight_schema.YoloPostProcessDescriptor.addNumGrid = function(builder, numGridOffset) {
  builder.addFieldOffset(9, numGridOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numAnchor
 */
enlight_schema.YoloPostProcessDescriptor.addNumAnchor = function(builder, numAnchor) {
  builder.addFieldInt32(10, numAnchor, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputTensorScalesOffset
 */
enlight_schema.YoloPostProcessDescriptor.addOutputTensorScales = function(builder, outputTensorScalesOffset) {
  builder.addFieldOffset(11, outputTensorScalesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessDescriptor.createOutputTensorScalesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.YoloPostProcessDescriptor.startOutputTensorScalesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} imgSizeOffset
 */
enlight_schema.YoloPostProcessDescriptor.addImgSize = function(builder, imgSizeOffset) {
  builder.addFieldOffset(12, imgSizeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessDescriptor.createImgSizeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.YoloPostProcessDescriptor.startImgSizeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isSrcTensorDivided
 */
enlight_schema.YoloPostProcessDescriptor.addIsSrcTensorDivided = function(builder, isSrcTensorDivided) {
  builder.addFieldInt8(13, +isSrcTensorDivided, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} processSigmoid
 */
enlight_schema.YoloPostProcessDescriptor.addProcessSigmoid = function(builder, processSigmoid) {
  builder.addFieldInt8(14, +processSigmoid, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutScoreScale
 */
enlight_schema.YoloPostProcessDescriptor.addOutScoreScale = function(builder, OutScoreScale) {
  builder.addFieldFloat32(15, OutScoreScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutBoxScale
 */
enlight_schema.YoloPostProcessDescriptor.addOutBoxScale = function(builder, OutBoxScale) {
  builder.addFieldFloat32(16, OutBoxScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ExpTableScale
 */
enlight_schema.YoloPostProcessDescriptor.addExpTableScale = function(builder, ExpTableScale) {
  builder.addFieldFloat32(17, ExpTableScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SigTableScale
 */
enlight_schema.YoloPostProcessDescriptor.addSigTableScale = function(builder, SigTableScale) {
  builder.addFieldFloat32(18, SigTableScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SoftmaxScale
 */
enlight_schema.YoloPostProcessDescriptor.addSoftmaxScale = function(builder, SoftmaxScale) {
  builder.addFieldFloat32(19, SoftmaxScale, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessDescriptor.endYoloPostProcessDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numClass
 * @param {boolean} softmaxEnabled
 * @param {boolean} backgroundEnabled
 * @param {flatbuffers.Offset} anchorsOffset
 * @param {number} nmsScoreThreshold
 * @param {number} nmsIouThreshold
 * @param {boolean} isquantized
 * @param {flatbuffers.Offset} typeOffset
 * @param {flatbuffers.Offset} anchorBoxesOffset
 * @param {flatbuffers.Offset} numGridOffset
 * @param {number} numAnchor
 * @param {flatbuffers.Offset} outputTensorScalesOffset
 * @param {flatbuffers.Offset} imgSizeOffset
 * @param {boolean} isSrcTensorDivided
 * @param {boolean} processSigmoid
 * @param {number} OutScoreScale
 * @param {number} OutBoxScale
 * @param {number} ExpTableScale
 * @param {number} SigTableScale
 * @param {number} SoftmaxScale
 * @returns {flatbuffers.Offset}
 */
enlight_schema.YoloPostProcessDescriptor.createYoloPostProcessDescriptor = function(builder, numClass, softmaxEnabled, backgroundEnabled, anchorsOffset, nmsScoreThreshold, nmsIouThreshold, isquantized, typeOffset, anchorBoxesOffset, numGridOffset, numAnchor, outputTensorScalesOffset, imgSizeOffset, isSrcTensorDivided, processSigmoid, OutScoreScale, OutBoxScale, ExpTableScale, SigTableScale, SoftmaxScale) {
  enlight_schema.YoloPostProcessDescriptor.startYoloPostProcessDescriptor(builder);
  enlight_schema.YoloPostProcessDescriptor.addNumClass(builder, numClass);
  enlight_schema.YoloPostProcessDescriptor.addSoftmaxEnabled(builder, softmaxEnabled);
  enlight_schema.YoloPostProcessDescriptor.addBackgroundEnabled(builder, backgroundEnabled);
  enlight_schema.YoloPostProcessDescriptor.addAnchors(builder, anchorsOffset);
  enlight_schema.YoloPostProcessDescriptor.addNmsScoreThreshold(builder, nmsScoreThreshold);
  enlight_schema.YoloPostProcessDescriptor.addNmsIouThreshold(builder, nmsIouThreshold);
  enlight_schema.YoloPostProcessDescriptor.addIsquantized(builder, isquantized);
  enlight_schema.YoloPostProcessDescriptor.addType(builder, typeOffset);
  enlight_schema.YoloPostProcessDescriptor.addAnchorBoxes(builder, anchorBoxesOffset);
  enlight_schema.YoloPostProcessDescriptor.addNumGrid(builder, numGridOffset);
  enlight_schema.YoloPostProcessDescriptor.addNumAnchor(builder, numAnchor);
  enlight_schema.YoloPostProcessDescriptor.addOutputTensorScales(builder, outputTensorScalesOffset);
  enlight_schema.YoloPostProcessDescriptor.addImgSize(builder, imgSizeOffset);
  enlight_schema.YoloPostProcessDescriptor.addIsSrcTensorDivided(builder, isSrcTensorDivided);
  enlight_schema.YoloPostProcessDescriptor.addProcessSigmoid(builder, processSigmoid);
  enlight_schema.YoloPostProcessDescriptor.addOutScoreScale(builder, OutScoreScale);
  enlight_schema.YoloPostProcessDescriptor.addOutBoxScale(builder, OutBoxScale);
  enlight_schema.YoloPostProcessDescriptor.addExpTableScale(builder, ExpTableScale);
  enlight_schema.YoloPostProcessDescriptor.addSigTableScale(builder, SigTableScale);
  enlight_schema.YoloPostProcessDescriptor.addSoftmaxScale(builder, SoftmaxScale);
  return enlight_schema.YoloPostProcessDescriptor.endYoloPostProcessDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ConcatLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ConcatLayer}
 */
enlight_schema.ConcatLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConcatLayer=} obj
 * @returns {enlight_schema.ConcatLayer}
 */
enlight_schema.ConcatLayer.getRootAsConcatLayer = function(bb, obj) {
  return (obj || new enlight_schema.ConcatLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConcatLayer=} obj
 * @returns {enlight_schema.ConcatLayer}
 */
enlight_schema.ConcatLayer.getSizePrefixedRootAsConcatLayer = function(bb, obj) {
  return (obj || new enlight_schema.ConcatLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ConcatDescriptor=} obj
 * @returns {enlight_schema.ConcatDescriptor|null}
 */
enlight_schema.ConcatLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ConcatDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ConcatLayer.startConcatLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ConcatLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConcatLayer.endConcatLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConcatLayer.createConcatLayer = function(builder, descriptorOffset) {
  enlight_schema.ConcatLayer.startConcatLayer(builder);
  enlight_schema.ConcatLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ConcatLayer.endConcatLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ConcatDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ConcatDescriptor}
 */
enlight_schema.ConcatDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConcatDescriptor=} obj
 * @returns {enlight_schema.ConcatDescriptor}
 */
enlight_schema.ConcatDescriptor.getRootAsConcatDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ConcatDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConcatDescriptor=} obj
 * @returns {enlight_schema.ConcatDescriptor}
 */
enlight_schema.ConcatDescriptor.getSizePrefixedRootAsConcatDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ConcatDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.ConcatDescriptor.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ConcatDescriptor.startConcatDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
enlight_schema.ConcatDescriptor.addAxis = function(builder, axis) {
  builder.addFieldInt32(0, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConcatDescriptor.endConcatDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConcatDescriptor.createConcatDescriptor = function(builder, axis) {
  enlight_schema.ConcatDescriptor.startConcatDescriptor(builder);
  enlight_schema.ConcatDescriptor.addAxis(builder, axis);
  return enlight_schema.ConcatDescriptor.endConcatDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.FlattenLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.FlattenLayer}
 */
enlight_schema.FlattenLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FlattenLayer=} obj
 * @returns {enlight_schema.FlattenLayer}
 */
enlight_schema.FlattenLayer.getRootAsFlattenLayer = function(bb, obj) {
  return (obj || new enlight_schema.FlattenLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FlattenLayer=} obj
 * @returns {enlight_schema.FlattenLayer}
 */
enlight_schema.FlattenLayer.getSizePrefixedRootAsFlattenLayer = function(bb, obj) {
  return (obj || new enlight_schema.FlattenLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.FlattenDescriptor=} obj
 * @returns {enlight_schema.FlattenDescriptor|null}
 */
enlight_schema.FlattenLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.FlattenDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.FlattenLayer.startFlattenLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.FlattenLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FlattenLayer.endFlattenLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FlattenLayer.createFlattenLayer = function(builder, descriptorOffset) {
  enlight_schema.FlattenLayer.startFlattenLayer(builder);
  enlight_schema.FlattenLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.FlattenLayer.endFlattenLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.FlattenDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.FlattenDescriptor}
 */
enlight_schema.FlattenDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FlattenDescriptor=} obj
 * @returns {enlight_schema.FlattenDescriptor}
 */
enlight_schema.FlattenDescriptor.getRootAsFlattenDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.FlattenDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FlattenDescriptor=} obj
 * @returns {enlight_schema.FlattenDescriptor}
 */
enlight_schema.FlattenDescriptor.getSizePrefixedRootAsFlattenDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.FlattenDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.FlattenDescriptor.prototype.startAxis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.FlattenDescriptor.prototype.endAxis = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.FlattenDescriptor.startFlattenDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startAxis
 */
enlight_schema.FlattenDescriptor.addStartAxis = function(builder, startAxis) {
  builder.addFieldInt32(0, startAxis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} endAxis
 */
enlight_schema.FlattenDescriptor.addEndAxis = function(builder, endAxis) {
  builder.addFieldInt32(1, endAxis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FlattenDescriptor.endFlattenDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startAxis
 * @param {number} endAxis
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FlattenDescriptor.createFlattenDescriptor = function(builder, startAxis, endAxis) {
  enlight_schema.FlattenDescriptor.startFlattenDescriptor(builder);
  enlight_schema.FlattenDescriptor.addStartAxis(builder, startAxis);
  enlight_schema.FlattenDescriptor.addEndAxis(builder, endAxis);
  return enlight_schema.FlattenDescriptor.endFlattenDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.PadLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PadLayer}
 */
enlight_schema.PadLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadLayer=} obj
 * @returns {enlight_schema.PadLayer}
 */
enlight_schema.PadLayer.getRootAsPadLayer = function(bb, obj) {
  return (obj || new enlight_schema.PadLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadLayer=} obj
 * @returns {enlight_schema.PadLayer}
 */
enlight_schema.PadLayer.getSizePrefixedRootAsPadLayer = function(bb, obj) {
  return (obj || new enlight_schema.PadLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.PadDescriptor=} obj
 * @returns {enlight_schema.PadDescriptor|null}
 */
enlight_schema.PadLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.PadDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PadLayer.startPadLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.PadLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadLayer.endPadLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadLayer.createPadLayer = function(builder, descriptorOffset) {
  enlight_schema.PadLayer.startPadLayer(builder);
  enlight_schema.PadLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.PadLayer.endPadLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PadExtensionLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PadExtensionLayer}
 */
enlight_schema.PadExtensionLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadExtensionLayer=} obj
 * @returns {enlight_schema.PadExtensionLayer}
 */
enlight_schema.PadExtensionLayer.getRootAsPadExtensionLayer = function(bb, obj) {
  return (obj || new enlight_schema.PadExtensionLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadExtensionLayer=} obj
 * @returns {enlight_schema.PadExtensionLayer}
 */
enlight_schema.PadExtensionLayer.getSizePrefixedRootAsPadExtensionLayer = function(bb, obj) {
  return (obj || new enlight_schema.PadExtensionLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.PadDescriptor=} obj
 * @returns {enlight_schema.PadDescriptor|null}
 */
enlight_schema.PadExtensionLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.PadDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PadExtensionLayer.startPadExtensionLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.PadExtensionLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadExtensionLayer.endPadExtensionLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadExtensionLayer.createPadExtensionLayer = function(builder, descriptorOffset) {
  enlight_schema.PadExtensionLayer.startPadExtensionLayer(builder);
  enlight_schema.PadExtensionLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.PadExtensionLayer.endPadExtensionLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PadDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PadDescriptor}
 */
enlight_schema.PadDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadDescriptor=} obj
 * @returns {enlight_schema.PadDescriptor}
 */
enlight_schema.PadDescriptor.getRootAsPadDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PadDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PadDescriptor=} obj
 * @returns {enlight_schema.PadDescriptor}
 */
enlight_schema.PadDescriptor.getSizePrefixedRootAsPadDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PadDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.PadDescriptor.prototype.padList = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.PadDescriptor.prototype.padListLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.PadDescriptor.prototype.padListArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
enlight_schema.PadDescriptor.prototype.padValue = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PadDescriptor.startPadDescriptor = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} padListOffset
 */
enlight_schema.PadDescriptor.addPadList = function(builder, padListOffset) {
  builder.addFieldOffset(0, padListOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadDescriptor.createPadListVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.PadDescriptor.startPadListVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padValue
 */
enlight_schema.PadDescriptor.addPadValue = function(builder, padValue) {
  builder.addFieldFloat32(1, padValue, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadDescriptor.endPadDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} padListOffset
 * @param {number} padValue
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PadDescriptor.createPadDescriptor = function(builder, padListOffset, padValue) {
  enlight_schema.PadDescriptor.startPadDescriptor(builder);
  enlight_schema.PadDescriptor.addPadList(builder, padListOffset);
  enlight_schema.PadDescriptor.addPadValue(builder, padValue);
  return enlight_schema.PadDescriptor.endPadDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.PermuteLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PermuteLayer}
 */
enlight_schema.PermuteLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PermuteLayer=} obj
 * @returns {enlight_schema.PermuteLayer}
 */
enlight_schema.PermuteLayer.getRootAsPermuteLayer = function(bb, obj) {
  return (obj || new enlight_schema.PermuteLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PermuteLayer=} obj
 * @returns {enlight_schema.PermuteLayer}
 */
enlight_schema.PermuteLayer.getSizePrefixedRootAsPermuteLayer = function(bb, obj) {
  return (obj || new enlight_schema.PermuteLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.PermuteDescriptor=} obj
 * @returns {enlight_schema.PermuteDescriptor|null}
 */
enlight_schema.PermuteLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.PermuteDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PermuteLayer.startPermuteLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.PermuteLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PermuteLayer.endPermuteLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PermuteLayer.createPermuteLayer = function(builder, descriptorOffset) {
  enlight_schema.PermuteLayer.startPermuteLayer(builder);
  enlight_schema.PermuteLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.PermuteLayer.endPermuteLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PermuteDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PermuteDescriptor}
 */
enlight_schema.PermuteDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PermuteDescriptor=} obj
 * @returns {enlight_schema.PermuteDescriptor}
 */
enlight_schema.PermuteDescriptor.getRootAsPermuteDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PermuteDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PermuteDescriptor=} obj
 * @returns {enlight_schema.PermuteDescriptor}
 */
enlight_schema.PermuteDescriptor.getSizePrefixedRootAsPermuteDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.PermuteDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.PermuteDescriptor.prototype.dimMappings = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.PermuteDescriptor.prototype.dimMappingsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.PermuteDescriptor.prototype.dimMappingsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PermuteDescriptor.startPermuteDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dimMappingsOffset
 */
enlight_schema.PermuteDescriptor.addDimMappings = function(builder, dimMappingsOffset) {
  builder.addFieldOffset(0, dimMappingsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PermuteDescriptor.createDimMappingsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.PermuteDescriptor.startDimMappingsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PermuteDescriptor.endPermuteDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dimMappingsOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PermuteDescriptor.createPermuteDescriptor = function(builder, dimMappingsOffset) {
  enlight_schema.PermuteDescriptor.startPermuteDescriptor(builder);
  enlight_schema.PermuteDescriptor.addDimMappings(builder, dimMappingsOffset);
  return enlight_schema.PermuteDescriptor.endPermuteDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ReshapeLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReshapeLayer}
 */
enlight_schema.ReshapeLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReshapeLayer=} obj
 * @returns {enlight_schema.ReshapeLayer}
 */
enlight_schema.ReshapeLayer.getRootAsReshapeLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReshapeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReshapeLayer=} obj
 * @returns {enlight_schema.ReshapeLayer}
 */
enlight_schema.ReshapeLayer.getSizePrefixedRootAsReshapeLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReshapeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ReshapeDescriptor=} obj
 * @returns {enlight_schema.ReshapeDescriptor|null}
 */
enlight_schema.ReshapeLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ReshapeDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReshapeLayer.startReshapeLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ReshapeLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReshapeLayer.endReshapeLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReshapeLayer.createReshapeLayer = function(builder, descriptorOffset) {
  enlight_schema.ReshapeLayer.startReshapeLayer(builder);
  enlight_schema.ReshapeLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ReshapeLayer.endReshapeLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReshapeDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReshapeDescriptor}
 */
enlight_schema.ReshapeDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReshapeDescriptor=} obj
 * @returns {enlight_schema.ReshapeDescriptor}
 */
enlight_schema.ReshapeDescriptor.getRootAsReshapeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReshapeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReshapeDescriptor=} obj
 * @returns {enlight_schema.ReshapeDescriptor}
 */
enlight_schema.ReshapeDescriptor.getSizePrefixedRootAsReshapeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReshapeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.ReshapeDescriptor.prototype.targetShape = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.ReshapeDescriptor.prototype.targetShapeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.ReshapeDescriptor.prototype.targetShapeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReshapeDescriptor.startReshapeDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} targetShapeOffset
 */
enlight_schema.ReshapeDescriptor.addTargetShape = function(builder, targetShapeOffset) {
  builder.addFieldOffset(0, targetShapeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReshapeDescriptor.createTargetShapeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ReshapeDescriptor.startTargetShapeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReshapeDescriptor.endReshapeDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} targetShapeOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReshapeDescriptor.createReshapeDescriptor = function(builder, targetShapeOffset) {
  enlight_schema.ReshapeDescriptor.startReshapeDescriptor(builder);
  enlight_schema.ReshapeDescriptor.addTargetShape(builder, targetShapeOffset);
  return enlight_schema.ReshapeDescriptor.endReshapeDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ReorgLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReorgLayer}
 */
enlight_schema.ReorgLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReorgLayer=} obj
 * @returns {enlight_schema.ReorgLayer}
 */
enlight_schema.ReorgLayer.getRootAsReorgLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReorgLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReorgLayer=} obj
 * @returns {enlight_schema.ReorgLayer}
 */
enlight_schema.ReorgLayer.getSizePrefixedRootAsReorgLayer = function(bb, obj) {
  return (obj || new enlight_schema.ReorgLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.ReorgDescriptor=} obj
 * @returns {enlight_schema.ReorgDescriptor|null}
 */
enlight_schema.ReorgLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ReorgDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReorgLayer.startReorgLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.ReorgLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReorgLayer.endReorgLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReorgLayer.createReorgLayer = function(builder, descriptorOffset) {
  enlight_schema.ReorgLayer.startReorgLayer(builder);
  enlight_schema.ReorgLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.ReorgLayer.endReorgLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ReorgDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ReorgDescriptor}
 */
enlight_schema.ReorgDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReorgDescriptor=} obj
 * @returns {enlight_schema.ReorgDescriptor}
 */
enlight_schema.ReorgDescriptor.getRootAsReorgDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReorgDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ReorgDescriptor=} obj
 * @returns {enlight_schema.ReorgDescriptor}
 */
enlight_schema.ReorgDescriptor.getSizePrefixedRootAsReorgDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ReorgDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.ReorgDescriptor.prototype.stride = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ReorgDescriptor.startReorgDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stride
 */
enlight_schema.ReorgDescriptor.addStride = function(builder, stride) {
  builder.addFieldInt32(0, stride, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReorgDescriptor.endReorgDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stride
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ReorgDescriptor.createReorgDescriptor = function(builder, stride) {
  enlight_schema.ReorgDescriptor.startReorgDescriptor(builder);
  enlight_schema.ReorgDescriptor.addStride(builder, stride);
  return enlight_schema.ReorgDescriptor.endReorgDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.SliceLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SliceLayer}
 */
enlight_schema.SliceLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SliceLayer=} obj
 * @returns {enlight_schema.SliceLayer}
 */
enlight_schema.SliceLayer.getRootAsSliceLayer = function(bb, obj) {
  return (obj || new enlight_schema.SliceLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SliceLayer=} obj
 * @returns {enlight_schema.SliceLayer}
 */
enlight_schema.SliceLayer.getSizePrefixedRootAsSliceLayer = function(bb, obj) {
  return (obj || new enlight_schema.SliceLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.SliceDescriptor=} obj
 * @returns {enlight_schema.SliceDescriptor|null}
 */
enlight_schema.SliceLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.SliceDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SliceLayer.startSliceLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.SliceLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceLayer.endSliceLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceLayer.createSliceLayer = function(builder, descriptorOffset) {
  enlight_schema.SliceLayer.startSliceLayer(builder);
  enlight_schema.SliceLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.SliceLayer.endSliceLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SliceDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SliceDescriptor}
 */
enlight_schema.SliceDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SliceDescriptor=} obj
 * @returns {enlight_schema.SliceDescriptor}
 */
enlight_schema.SliceDescriptor.getRootAsSliceDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SliceDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SliceDescriptor=} obj
 * @returns {enlight_schema.SliceDescriptor}
 */
enlight_schema.SliceDescriptor.getSizePrefixedRootAsSliceDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SliceDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.starts = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.startsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SliceDescriptor.prototype.startsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.ends = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.endsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SliceDescriptor.prototype.endsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.axes = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.axesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SliceDescriptor.prototype.axesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.steps = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SliceDescriptor.prototype.stepsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SliceDescriptor.prototype.stepsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SliceDescriptor.startSliceDescriptor = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} startsOffset
 */
enlight_schema.SliceDescriptor.addStarts = function(builder, startsOffset) {
  builder.addFieldOffset(0, startsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.createStartsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SliceDescriptor.startStartsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} endsOffset
 */
enlight_schema.SliceDescriptor.addEnds = function(builder, endsOffset) {
  builder.addFieldOffset(1, endsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.createEndsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SliceDescriptor.startEndsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 */
enlight_schema.SliceDescriptor.addAxes = function(builder, axesOffset) {
  builder.addFieldOffset(2, axesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.createAxesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SliceDescriptor.startAxesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stepsOffset
 */
enlight_schema.SliceDescriptor.addSteps = function(builder, stepsOffset) {
  builder.addFieldOffset(3, stepsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.createStepsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SliceDescriptor.startStepsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.endSliceDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} startsOffset
 * @param {flatbuffers.Offset} endsOffset
 * @param {flatbuffers.Offset} axesOffset
 * @param {flatbuffers.Offset} stepsOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SliceDescriptor.createSliceDescriptor = function(builder, startsOffset, endsOffset, axesOffset, stepsOffset) {
  enlight_schema.SliceDescriptor.startSliceDescriptor(builder);
  enlight_schema.SliceDescriptor.addStarts(builder, startsOffset);
  enlight_schema.SliceDescriptor.addEnds(builder, endsOffset);
  enlight_schema.SliceDescriptor.addAxes(builder, axesOffset);
  enlight_schema.SliceDescriptor.addSteps(builder, stepsOffset);
  return enlight_schema.SliceDescriptor.endSliceDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.SwishLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SwishLayer}
 */
enlight_schema.SwishLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SwishLayer=} obj
 * @returns {enlight_schema.SwishLayer}
 */
enlight_schema.SwishLayer.getRootAsSwishLayer = function(bb, obj) {
  return (obj || new enlight_schema.SwishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SwishLayer=} obj
 * @returns {enlight_schema.SwishLayer}
 */
enlight_schema.SwishLayer.getSizePrefixedRootAsSwishLayer = function(bb, obj) {
  return (obj || new enlight_schema.SwishLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SwishLayer.startSwishLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SwishLayer.endSwishLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SwishLayer.createSwishLayer = function(builder) {
  enlight_schema.SwishLayer.startSwishLayer(builder);
  return enlight_schema.SwishLayer.endSwishLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.Reorg3dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Reorg3dLayer}
 */
enlight_schema.Reorg3dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Reorg3dLayer=} obj
 * @returns {enlight_schema.Reorg3dLayer}
 */
enlight_schema.Reorg3dLayer.getRootAsReorg3dLayer = function(bb, obj) {
  return (obj || new enlight_schema.Reorg3dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Reorg3dLayer=} obj
 * @returns {enlight_schema.Reorg3dLayer}
 */
enlight_schema.Reorg3dLayer.getSizePrefixedRootAsReorg3dLayer = function(bb, obj) {
  return (obj || new enlight_schema.Reorg3dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.Reorg3dDescriptor=} obj
 * @returns {enlight_schema.Reorg3dDescriptor|null}
 */
enlight_schema.Reorg3dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.Reorg3dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Reorg3dLayer.startReorg3dLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.Reorg3dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Reorg3dLayer.endReorg3dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Reorg3dLayer.createReorg3dLayer = function(builder, descriptorOffset) {
  enlight_schema.Reorg3dLayer.startReorg3dLayer(builder);
  enlight_schema.Reorg3dLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.Reorg3dLayer.endReorg3dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.Reorg3dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Reorg3dDescriptor}
 */
enlight_schema.Reorg3dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Reorg3dDescriptor=} obj
 * @returns {enlight_schema.Reorg3dDescriptor}
 */
enlight_schema.Reorg3dDescriptor.getRootAsReorg3dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Reorg3dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Reorg3dDescriptor=} obj
 * @returns {enlight_schema.Reorg3dDescriptor}
 */
enlight_schema.Reorg3dDescriptor.getSizePrefixedRootAsReorg3dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.Reorg3dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.Reorg3dDescriptor.prototype.stride = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Reorg3dDescriptor.startReorg3dDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stride
 */
enlight_schema.Reorg3dDescriptor.addStride = function(builder, stride) {
  builder.addFieldInt32(0, stride, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Reorg3dDescriptor.endReorg3dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} stride
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Reorg3dDescriptor.createReorg3dDescriptor = function(builder, stride) {
  enlight_schema.Reorg3dDescriptor.startReorg3dDescriptor(builder);
  enlight_schema.Reorg3dDescriptor.addStride(builder, stride);
  return enlight_schema.Reorg3dDescriptor.endReorg3dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.UnsqueezeLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.UnsqueezeLayer}
 */
enlight_schema.UnsqueezeLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UnsqueezeLayer=} obj
 * @returns {enlight_schema.UnsqueezeLayer}
 */
enlight_schema.UnsqueezeLayer.getRootAsUnsqueezeLayer = function(bb, obj) {
  return (obj || new enlight_schema.UnsqueezeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UnsqueezeLayer=} obj
 * @returns {enlight_schema.UnsqueezeLayer}
 */
enlight_schema.UnsqueezeLayer.getSizePrefixedRootAsUnsqueezeLayer = function(bb, obj) {
  return (obj || new enlight_schema.UnsqueezeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.UnsqueezeDescriptor=} obj
 * @returns {enlight_schema.UnsqueezeDescriptor|null}
 */
enlight_schema.UnsqueezeLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.UnsqueezeDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.UnsqueezeLayer.startUnsqueezeLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.UnsqueezeLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UnsqueezeLayer.endUnsqueezeLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UnsqueezeLayer.createUnsqueezeLayer = function(builder, descriptorOffset) {
  enlight_schema.UnsqueezeLayer.startUnsqueezeLayer(builder);
  enlight_schema.UnsqueezeLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.UnsqueezeLayer.endUnsqueezeLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.UnsqueezeDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.UnsqueezeDescriptor}
 */
enlight_schema.UnsqueezeDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UnsqueezeDescriptor=} obj
 * @returns {enlight_schema.UnsqueezeDescriptor}
 */
enlight_schema.UnsqueezeDescriptor.getRootAsUnsqueezeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.UnsqueezeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.UnsqueezeDescriptor=} obj
 * @returns {enlight_schema.UnsqueezeDescriptor}
 */
enlight_schema.UnsqueezeDescriptor.getSizePrefixedRootAsUnsqueezeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.UnsqueezeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.UnsqueezeDescriptor.prototype.axes = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.UnsqueezeDescriptor.prototype.axesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.UnsqueezeDescriptor.prototype.axesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.UnsqueezeDescriptor.startUnsqueezeDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 */
enlight_schema.UnsqueezeDescriptor.addAxes = function(builder, axesOffset) {
  builder.addFieldOffset(0, axesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UnsqueezeDescriptor.createAxesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.UnsqueezeDescriptor.startAxesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UnsqueezeDescriptor.endUnsqueezeDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.UnsqueezeDescriptor.createUnsqueezeDescriptor = function(builder, axesOffset) {
  enlight_schema.UnsqueezeDescriptor.startUnsqueezeDescriptor(builder);
  enlight_schema.UnsqueezeDescriptor.addAxes(builder, axesOffset);
  return enlight_schema.UnsqueezeDescriptor.endUnsqueezeDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualDmaLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualDmaLayer}
 */
enlight_schema.VirtualDmaLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualDmaLayer=} obj
 * @returns {enlight_schema.VirtualDmaLayer}
 */
enlight_schema.VirtualDmaLayer.getRootAsVirtualDmaLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualDmaLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualDmaLayer=} obj
 * @returns {enlight_schema.VirtualDmaLayer}
 */
enlight_schema.VirtualDmaLayer.getSizePrefixedRootAsVirtualDmaLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualDmaLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.VirtualDmaDescriptor=} obj
 * @returns {enlight_schema.VirtualDmaDescriptor|null}
 */
enlight_schema.VirtualDmaLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.VirtualDmaDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualDmaLayer.startVirtualDmaLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.VirtualDmaLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualDmaLayer.endVirtualDmaLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualDmaLayer.createVirtualDmaLayer = function(builder, descriptorOffset) {
  enlight_schema.VirtualDmaLayer.startVirtualDmaLayer(builder);
  enlight_schema.VirtualDmaLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.VirtualDmaLayer.endVirtualDmaLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualDmaDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualDmaDescriptor}
 */
enlight_schema.VirtualDmaDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualDmaDescriptor=} obj
 * @returns {enlight_schema.VirtualDmaDescriptor}
 */
enlight_schema.VirtualDmaDescriptor.getRootAsVirtualDmaDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.VirtualDmaDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualDmaDescriptor=} obj
 * @returns {enlight_schema.VirtualDmaDescriptor}
 */
enlight_schema.VirtualDmaDescriptor.getSizePrefixedRootAsVirtualDmaDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.VirtualDmaDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.VirtualDmaDescriptor.prototype.mode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualDmaDescriptor.prototype.extOffset = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.VirtualDmaDescriptor.prototype.csc = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualDmaDescriptor.prototype.im2col = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.VirtualDmaDescriptor.prototype.sinv = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualDmaDescriptor.startVirtualDmaDescriptor = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modeOffset
 */
enlight_schema.VirtualDmaDescriptor.addMode = function(builder, modeOffset) {
  builder.addFieldOffset(0, modeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} extOffset
 */
enlight_schema.VirtualDmaDescriptor.addExtOffset = function(builder, extOffset) {
  builder.addFieldInt32(1, extOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} csc
 */
enlight_schema.VirtualDmaDescriptor.addCsc = function(builder, csc) {
  builder.addFieldInt8(2, +csc, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} im2col
 */
enlight_schema.VirtualDmaDescriptor.addIm2col = function(builder, im2col) {
  builder.addFieldInt32(3, im2col, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} sinv
 */
enlight_schema.VirtualDmaDescriptor.addSinv = function(builder, sinv) {
  builder.addFieldInt8(4, +sinv, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualDmaDescriptor.endVirtualDmaDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modeOffset
 * @param {number} extOffset
 * @param {boolean} csc
 * @param {number} im2col
 * @param {boolean} sinv
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualDmaDescriptor.createVirtualDmaDescriptor = function(builder, modeOffset, extOffset, csc, im2col, sinv) {
  enlight_schema.VirtualDmaDescriptor.startVirtualDmaDescriptor(builder);
  enlight_schema.VirtualDmaDescriptor.addMode(builder, modeOffset);
  enlight_schema.VirtualDmaDescriptor.addExtOffset(builder, extOffset);
  enlight_schema.VirtualDmaDescriptor.addCsc(builder, csc);
  enlight_schema.VirtualDmaDescriptor.addIm2col(builder, im2col);
  enlight_schema.VirtualDmaDescriptor.addSinv(builder, sinv);
  return enlight_schema.VirtualDmaDescriptor.endVirtualDmaDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualScalerLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualScalerLayer}
 */
enlight_schema.VirtualScalerLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScalerLayer=} obj
 * @returns {enlight_schema.VirtualScalerLayer}
 */
enlight_schema.VirtualScalerLayer.getRootAsVirtualScalerLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScalerLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScalerLayer=} obj
 * @returns {enlight_schema.VirtualScalerLayer}
 */
enlight_schema.VirtualScalerLayer.getSizePrefixedRootAsVirtualScalerLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScalerLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.VirtualScalerDescriptor=} obj
 * @returns {enlight_schema.VirtualScalerDescriptor|null}
 */
enlight_schema.VirtualScalerLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.VirtualScalerDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualScalerLayer.startVirtualScalerLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.VirtualScalerLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScalerLayer.endVirtualScalerLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScalerLayer.createVirtualScalerLayer = function(builder, descriptorOffset) {
  enlight_schema.VirtualScalerLayer.startVirtualScalerLayer(builder);
  enlight_schema.VirtualScalerLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.VirtualScalerLayer.endVirtualScalerLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualScalerDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualScalerDescriptor}
 */
enlight_schema.VirtualScalerDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScalerDescriptor=} obj
 * @returns {enlight_schema.VirtualScalerDescriptor}
 */
enlight_schema.VirtualScalerDescriptor.getRootAsVirtualScalerDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScalerDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScalerDescriptor=} obj
 * @returns {enlight_schema.VirtualScalerDescriptor}
 */
enlight_schema.VirtualScalerDescriptor.getSizePrefixedRootAsVirtualScalerDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScalerDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.VirtualScalerDescriptor.prototype.mode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScalerDescriptor.prototype.constAdd = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScalerDescriptor.prototype.constMul1 = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScalerDescriptor.prototype.constMul2 = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScalerDescriptor.prototype.constScale = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 128;
};

/**
 * @returns {number}
 */
enlight_schema.VirtualScalerDescriptor.prototype.trunc = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualScalerDescriptor.startVirtualScalerDescriptor = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modeOffset
 */
enlight_schema.VirtualScalerDescriptor.addMode = function(builder, modeOffset) {
  builder.addFieldOffset(0, modeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} constAdd
 */
enlight_schema.VirtualScalerDescriptor.addConstAdd = function(builder, constAdd) {
  builder.addFieldInt32(1, constAdd, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} constMul1
 */
enlight_schema.VirtualScalerDescriptor.addConstMul1 = function(builder, constMul1) {
  builder.addFieldInt32(2, constMul1, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} constMul2
 */
enlight_schema.VirtualScalerDescriptor.addConstMul2 = function(builder, constMul2) {
  builder.addFieldInt32(3, constMul2, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} constScale
 */
enlight_schema.VirtualScalerDescriptor.addConstScale = function(builder, constScale) {
  builder.addFieldInt32(4, constScale, 128);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} trunc
 */
enlight_schema.VirtualScalerDescriptor.addTrunc = function(builder, trunc) {
  builder.addFieldInt32(5, trunc, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScalerDescriptor.endVirtualScalerDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modeOffset
 * @param {number} constAdd
 * @param {number} constMul1
 * @param {number} constMul2
 * @param {number} constScale
 * @param {number} trunc
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScalerDescriptor.createVirtualScalerDescriptor = function(builder, modeOffset, constAdd, constMul1, constMul2, constScale, trunc) {
  enlight_schema.VirtualScalerDescriptor.startVirtualScalerDescriptor(builder);
  enlight_schema.VirtualScalerDescriptor.addMode(builder, modeOffset);
  enlight_schema.VirtualScalerDescriptor.addConstAdd(builder, constAdd);
  enlight_schema.VirtualScalerDescriptor.addConstMul1(builder, constMul1);
  enlight_schema.VirtualScalerDescriptor.addConstMul2(builder, constMul2);
  enlight_schema.VirtualScalerDescriptor.addConstScale(builder, constScale);
  enlight_schema.VirtualScalerDescriptor.addTrunc(builder, trunc);
  return enlight_schema.VirtualScalerDescriptor.endVirtualScalerDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualBitConverterLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualBitConverterLayer}
 */
enlight_schema.VirtualBitConverterLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualBitConverterLayer=} obj
 * @returns {enlight_schema.VirtualBitConverterLayer}
 */
enlight_schema.VirtualBitConverterLayer.getRootAsVirtualBitConverterLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualBitConverterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualBitConverterLayer=} obj
 * @returns {enlight_schema.VirtualBitConverterLayer}
 */
enlight_schema.VirtualBitConverterLayer.getSizePrefixedRootAsVirtualBitConverterLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualBitConverterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.VirtualScalerDescriptor=} obj
 * @returns {enlight_schema.VirtualScalerDescriptor|null}
 */
enlight_schema.VirtualBitConverterLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.VirtualScalerDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualBitConverterLayer.startVirtualBitConverterLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.VirtualBitConverterLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualBitConverterLayer.endVirtualBitConverterLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualBitConverterLayer.createVirtualBitConverterLayer = function(builder, descriptorOffset) {
  enlight_schema.VirtualBitConverterLayer.startVirtualBitConverterLayer(builder);
  enlight_schema.VirtualBitConverterLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.VirtualBitConverterLayer.endVirtualBitConverterLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.VirtualScaleConverterLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.VirtualScaleConverterLayer}
 */
enlight_schema.VirtualScaleConverterLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScaleConverterLayer=} obj
 * @returns {enlight_schema.VirtualScaleConverterLayer}
 */
enlight_schema.VirtualScaleConverterLayer.getRootAsVirtualScaleConverterLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScaleConverterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.VirtualScaleConverterLayer=} obj
 * @returns {enlight_schema.VirtualScaleConverterLayer}
 */
enlight_schema.VirtualScaleConverterLayer.getSizePrefixedRootAsVirtualScaleConverterLayer = function(bb, obj) {
  return (obj || new enlight_schema.VirtualScaleConverterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.VirtualScaleConverterLayer.startVirtualScaleConverterLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScaleConverterLayer.endVirtualScaleConverterLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.VirtualScaleConverterLayer.createVirtualScaleConverterLayer = function(builder) {
  enlight_schema.VirtualScaleConverterLayer.startVirtualScaleConverterLayer(builder);
  return enlight_schema.VirtualScaleConverterLayer.endVirtualScaleConverterLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.ResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ResidualGroup}
 */
enlight_schema.ResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ResidualGroup=} obj
 * @returns {enlight_schema.ResidualGroup}
 */
enlight_schema.ResidualGroup.getRootAsResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.ResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ResidualGroup=} obj
 * @returns {enlight_schema.ResidualGroup}
 */
enlight_schema.ResidualGroup.getSizePrefixedRootAsResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.ResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ResidualGroup.startResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ResidualGroup.endResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ResidualGroup.createResidualGroup = function(builder) {
  enlight_schema.ResidualGroup.startResidualGroup(builder);
  return enlight_schema.ResidualGroup.endResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.SerialGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SerialGroup}
 */
enlight_schema.SerialGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SerialGroup=} obj
 * @returns {enlight_schema.SerialGroup}
 */
enlight_schema.SerialGroup.getRootAsSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.SerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SerialGroup=} obj
 * @returns {enlight_schema.SerialGroup}
 */
enlight_schema.SerialGroup.getSizePrefixedRootAsSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.SerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SerialGroup.startSerialGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SerialGroup.endSerialGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SerialGroup.createSerialGroup = function(builder) {
  enlight_schema.SerialGroup.startSerialGroup(builder);
  return enlight_schema.SerialGroup.endSerialGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.InverseYGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.InverseYGroup}
 */
enlight_schema.InverseYGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InverseYGroup=} obj
 * @returns {enlight_schema.InverseYGroup}
 */
enlight_schema.InverseYGroup.getRootAsInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.InverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.InverseYGroup=} obj
 * @returns {enlight_schema.InverseYGroup}
 */
enlight_schema.InverseYGroup.getSizePrefixedRootAsInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.InverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.InverseYGroup.startInverseYGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InverseYGroup.endInverseYGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.InverseYGroup.createInverseYGroup = function(builder) {
  enlight_schema.InverseYGroup.startInverseYGroup(builder);
  return enlight_schema.InverseYGroup.endInverseYGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.SingleGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SingleGroup}
 */
enlight_schema.SingleGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SingleGroup=} obj
 * @returns {enlight_schema.SingleGroup}
 */
enlight_schema.SingleGroup.getRootAsSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.SingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SingleGroup=} obj
 * @returns {enlight_schema.SingleGroup}
 */
enlight_schema.SingleGroup.getSizePrefixedRootAsSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.SingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SingleGroup.startSingleGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SingleGroup.endSingleGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SingleGroup.createSingleGroup = function(builder) {
  enlight_schema.SingleGroup.startSingleGroup(builder);
  return enlight_schema.SingleGroup.endSingleGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.NpuFriendlyReshapeGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.NpuFriendlyReshapeGroup}
 */
enlight_schema.NpuFriendlyReshapeGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.NpuFriendlyReshapeGroup=} obj
 * @returns {enlight_schema.NpuFriendlyReshapeGroup}
 */
enlight_schema.NpuFriendlyReshapeGroup.getRootAsNpuFriendlyReshapeGroup = function(bb, obj) {
  return (obj || new enlight_schema.NpuFriendlyReshapeGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.NpuFriendlyReshapeGroup=} obj
 * @returns {enlight_schema.NpuFriendlyReshapeGroup}
 */
enlight_schema.NpuFriendlyReshapeGroup.getSizePrefixedRootAsNpuFriendlyReshapeGroup = function(bb, obj) {
  return (obj || new enlight_schema.NpuFriendlyReshapeGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.NpuFriendlyReshapeGroup.startNpuFriendlyReshapeGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NpuFriendlyReshapeGroup.endNpuFriendlyReshapeGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NpuFriendlyReshapeGroup.createNpuFriendlyReshapeGroup = function(builder) {
  enlight_schema.NpuFriendlyReshapeGroup.startNpuFriendlyReshapeGroup(builder);
  return enlight_schema.NpuFriendlyReshapeGroup.endNpuFriendlyReshapeGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedResidualGroup}
 */
enlight_schema.RowPartitionedResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedResidualGroup=} obj
 * @returns {enlight_schema.RowPartitionedResidualGroup}
 */
enlight_schema.RowPartitionedResidualGroup.getRootAsRowPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedResidualGroup=} obj
 * @returns {enlight_schema.RowPartitionedResidualGroup}
 */
enlight_schema.RowPartitionedResidualGroup.getSizePrefixedRootAsRowPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedResidualGroup.startRowPartitionedResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedResidualGroup.endRowPartitionedResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedResidualGroup.createRowPartitionedResidualGroup = function(builder) {
  enlight_schema.RowPartitionedResidualGroup.startRowPartitionedResidualGroup(builder);
  return enlight_schema.RowPartitionedResidualGroup.endRowPartitionedResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedSerialGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedSerialGroup}
 */
enlight_schema.RowPartitionedSerialGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSerialGroup=} obj
 * @returns {enlight_schema.RowPartitionedSerialGroup}
 */
enlight_schema.RowPartitionedSerialGroup.getRootAsRowPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSerialGroup=} obj
 * @returns {enlight_schema.RowPartitionedSerialGroup}
 */
enlight_schema.RowPartitionedSerialGroup.getSizePrefixedRootAsRowPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedSerialGroup.startRowPartitionedSerialGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSerialGroup.endRowPartitionedSerialGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSerialGroup.createRowPartitionedSerialGroup = function(builder) {
  enlight_schema.RowPartitionedSerialGroup.startRowPartitionedSerialGroup(builder);
  return enlight_schema.RowPartitionedSerialGroup.endRowPartitionedSerialGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedInverseYGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedInverseYGroup}
 */
enlight_schema.RowPartitionedInverseYGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.RowPartitionedInverseYGroup}
 */
enlight_schema.RowPartitionedInverseYGroup.getRootAsRowPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.RowPartitionedInverseYGroup}
 */
enlight_schema.RowPartitionedInverseYGroup.getSizePrefixedRootAsRowPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedInverseYGroup.startRowPartitionedInverseYGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedInverseYGroup.endRowPartitionedInverseYGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedInverseYGroup.createRowPartitionedInverseYGroup = function(builder) {
  enlight_schema.RowPartitionedInverseYGroup.startRowPartitionedInverseYGroup(builder);
  return enlight_schema.RowPartitionedInverseYGroup.endRowPartitionedInverseYGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedSingleGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedSingleGroup}
 */
enlight_schema.RowPartitionedSingleGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSingleGroup=} obj
 * @returns {enlight_schema.RowPartitionedSingleGroup}
 */
enlight_schema.RowPartitionedSingleGroup.getRootAsRowPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSingleGroup=} obj
 * @returns {enlight_schema.RowPartitionedSingleGroup}
 */
enlight_schema.RowPartitionedSingleGroup.getSizePrefixedRootAsRowPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedSingleGroup.startRowPartitionedSingleGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSingleGroup.endRowPartitionedSingleGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSingleGroup.createRowPartitionedSingleGroup = function(builder) {
  enlight_schema.RowPartitionedSingleGroup.startRowPartitionedSingleGroup(builder);
  return enlight_schema.RowPartitionedSingleGroup.endRowPartitionedSingleGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedResidualGroup}
 */
enlight_schema.OchPartitionedResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedResidualGroup=} obj
 * @returns {enlight_schema.OchPartitionedResidualGroup}
 */
enlight_schema.OchPartitionedResidualGroup.getRootAsOchPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedResidualGroup=} obj
 * @returns {enlight_schema.OchPartitionedResidualGroup}
 */
enlight_schema.OchPartitionedResidualGroup.getSizePrefixedRootAsOchPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedResidualGroup.startOchPartitionedResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedResidualGroup.endOchPartitionedResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedResidualGroup.createOchPartitionedResidualGroup = function(builder) {
  enlight_schema.OchPartitionedResidualGroup.startOchPartitionedResidualGroup(builder);
  return enlight_schema.OchPartitionedResidualGroup.endOchPartitionedResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedSerialGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedSerialGroup}
 */
enlight_schema.OchPartitionedSerialGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedSerialGroup=} obj
 * @returns {enlight_schema.OchPartitionedSerialGroup}
 */
enlight_schema.OchPartitionedSerialGroup.getRootAsOchPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedSerialGroup=} obj
 * @returns {enlight_schema.OchPartitionedSerialGroup}
 */
enlight_schema.OchPartitionedSerialGroup.getSizePrefixedRootAsOchPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedSerialGroup.startOchPartitionedSerialGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedSerialGroup.endOchPartitionedSerialGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedSerialGroup.createOchPartitionedSerialGroup = function(builder) {
  enlight_schema.OchPartitionedSerialGroup.startOchPartitionedSerialGroup(builder);
  return enlight_schema.OchPartitionedSerialGroup.endOchPartitionedSerialGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedInverseYGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedInverseYGroup}
 */
enlight_schema.OchPartitionedInverseYGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.OchPartitionedInverseYGroup}
 */
enlight_schema.OchPartitionedInverseYGroup.getRootAsOchPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.OchPartitionedInverseYGroup}
 */
enlight_schema.OchPartitionedInverseYGroup.getSizePrefixedRootAsOchPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedInverseYGroup.startOchPartitionedInverseYGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedInverseYGroup.endOchPartitionedInverseYGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedInverseYGroup.createOchPartitionedInverseYGroup = function(builder) {
  enlight_schema.OchPartitionedInverseYGroup.startOchPartitionedInverseYGroup(builder);
  return enlight_schema.OchPartitionedInverseYGroup.endOchPartitionedInverseYGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedSingleGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedSingleGroup}
 */
enlight_schema.OchPartitionedSingleGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedSingleGroup=} obj
 * @returns {enlight_schema.OchPartitionedSingleGroup}
 */
enlight_schema.OchPartitionedSingleGroup.getRootAsOchPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedSingleGroup=} obj
 * @returns {enlight_schema.OchPartitionedSingleGroup}
 */
enlight_schema.OchPartitionedSingleGroup.getSizePrefixedRootAsOchPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedSingleGroup.startOchPartitionedSingleGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedSingleGroup.endOchPartitionedSingleGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedSingleGroup.createOchPartitionedSingleGroup = function(builder) {
  enlight_schema.OchPartitionedSingleGroup.startOchPartitionedSingleGroup(builder);
  return enlight_schema.OchPartitionedSingleGroup.endOchPartitionedSingleGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowOchPartitionedSerialResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowOchPartitionedSerialResidualGroup}
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSerialResidualGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSerialResidualGroup}
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.getRootAsRowOchPartitionedSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSerialResidualGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSerialResidualGroup}
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.getSizePrefixedRootAsRowOchPartitionedSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.startRowOchPartitionedSerialResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.endRowOchPartitionedSerialResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSerialResidualGroup.createRowOchPartitionedSerialResidualGroup = function(builder) {
  enlight_schema.RowOchPartitionedSerialResidualGroup.startRowOchPartitionedSerialResidualGroup(builder);
  return enlight_schema.RowOchPartitionedSerialResidualGroup.endRowOchPartitionedSerialResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowOchPartitionedResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowOchPartitionedResidualGroup}
 */
enlight_schema.RowOchPartitionedResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedResidualGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedResidualGroup}
 */
enlight_schema.RowOchPartitionedResidualGroup.getRootAsRowOchPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedResidualGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedResidualGroup}
 */
enlight_schema.RowOchPartitionedResidualGroup.getSizePrefixedRootAsRowOchPartitionedResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowOchPartitionedResidualGroup.startRowOchPartitionedResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedResidualGroup.endRowOchPartitionedResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedResidualGroup.createRowOchPartitionedResidualGroup = function(builder) {
  enlight_schema.RowOchPartitionedResidualGroup.startRowOchPartitionedResidualGroup(builder);
  return enlight_schema.RowOchPartitionedResidualGroup.endRowOchPartitionedResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowOchPartitionedSerialGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowOchPartitionedSerialGroup}
 */
enlight_schema.RowOchPartitionedSerialGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSerialGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSerialGroup}
 */
enlight_schema.RowOchPartitionedSerialGroup.getRootAsRowOchPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSerialGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSerialGroup}
 */
enlight_schema.RowOchPartitionedSerialGroup.getSizePrefixedRootAsRowOchPartitionedSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowOchPartitionedSerialGroup.startRowOchPartitionedSerialGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSerialGroup.endRowOchPartitionedSerialGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSerialGroup.createRowOchPartitionedSerialGroup = function(builder) {
  enlight_schema.RowOchPartitionedSerialGroup.startRowOchPartitionedSerialGroup(builder);
  return enlight_schema.RowOchPartitionedSerialGroup.endRowOchPartitionedSerialGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowOchPartitionedInverseYGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowOchPartitionedInverseYGroup}
 */
enlight_schema.RowOchPartitionedInverseYGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedInverseYGroup}
 */
enlight_schema.RowOchPartitionedInverseYGroup.getRootAsRowOchPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedInverseYGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedInverseYGroup}
 */
enlight_schema.RowOchPartitionedInverseYGroup.getSizePrefixedRootAsRowOchPartitionedInverseYGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedInverseYGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowOchPartitionedInverseYGroup.startRowOchPartitionedInverseYGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedInverseYGroup.endRowOchPartitionedInverseYGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedInverseYGroup.createRowOchPartitionedInverseYGroup = function(builder) {
  enlight_schema.RowOchPartitionedInverseYGroup.startRowOchPartitionedInverseYGroup(builder);
  return enlight_schema.RowOchPartitionedInverseYGroup.endRowOchPartitionedInverseYGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowOchPartitionedSingleGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowOchPartitionedSingleGroup}
 */
enlight_schema.RowOchPartitionedSingleGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSingleGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSingleGroup}
 */
enlight_schema.RowOchPartitionedSingleGroup.getRootAsRowOchPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowOchPartitionedSingleGroup=} obj
 * @returns {enlight_schema.RowOchPartitionedSingleGroup}
 */
enlight_schema.RowOchPartitionedSingleGroup.getSizePrefixedRootAsRowOchPartitionedSingleGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowOchPartitionedSingleGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowOchPartitionedSingleGroup.startRowOchPartitionedSingleGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSingleGroup.endRowOchPartitionedSingleGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowOchPartitionedSingleGroup.createRowOchPartitionedSingleGroup = function(builder) {
  enlight_schema.RowOchPartitionedSingleGroup.startRowOchPartitionedSingleGroup(builder);
  return enlight_schema.RowOchPartitionedSingleGroup.endRowOchPartitionedSingleGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.FusedResidualSerialGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.FusedResidualSerialGroup}
 */
enlight_schema.FusedResidualSerialGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FusedResidualSerialGroup=} obj
 * @returns {enlight_schema.FusedResidualSerialGroup}
 */
enlight_schema.FusedResidualSerialGroup.getRootAsFusedResidualSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.FusedResidualSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FusedResidualSerialGroup=} obj
 * @returns {enlight_schema.FusedResidualSerialGroup}
 */
enlight_schema.FusedResidualSerialGroup.getSizePrefixedRootAsFusedResidualSerialGroup = function(bb, obj) {
  return (obj || new enlight_schema.FusedResidualSerialGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.FusedResidualSerialGroup.startFusedResidualSerialGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FusedResidualSerialGroup.endFusedResidualSerialGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FusedResidualSerialGroup.createFusedResidualSerialGroup = function(builder) {
  enlight_schema.FusedResidualSerialGroup.startFusedResidualSerialGroup(builder);
  return enlight_schema.FusedResidualSerialGroup.endFusedResidualSerialGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.MiscGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MiscGroup}
 */
enlight_schema.MiscGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MiscGroup=} obj
 * @returns {enlight_schema.MiscGroup}
 */
enlight_schema.MiscGroup.getRootAsMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.MiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MiscGroup=} obj
 * @returns {enlight_schema.MiscGroup}
 */
enlight_schema.MiscGroup.getSizePrefixedRootAsMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.MiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MiscGroup.startMiscGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MiscGroup.endMiscGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MiscGroup.createMiscGroup = function(builder) {
  enlight_schema.MiscGroup.startMiscGroup(builder);
  return enlight_schema.MiscGroup.endMiscGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedMiscGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedMiscGroup}
 */
enlight_schema.RowPartitionedMiscGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedMiscGroup=} obj
 * @returns {enlight_schema.RowPartitionedMiscGroup}
 */
enlight_schema.RowPartitionedMiscGroup.getRootAsRowPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedMiscGroup=} obj
 * @returns {enlight_schema.RowPartitionedMiscGroup}
 */
enlight_schema.RowPartitionedMiscGroup.getSizePrefixedRootAsRowPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedMiscGroup.startRowPartitionedMiscGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedMiscGroup.endRowPartitionedMiscGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedMiscGroup.createRowPartitionedMiscGroup = function(builder) {
  enlight_schema.RowPartitionedMiscGroup.startRowPartitionedMiscGroup(builder);
  return enlight_schema.RowPartitionedMiscGroup.endRowPartitionedMiscGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedMiscGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedMiscGroup}
 */
enlight_schema.OchPartitionedMiscGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedMiscGroup=} obj
 * @returns {enlight_schema.OchPartitionedMiscGroup}
 */
enlight_schema.OchPartitionedMiscGroup.getRootAsOchPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedMiscGroup=} obj
 * @returns {enlight_schema.OchPartitionedMiscGroup}
 */
enlight_schema.OchPartitionedMiscGroup.getSizePrefixedRootAsOchPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedMiscGroup.startOchPartitionedMiscGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedMiscGroup.endOchPartitionedMiscGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedMiscGroup.createOchPartitionedMiscGroup = function(builder) {
  enlight_schema.OchPartitionedMiscGroup.startOchPartitionedMiscGroup(builder);
  return enlight_schema.OchPartitionedMiscGroup.endOchPartitionedMiscGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchRowPartitionedMiscGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchRowPartitionedMiscGroup}
 */
enlight_schema.OchRowPartitionedMiscGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchRowPartitionedMiscGroup=} obj
 * @returns {enlight_schema.OchRowPartitionedMiscGroup}
 */
enlight_schema.OchRowPartitionedMiscGroup.getRootAsOchRowPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchRowPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchRowPartitionedMiscGroup=} obj
 * @returns {enlight_schema.OchRowPartitionedMiscGroup}
 */
enlight_schema.OchRowPartitionedMiscGroup.getSizePrefixedRootAsOchRowPartitionedMiscGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchRowPartitionedMiscGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchRowPartitionedMiscGroup.startOchRowPartitionedMiscGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchRowPartitionedMiscGroup.endOchRowPartitionedMiscGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchRowPartitionedMiscGroup.createOchRowPartitionedMiscGroup = function(builder) {
  enlight_schema.OchRowPartitionedMiscGroup.startOchRowPartitionedMiscGroup(builder);
  return enlight_schema.OchRowPartitionedMiscGroup.endOchRowPartitionedMiscGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedSerialResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedSerialResidualGroup}
 */
enlight_schema.RowPartitionedSerialResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSerialResidualGroup=} obj
 * @returns {enlight_schema.RowPartitionedSerialResidualGroup}
 */
enlight_schema.RowPartitionedSerialResidualGroup.getRootAsRowPartitionedSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedSerialResidualGroup=} obj
 * @returns {enlight_schema.RowPartitionedSerialResidualGroup}
 */
enlight_schema.RowPartitionedSerialResidualGroup.getSizePrefixedRootAsRowPartitionedSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedSerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedSerialResidualGroup.startRowPartitionedSerialResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSerialResidualGroup.endRowPartitionedSerialResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedSerialResidualGroup.createRowPartitionedSerialResidualGroup = function(builder) {
  enlight_schema.RowPartitionedSerialResidualGroup.startRowPartitionedSerialResidualGroup(builder);
  return enlight_schema.RowPartitionedSerialResidualGroup.endRowPartitionedSerialResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.SerialResidualGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SerialResidualGroup}
 */
enlight_schema.SerialResidualGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SerialResidualGroup=} obj
 * @returns {enlight_schema.SerialResidualGroup}
 */
enlight_schema.SerialResidualGroup.getRootAsSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.SerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SerialResidualGroup=} obj
 * @returns {enlight_schema.SerialResidualGroup}
 */
enlight_schema.SerialResidualGroup.getSizePrefixedRootAsSerialResidualGroup = function(bb, obj) {
  return (obj || new enlight_schema.SerialResidualGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SerialResidualGroup.startSerialResidualGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SerialResidualGroup.endSerialResidualGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SerialResidualGroup.createSerialResidualGroup = function(builder) {
  enlight_schema.SerialResidualGroup.startSerialResidualGroup(builder);
  return enlight_schema.SerialResidualGroup.endSerialResidualGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.ConstGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ConstGroup}
 */
enlight_schema.ConstGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstGroup=} obj
 * @returns {enlight_schema.ConstGroup}
 */
enlight_schema.ConstGroup.getRootAsConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.ConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ConstGroup=} obj
 * @returns {enlight_schema.ConstGroup}
 */
enlight_schema.ConstGroup.getSizePrefixedRootAsConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.ConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ConstGroup.startConstGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstGroup.endConstGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ConstGroup.createConstGroup = function(builder) {
  enlight_schema.ConstGroup.startConstGroup(builder);
  return enlight_schema.ConstGroup.endConstGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionedConstGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionedConstGroup}
 */
enlight_schema.RowPartitionedConstGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedConstGroup=} obj
 * @returns {enlight_schema.RowPartitionedConstGroup}
 */
enlight_schema.RowPartitionedConstGroup.getRootAsRowPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionedConstGroup=} obj
 * @returns {enlight_schema.RowPartitionedConstGroup}
 */
enlight_schema.RowPartitionedConstGroup.getSizePrefixedRootAsRowPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionedConstGroup.startRowPartitionedConstGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedConstGroup.endRowPartitionedConstGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionedConstGroup.createRowPartitionedConstGroup = function(builder) {
  enlight_schema.RowPartitionedConstGroup.startRowPartitionedConstGroup(builder);
  return enlight_schema.RowPartitionedConstGroup.endRowPartitionedConstGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchPartitionedConstGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchPartitionedConstGroup}
 */
enlight_schema.OchPartitionedConstGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedConstGroup=} obj
 * @returns {enlight_schema.OchPartitionedConstGroup}
 */
enlight_schema.OchPartitionedConstGroup.getRootAsOchPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchPartitionedConstGroup=} obj
 * @returns {enlight_schema.OchPartitionedConstGroup}
 */
enlight_schema.OchPartitionedConstGroup.getSizePrefixedRootAsOchPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchPartitionedConstGroup.startOchPartitionedConstGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedConstGroup.endOchPartitionedConstGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchPartitionedConstGroup.createOchPartitionedConstGroup = function(builder) {
  enlight_schema.OchPartitionedConstGroup.startOchPartitionedConstGroup(builder);
  return enlight_schema.OchPartitionedConstGroup.endOchPartitionedConstGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.OchRowPartitionedConstGroup = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.OchRowPartitionedConstGroup}
 */
enlight_schema.OchRowPartitionedConstGroup.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchRowPartitionedConstGroup=} obj
 * @returns {enlight_schema.OchRowPartitionedConstGroup}
 */
enlight_schema.OchRowPartitionedConstGroup.getRootAsOchRowPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchRowPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.OchRowPartitionedConstGroup=} obj
 * @returns {enlight_schema.OchRowPartitionedConstGroup}
 */
enlight_schema.OchRowPartitionedConstGroup.getSizePrefixedRootAsOchRowPartitionedConstGroup = function(bb, obj) {
  return (obj || new enlight_schema.OchRowPartitionedConstGroup).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.OchRowPartitionedConstGroup.startOchRowPartitionedConstGroup = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchRowPartitionedConstGroup.endOchRowPartitionedConstGroup = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.OchRowPartitionedConstGroup.createOchRowPartitionedConstGroup = function(builder) {
  enlight_schema.OchRowPartitionedConstGroup.startOchRowPartitionedConstGroup(builder);
  return enlight_schema.OchRowPartitionedConstGroup.endOchRowPartitionedConstGroup(builder);
}

/**
 * @constructor
 */
enlight_schema.DelimiterLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DelimiterLayer}
 */
enlight_schema.DelimiterLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DelimiterLayer=} obj
 * @returns {enlight_schema.DelimiterLayer}
 */
enlight_schema.DelimiterLayer.getRootAsDelimiterLayer = function(bb, obj) {
  return (obj || new enlight_schema.DelimiterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DelimiterLayer=} obj
 * @returns {enlight_schema.DelimiterLayer}
 */
enlight_schema.DelimiterLayer.getSizePrefixedRootAsDelimiterLayer = function(bb, obj) {
  return (obj || new enlight_schema.DelimiterLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.DelimiterDescriptor=} obj
 * @returns {enlight_schema.DelimiterDescriptor|null}
 */
enlight_schema.DelimiterLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.DelimiterDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DelimiterLayer.startDelimiterLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.DelimiterLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DelimiterLayer.endDelimiterLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DelimiterLayer.createDelimiterLayer = function(builder, descriptorOffset) {
  enlight_schema.DelimiterLayer.startDelimiterLayer(builder);
  enlight_schema.DelimiterLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.DelimiterLayer.endDelimiterLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.PartitionData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.PartitionData}
 */
enlight_schema.PartitionData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PartitionData=} obj
 * @returns {enlight_schema.PartitionData}
 */
enlight_schema.PartitionData.getRootAsPartitionData = function(bb, obj) {
  return (obj || new enlight_schema.PartitionData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.PartitionData=} obj
 * @returns {enlight_schema.PartitionData}
 */
enlight_schema.PartitionData.getSizePrefixedRootAsPartitionData = function(bb, obj) {
  return (obj || new enlight_schema.PartitionData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.PartitionData.prototype.start = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.PartitionData.prototype.end = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.PartitionData.startPartitionData = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} start
 */
enlight_schema.PartitionData.addStart = function(builder, start) {
  builder.addFieldInt32(0, start, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} end
 */
enlight_schema.PartitionData.addEnd = function(builder, end) {
  builder.addFieldInt32(1, end, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PartitionData.endPartitionData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} start
 * @param {number} end
 * @returns {flatbuffers.Offset}
 */
enlight_schema.PartitionData.createPartitionData = function(builder, start, end) {
  enlight_schema.PartitionData.startPartitionData(builder);
  enlight_schema.PartitionData.addStart(builder, start);
  enlight_schema.PartitionData.addEnd(builder, end);
  return enlight_schema.PartitionData.endPartitionData(builder);
}

/**
 * @constructor
 */
enlight_schema.RowPartitionDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.RowPartitionDescriptor}
 */
enlight_schema.RowPartitionDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionDescriptor=} obj
 * @returns {enlight_schema.RowPartitionDescriptor}
 */
enlight_schema.RowPartitionDescriptor.getRootAsRowPartitionDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.RowPartitionDescriptor=} obj
 * @returns {enlight_schema.RowPartitionDescriptor}
 */
enlight_schema.RowPartitionDescriptor.getSizePrefixedRootAsRowPartitionDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.RowPartitionDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {enlight_schema.PartitionData=} obj
 * @returns {enlight_schema.PartitionData}
 */
enlight_schema.RowPartitionDescriptor.prototype.rowPartitionData = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.PartitionData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.RowPartitionDescriptor.prototype.rowPartitionDataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.RowPartitionDescriptor.startRowPartitionDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} rowPartitionDataOffset
 */
enlight_schema.RowPartitionDescriptor.addRowPartitionData = function(builder, rowPartitionDataOffset) {
  builder.addFieldOffset(0, rowPartitionDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionDescriptor.createRowPartitionDataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.RowPartitionDescriptor.startRowPartitionDataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionDescriptor.endRowPartitionDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} rowPartitionDataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.RowPartitionDescriptor.createRowPartitionDescriptor = function(builder, rowPartitionDataOffset) {
  enlight_schema.RowPartitionDescriptor.startRowPartitionDescriptor(builder);
  enlight_schema.RowPartitionDescriptor.addRowPartitionData(builder, rowPartitionDataOffset);
  return enlight_schema.RowPartitionDescriptor.endRowPartitionDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.ChannelPartitionData = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ChannelPartitionData}
 */
enlight_schema.ChannelPartitionData.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ChannelPartitionData=} obj
 * @returns {enlight_schema.ChannelPartitionData}
 */
enlight_schema.ChannelPartitionData.getRootAsChannelPartitionData = function(bb, obj) {
  return (obj || new enlight_schema.ChannelPartitionData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ChannelPartitionData=} obj
 * @returns {enlight_schema.ChannelPartitionData}
 */
enlight_schema.ChannelPartitionData.getSizePrefixedRootAsChannelPartitionData = function(bb, obj) {
  return (obj || new enlight_schema.ChannelPartitionData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.ChannelPartitionData.prototype.positionInGroup = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {enlight_schema.PartitionData=} obj
 * @returns {enlight_schema.PartitionData}
 */
enlight_schema.ChannelPartitionData.prototype.partitionSize = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.PartitionData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.ChannelPartitionData.prototype.partitionSizeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ChannelPartitionData.startChannelPartitionData = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} positionInGroup
 */
enlight_schema.ChannelPartitionData.addPositionInGroup = function(builder, positionInGroup) {
  builder.addFieldInt32(0, positionInGroup, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} partitionSizeOffset
 */
enlight_schema.ChannelPartitionData.addPartitionSize = function(builder, partitionSizeOffset) {
  builder.addFieldOffset(1, partitionSizeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionData.createPartitionSizeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ChannelPartitionData.startPartitionSizeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionData.endChannelPartitionData = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} positionInGroup
 * @param {flatbuffers.Offset} partitionSizeOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionData.createChannelPartitionData = function(builder, positionInGroup, partitionSizeOffset) {
  enlight_schema.ChannelPartitionData.startChannelPartitionData(builder);
  enlight_schema.ChannelPartitionData.addPositionInGroup(builder, positionInGroup);
  enlight_schema.ChannelPartitionData.addPartitionSize(builder, partitionSizeOffset);
  return enlight_schema.ChannelPartitionData.endChannelPartitionData(builder);
}

/**
 * @constructor
 */
enlight_schema.ChannelPartitionDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.ChannelPartitionDescriptor}
 */
enlight_schema.ChannelPartitionDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ChannelPartitionDescriptor=} obj
 * @returns {enlight_schema.ChannelPartitionDescriptor}
 */
enlight_schema.ChannelPartitionDescriptor.getRootAsChannelPartitionDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ChannelPartitionDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.ChannelPartitionDescriptor=} obj
 * @returns {enlight_schema.ChannelPartitionDescriptor}
 */
enlight_schema.ChannelPartitionDescriptor.getSizePrefixedRootAsChannelPartitionDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.ChannelPartitionDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {enlight_schema.ChannelPartitionData=} obj
 * @returns {enlight_schema.ChannelPartitionData}
 */
enlight_schema.ChannelPartitionDescriptor.prototype.channelPartitionData = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.ChannelPartitionData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.ChannelPartitionDescriptor.prototype.channelPartitionDataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.ChannelPartitionDescriptor.startChannelPartitionDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} channelPartitionDataOffset
 */
enlight_schema.ChannelPartitionDescriptor.addChannelPartitionData = function(builder, channelPartitionDataOffset) {
  builder.addFieldOffset(0, channelPartitionDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionDescriptor.createChannelPartitionDataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.ChannelPartitionDescriptor.startChannelPartitionDataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionDescriptor.endChannelPartitionDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} channelPartitionDataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.ChannelPartitionDescriptor.createChannelPartitionDescriptor = function(builder, channelPartitionDataOffset) {
  enlight_schema.ChannelPartitionDescriptor.startChannelPartitionDescriptor(builder);
  enlight_schema.ChannelPartitionDescriptor.addChannelPartitionData(builder, channelPartitionDataOffset);
  return enlight_schema.ChannelPartitionDescriptor.endChannelPartitionDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.DelimiterDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DelimiterDescriptor}
 */
enlight_schema.DelimiterDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DelimiterDescriptor=} obj
 * @returns {enlight_schema.DelimiterDescriptor}
 */
enlight_schema.DelimiterDescriptor.getRootAsDelimiterDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DelimiterDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DelimiterDescriptor=} obj
 * @returns {enlight_schema.DelimiterDescriptor}
 */
enlight_schema.DelimiterDescriptor.getSizePrefixedRootAsDelimiterDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DelimiterDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {enlight_schema.GroupLayer}
 */
enlight_schema.DelimiterDescriptor.prototype.groupType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {enlight_schema.GroupLayer} */ (this.bb.readUint8(this.bb_pos + offset)) : enlight_schema.GroupLayer.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
enlight_schema.DelimiterDescriptor.prototype.group = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.DelimiterDescriptor.prototype.tail = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.DelimiterDescriptor.prototype.aux = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.DelimiterDescriptor.prototype.isFusedGroup = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.DelimiterDescriptor.prototype.isFusedFollowing = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {enlight_schema.RowPartitionDescriptor=} obj
 * @returns {enlight_schema.RowPartitionDescriptor|null}
 */
enlight_schema.DelimiterDescriptor.prototype.rowPartitionData = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new enlight_schema.RowPartitionDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ChannelPartitionDescriptor=} obj
 * @returns {enlight_schema.ChannelPartitionDescriptor|null}
 */
enlight_schema.DelimiterDescriptor.prototype.channelPartitionData = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new enlight_schema.ChannelPartitionDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DelimiterDescriptor.startDelimiterDescriptor = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.GroupLayer} groupType
 */
enlight_schema.DelimiterDescriptor.addGroupType = function(builder, groupType) {
  builder.addFieldInt8(0, groupType, enlight_schema.GroupLayer.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} groupOffset
 */
enlight_schema.DelimiterDescriptor.addGroup = function(builder, groupOffset) {
  builder.addFieldOffset(1, groupOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} tail
 */
enlight_schema.DelimiterDescriptor.addTail = function(builder, tail) {
  builder.addFieldInt8(2, +tail, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} aux
 */
enlight_schema.DelimiterDescriptor.addAux = function(builder, aux) {
  builder.addFieldInt8(3, +aux, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isFusedGroup
 */
enlight_schema.DelimiterDescriptor.addIsFusedGroup = function(builder, isFusedGroup) {
  builder.addFieldInt8(4, +isFusedGroup, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isFusedFollowing
 */
enlight_schema.DelimiterDescriptor.addIsFusedFollowing = function(builder, isFusedFollowing) {
  builder.addFieldInt8(5, +isFusedFollowing, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} rowPartitionDataOffset
 */
enlight_schema.DelimiterDescriptor.addRowPartitionData = function(builder, rowPartitionDataOffset) {
  builder.addFieldOffset(6, rowPartitionDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} channelPartitionDataOffset
 */
enlight_schema.DelimiterDescriptor.addChannelPartitionData = function(builder, channelPartitionDataOffset) {
  builder.addFieldOffset(7, channelPartitionDataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DelimiterDescriptor.endDelimiterDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.GroupLayer} groupType
 * @param {flatbuffers.Offset} groupOffset
 * @param {boolean} tail
 * @param {boolean} aux
 * @param {boolean} isFusedGroup
 * @param {boolean} isFusedFollowing
 * @param {flatbuffers.Offset} rowPartitionDataOffset
 * @param {flatbuffers.Offset} channelPartitionDataOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DelimiterDescriptor.createDelimiterDescriptor = function(builder, groupType, groupOffset, tail, aux, isFusedGroup, isFusedFollowing, rowPartitionDataOffset, channelPartitionDataOffset) {
  enlight_schema.DelimiterDescriptor.startDelimiterDescriptor(builder);
  enlight_schema.DelimiterDescriptor.addGroupType(builder, groupType);
  enlight_schema.DelimiterDescriptor.addGroup(builder, groupOffset);
  enlight_schema.DelimiterDescriptor.addTail(builder, tail);
  enlight_schema.DelimiterDescriptor.addAux(builder, aux);
  enlight_schema.DelimiterDescriptor.addIsFusedGroup(builder, isFusedGroup);
  enlight_schema.DelimiterDescriptor.addIsFusedFollowing(builder, isFusedFollowing);
  enlight_schema.DelimiterDescriptor.addRowPartitionData(builder, rowPartitionDataOffset);
  enlight_schema.DelimiterDescriptor.addChannelPartitionData(builder, channelPartitionDataOffset);
  return enlight_schema.DelimiterDescriptor.endDelimiterDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.MatMulLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.MatMulLayer}
 */
enlight_schema.MatMulLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MatMulLayer=} obj
 * @returns {enlight_schema.MatMulLayer}
 */
enlight_schema.MatMulLayer.getRootAsMatMulLayer = function(bb, obj) {
  return (obj || new enlight_schema.MatMulLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.MatMulLayer=} obj
 * @returns {enlight_schema.MatMulLayer}
 */
enlight_schema.MatMulLayer.getSizePrefixedRootAsMatMulLayer = function(bb, obj) {
  return (obj || new enlight_schema.MatMulLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.MatMulLayer.startMatMulLayer = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MatMulLayer.endMatMulLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.MatMulLayer.createMatMulLayer = function(builder) {
  enlight_schema.MatMulLayer.startMatMulLayer(builder);
  return enlight_schema.MatMulLayer.endMatMulLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.DarknetDeConv2dLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DarknetDeConv2dLayer}
 */
enlight_schema.DarknetDeConv2dLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DarknetDeConv2dLayer=} obj
 * @returns {enlight_schema.DarknetDeConv2dLayer}
 */
enlight_schema.DarknetDeConv2dLayer.getRootAsDarknetDeConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.DarknetDeConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DarknetDeConv2dLayer=} obj
 * @returns {enlight_schema.DarknetDeConv2dLayer}
 */
enlight_schema.DarknetDeConv2dLayer.getSizePrefixedRootAsDarknetDeConv2dLayer = function(bb, obj) {
  return (obj || new enlight_schema.DarknetDeConv2dLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.DarknetDeConv2dDescriptor=} obj
 * @returns {enlight_schema.DarknetDeConv2dDescriptor|null}
 */
enlight_schema.DarknetDeConv2dLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.DarknetDeConv2dDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.DarknetDeConv2dLayer.prototype.weights = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {enlight_schema.ConstTensor=} obj
 * @returns {enlight_schema.ConstTensor|null}
 */
enlight_schema.DarknetDeConv2dLayer.prototype.biases = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new enlight_schema.ConstTensor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DarknetDeConv2dLayer.startDarknetDeConv2dLayer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.DarknetDeConv2dLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} weightsOffset
 */
enlight_schema.DarknetDeConv2dLayer.addWeights = function(builder, weightsOffset) {
  builder.addFieldOffset(1, weightsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} biasesOffset
 */
enlight_schema.DarknetDeConv2dLayer.addBiases = function(builder, biasesOffset) {
  builder.addFieldOffset(2, biasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DarknetDeConv2dLayer.endDarknetDeConv2dLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @param {flatbuffers.Offset} weightsOffset
 * @param {flatbuffers.Offset} biasesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DarknetDeConv2dLayer.createDarknetDeConv2dLayer = function(builder, descriptorOffset, weightsOffset, biasesOffset) {
  enlight_schema.DarknetDeConv2dLayer.startDarknetDeConv2dLayer(builder);
  enlight_schema.DarknetDeConv2dLayer.addDescriptor(builder, descriptorOffset);
  enlight_schema.DarknetDeConv2dLayer.addWeights(builder, weightsOffset);
  enlight_schema.DarknetDeConv2dLayer.addBiases(builder, biasesOffset);
  return enlight_schema.DarknetDeConv2dLayer.endDarknetDeConv2dLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.DarknetDeConv2dDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.DarknetDeConv2dDescriptor}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DarknetDeConv2dDescriptor=} obj
 * @returns {enlight_schema.DarknetDeConv2dDescriptor}
 */
enlight_schema.DarknetDeConv2dDescriptor.getRootAsDarknetDeConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DarknetDeConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.DarknetDeConv2dDescriptor=} obj
 * @returns {enlight_schema.DarknetDeConv2dDescriptor}
 */
enlight_schema.DarknetDeConv2dDescriptor.getSizePrefixedRootAsDarknetDeConv2dDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.DarknetDeConv2dDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.inChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.outChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.kernelWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.kernelHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.padWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.padHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.strideX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.strideY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.biasEnabled = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {enlight_schema.DataLayout}
 */
enlight_schema.DarknetDeConv2dDescriptor.prototype.dataLayout = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {enlight_schema.DataLayout} */ (this.bb.readInt8(this.bb_pos + offset)) : enlight_schema.DataLayout.NCHW;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.DarknetDeConv2dDescriptor.startDarknetDeConv2dDescriptor = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 */
enlight_schema.DarknetDeConv2dDescriptor.addInChannels = function(builder, inChannels) {
  builder.addFieldInt32(0, inChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} outChannels
 */
enlight_schema.DarknetDeConv2dDescriptor.addOutChannels = function(builder, outChannels) {
  builder.addFieldInt32(1, outChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelWidth
 */
enlight_schema.DarknetDeConv2dDescriptor.addKernelWidth = function(builder, kernelWidth) {
  builder.addFieldInt32(2, kernelWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} kernelHeight
 */
enlight_schema.DarknetDeConv2dDescriptor.addKernelHeight = function(builder, kernelHeight) {
  builder.addFieldInt32(3, kernelHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padWidth
 */
enlight_schema.DarknetDeConv2dDescriptor.addPadWidth = function(builder, padWidth) {
  builder.addFieldInt32(4, padWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} padHeight
 */
enlight_schema.DarknetDeConv2dDescriptor.addPadHeight = function(builder, padHeight) {
  builder.addFieldInt32(5, padHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideX
 */
enlight_schema.DarknetDeConv2dDescriptor.addStrideX = function(builder, strideX) {
  builder.addFieldInt32(6, strideX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideY
 */
enlight_schema.DarknetDeConv2dDescriptor.addStrideY = function(builder, strideY) {
  builder.addFieldInt32(7, strideY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} biasEnabled
 */
enlight_schema.DarknetDeConv2dDescriptor.addBiasEnabled = function(builder, biasEnabled) {
  builder.addFieldInt8(8, +biasEnabled, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.DataLayout} dataLayout
 */
enlight_schema.DarknetDeConv2dDescriptor.addDataLayout = function(builder, dataLayout) {
  builder.addFieldInt8(9, dataLayout, enlight_schema.DataLayout.NCHW);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DarknetDeConv2dDescriptor.endDarknetDeConv2dDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} inChannels
 * @param {number} outChannels
 * @param {number} kernelWidth
 * @param {number} kernelHeight
 * @param {number} padWidth
 * @param {number} padHeight
 * @param {number} strideX
 * @param {number} strideY
 * @param {boolean} biasEnabled
 * @param {enlight_schema.DataLayout} dataLayout
 * @returns {flatbuffers.Offset}
 */
enlight_schema.DarknetDeConv2dDescriptor.createDarknetDeConv2dDescriptor = function(builder, inChannels, outChannels, kernelWidth, kernelHeight, padWidth, padHeight, strideX, strideY, biasEnabled, dataLayout) {
  enlight_schema.DarknetDeConv2dDescriptor.startDarknetDeConv2dDescriptor(builder);
  enlight_schema.DarknetDeConv2dDescriptor.addInChannels(builder, inChannels);
  enlight_schema.DarknetDeConv2dDescriptor.addOutChannels(builder, outChannels);
  enlight_schema.DarknetDeConv2dDescriptor.addKernelWidth(builder, kernelWidth);
  enlight_schema.DarknetDeConv2dDescriptor.addKernelHeight(builder, kernelHeight);
  enlight_schema.DarknetDeConv2dDescriptor.addPadWidth(builder, padWidth);
  enlight_schema.DarknetDeConv2dDescriptor.addPadHeight(builder, padHeight);
  enlight_schema.DarknetDeConv2dDescriptor.addStrideX(builder, strideX);
  enlight_schema.DarknetDeConv2dDescriptor.addStrideY(builder, strideY);
  enlight_schema.DarknetDeConv2dDescriptor.addBiasEnabled(builder, biasEnabled);
  enlight_schema.DarknetDeConv2dDescriptor.addDataLayout(builder, dataLayout);
  return enlight_schema.DarknetDeConv2dDescriptor.endDarknetDeConv2dDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.SqueezeLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SqueezeLayer}
 */
enlight_schema.SqueezeLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SqueezeLayer=} obj
 * @returns {enlight_schema.SqueezeLayer}
 */
enlight_schema.SqueezeLayer.getRootAsSqueezeLayer = function(bb, obj) {
  return (obj || new enlight_schema.SqueezeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SqueezeLayer=} obj
 * @returns {enlight_schema.SqueezeLayer}
 */
enlight_schema.SqueezeLayer.getSizePrefixedRootAsSqueezeLayer = function(bb, obj) {
  return (obj || new enlight_schema.SqueezeLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {enlight_schema.SqueezeDescriptor=} obj
 * @returns {enlight_schema.SqueezeDescriptor|null}
 */
enlight_schema.SqueezeLayer.prototype.descriptor = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.SqueezeDescriptor).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SqueezeLayer.startSqueezeLayer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 */
enlight_schema.SqueezeLayer.addDescriptor = function(builder, descriptorOffset) {
  builder.addFieldOffset(0, descriptorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SqueezeLayer.endSqueezeLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptorOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SqueezeLayer.createSqueezeLayer = function(builder, descriptorOffset) {
  enlight_schema.SqueezeLayer.startSqueezeLayer(builder);
  enlight_schema.SqueezeLayer.addDescriptor(builder, descriptorOffset);
  return enlight_schema.SqueezeLayer.endSqueezeLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.SqueezeDescriptor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.SqueezeDescriptor}
 */
enlight_schema.SqueezeDescriptor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SqueezeDescriptor=} obj
 * @returns {enlight_schema.SqueezeDescriptor}
 */
enlight_schema.SqueezeDescriptor.getRootAsSqueezeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SqueezeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.SqueezeDescriptor=} obj
 * @returns {enlight_schema.SqueezeDescriptor}
 */
enlight_schema.SqueezeDescriptor.getSizePrefixedRootAsSqueezeDescriptor = function(bb, obj) {
  return (obj || new enlight_schema.SqueezeDescriptor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.SqueezeDescriptor.prototype.axes = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.SqueezeDescriptor.prototype.axesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
enlight_schema.SqueezeDescriptor.prototype.axesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.SqueezeDescriptor.startSqueezeDescriptor = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 */
enlight_schema.SqueezeDescriptor.addAxes = function(builder, axesOffset) {
  builder.addFieldOffset(0, axesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SqueezeDescriptor.createAxesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.SqueezeDescriptor.startAxesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SqueezeDescriptor.endSqueezeDescriptor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} axesOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.SqueezeDescriptor.createSqueezeDescriptor = function(builder, axesOffset) {
  enlight_schema.SqueezeDescriptor.startSqueezeDescriptor(builder);
  enlight_schema.SqueezeDescriptor.addAxes(builder, axesOffset);
  return enlight_schema.SqueezeDescriptor.endSqueezeDescriptor(builder);
}

/**
 * @constructor
 */
enlight_schema.FusedLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.FusedLayer}
 */
enlight_schema.FusedLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FusedLayer=} obj
 * @returns {enlight_schema.FusedLayer}
 */
enlight_schema.FusedLayer.getRootAsFusedLayer = function(bb, obj) {
  return (obj || new enlight_schema.FusedLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.FusedLayer=} obj
 * @returns {enlight_schema.FusedLayer}
 */
enlight_schema.FusedLayer.getSizePrefixedRootAsFusedLayer = function(bb, obj) {
  return (obj || new enlight_schema.FusedLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {enlight_schema.Layer}
 */
enlight_schema.FusedLayer.prototype.layerType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {enlight_schema.Layer} */ (this.bb.readUint8(this.bb_pos + offset)) : enlight_schema.Layer.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
enlight_schema.FusedLayer.prototype.layer = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.FusedLayer.startFusedLayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.Layer} layerType
 */
enlight_schema.FusedLayer.addLayerType = function(builder, layerType) {
  builder.addFieldInt8(0, layerType, enlight_schema.Layer.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} layerOffset
 */
enlight_schema.FusedLayer.addLayer = function(builder, layerOffset) {
  builder.addFieldOffset(1, layerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FusedLayer.endFusedLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.Layer} layerType
 * @param {flatbuffers.Offset} layerOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.FusedLayer.createFusedLayer = function(builder, layerType, layerOffset) {
  enlight_schema.FusedLayer.startFusedLayer(builder);
  enlight_schema.FusedLayer.addLayerType(builder, layerType);
  enlight_schema.FusedLayer.addLayer(builder, layerOffset);
  return enlight_schema.FusedLayer.endFusedLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.AnyLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.AnyLayer}
 */
enlight_schema.AnyLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AnyLayer=} obj
 * @returns {enlight_schema.AnyLayer}
 */
enlight_schema.AnyLayer.getRootAsAnyLayer = function(bb, obj) {
  return (obj || new enlight_schema.AnyLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.AnyLayer=} obj
 * @returns {enlight_schema.AnyLayer}
 */
enlight_schema.AnyLayer.getSizePrefixedRootAsAnyLayer = function(bb, obj) {
  return (obj || new enlight_schema.AnyLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.AnyLayer.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {enlight_schema.LayerBase=} obj
 * @returns {enlight_schema.LayerBase|null}
 */
enlight_schema.AnyLayer.prototype.base = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.LayerBase).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {enlight_schema.Layer}
 */
enlight_schema.AnyLayer.prototype.layerType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {enlight_schema.Layer} */ (this.bb.readUint8(this.bb_pos + offset)) : enlight_schema.Layer.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
enlight_schema.AnyLayer.prototype.layer = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {number} index
 * @param {enlight_schema.FusedLayer=} obj
 * @returns {enlight_schema.FusedLayer}
 */
enlight_schema.AnyLayer.prototype.fusedLayers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new enlight_schema.FusedLayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.AnyLayer.prototype.fusedLayersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.AnyLayer.prototype.groupIdc = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
enlight_schema.AnyLayer.prototype.originNames = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.AnyLayer.prototype.originNamesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
enlight_schema.AnyLayer.prototype.originIds = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.AnyLayer.prototype.originIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.AnyLayer.prototype.positionInGroup = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : -1;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.AnyLayer.startAnyLayer = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
enlight_schema.AnyLayer.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} baseOffset
 */
enlight_schema.AnyLayer.addBase = function(builder, baseOffset) {
  builder.addFieldOffset(1, baseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {enlight_schema.Layer} layerType
 */
enlight_schema.AnyLayer.addLayerType = function(builder, layerType) {
  builder.addFieldInt8(2, layerType, enlight_schema.Layer.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} layerOffset
 */
enlight_schema.AnyLayer.addLayer = function(builder, layerOffset) {
  builder.addFieldOffset(3, layerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fusedLayersOffset
 */
enlight_schema.AnyLayer.addFusedLayers = function(builder, fusedLayersOffset) {
  builder.addFieldOffset(4, fusedLayersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AnyLayer.createFusedLayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.AnyLayer.startFusedLayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} groupIdcOffset
 */
enlight_schema.AnyLayer.addGroupIdc = function(builder, groupIdcOffset) {
  builder.addFieldOffset(5, groupIdcOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} originNamesOffset
 */
enlight_schema.AnyLayer.addOriginNames = function(builder, originNamesOffset) {
  builder.addFieldOffset(6, originNamesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AnyLayer.createOriginNamesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.AnyLayer.startOriginNamesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} originIdsOffset
 */
enlight_schema.AnyLayer.addOriginIds = function(builder, originIdsOffset) {
  builder.addFieldOffset(7, originIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AnyLayer.createOriginIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.AnyLayer.startOriginIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} positionInGroup
 */
enlight_schema.AnyLayer.addPositionInGroup = function(builder, positionInGroup) {
  builder.addFieldInt32(8, positionInGroup, -1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AnyLayer.endAnyLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} baseOffset
 * @param {enlight_schema.Layer} layerType
 * @param {flatbuffers.Offset} layerOffset
 * @param {flatbuffers.Offset} fusedLayersOffset
 * @param {flatbuffers.Offset} groupIdcOffset
 * @param {flatbuffers.Offset} originNamesOffset
 * @param {flatbuffers.Offset} originIdsOffset
 * @param {number} positionInGroup
 * @returns {flatbuffers.Offset}
 */
enlight_schema.AnyLayer.createAnyLayer = function(builder, nameOffset, baseOffset, layerType, layerOffset, fusedLayersOffset, groupIdcOffset, originNamesOffset, originIdsOffset, positionInGroup) {
  enlight_schema.AnyLayer.startAnyLayer(builder);
  enlight_schema.AnyLayer.addName(builder, nameOffset);
  enlight_schema.AnyLayer.addBase(builder, baseOffset);
  enlight_schema.AnyLayer.addLayerType(builder, layerType);
  enlight_schema.AnyLayer.addLayer(builder, layerOffset);
  enlight_schema.AnyLayer.addFusedLayers(builder, fusedLayersOffset);
  enlight_schema.AnyLayer.addGroupIdc(builder, groupIdcOffset);
  enlight_schema.AnyLayer.addOriginNames(builder, originNamesOffset);
  enlight_schema.AnyLayer.addOriginIds(builder, originIdsOffset);
  enlight_schema.AnyLayer.addPositionInGroup(builder, positionInGroup);
  return enlight_schema.AnyLayer.endAnyLayer(builder);
}

/**
 * @constructor
 */
enlight_schema.NetworkInfo = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.NetworkInfo}
 */
enlight_schema.NetworkInfo.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.NetworkInfo=} obj
 * @returns {enlight_schema.NetworkInfo}
 */
enlight_schema.NetworkInfo.getRootAsNetworkInfo = function(bb, obj) {
  return (obj || new enlight_schema.NetworkInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.NetworkInfo=} obj
 * @returns {enlight_schema.NetworkInfo}
 */
enlight_schema.NetworkInfo.getSizePrefixedRootAsNetworkInfo = function(bb, obj) {
  return (obj || new enlight_schema.NetworkInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.model = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.type = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.hasDetectionLayer = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.numClass = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
enlight_schema.NetworkInfo.prototype.classLabels = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.classLabelsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.hasScore = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.mAP = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.top5 = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.top1 = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.evaluationDataset = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.isFusedNormalization = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.normMean = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.normMeanLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.NetworkInfo.prototype.normMeanArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.normStd = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.normStdLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
enlight_schema.NetworkInfo.prototype.normStdArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
enlight_schema.NetworkInfo.prototype.optimization = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.optimizationLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.isTracked = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.trackDataset = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.numImages = function() {
  var offset = this.bb.__offset(this.bb_pos, 36);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.isQuantized = function() {
  var offset = this.bb.__offset(this.bb_pos, 38);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.quantizationMethod = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 40);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.mStd8 = function() {
  var offset = this.bb.__offset(this.bb_pos, 42);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.mStd4 = function() {
  var offset = this.bb.__offset(this.bb_pos, 44);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.mStdRatio = function() {
  var offset = this.bb.__offset(this.bb_pos, 46);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.clipMinMax = function() {
  var offset = this.bb.__offset(this.bb_pos, 48);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {number}
 */
enlight_schema.NetworkInfo.prototype.iterWeightMeanCorrection = function() {
  var offset = this.bb.__offset(this.bb_pos, 50);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.quantizePostProcess = function() {
  var offset = this.bb.__offset(this.bb_pos, 52);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
enlight_schema.NetworkInfo.prototype.hasHistogram = function() {
  var offset = this.bb.__offset(this.bb_pos, 54);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.quantizationMode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 56);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.analysisMethod = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 58);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.sdkVersion = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 60);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
enlight_schema.NetworkInfo.prototype.yoloVersion = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 62);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.NetworkInfo.startNetworkInfo = function(builder) {
  builder.startObject(30);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modelOffset
 */
enlight_schema.NetworkInfo.addModel = function(builder, modelOffset) {
  builder.addFieldOffset(0, modelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} typeOffset
 */
enlight_schema.NetworkInfo.addType = function(builder, typeOffset) {
  builder.addFieldOffset(1, typeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasDetectionLayer
 */
enlight_schema.NetworkInfo.addHasDetectionLayer = function(builder, hasDetectionLayer) {
  builder.addFieldInt8(2, +hasDetectionLayer, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numClass
 */
enlight_schema.NetworkInfo.addNumClass = function(builder, numClass) {
  builder.addFieldInt32(3, numClass, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} classLabelsOffset
 */
enlight_schema.NetworkInfo.addClassLabels = function(builder, classLabelsOffset) {
  builder.addFieldOffset(4, classLabelsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.createClassLabelsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.NetworkInfo.startClassLabelsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasScore
 */
enlight_schema.NetworkInfo.addHasScore = function(builder, hasScore) {
  builder.addFieldInt8(5, +hasScore, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mAP
 */
enlight_schema.NetworkInfo.addMAP = function(builder, mAP) {
  builder.addFieldFloat32(6, mAP, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} top5
 */
enlight_schema.NetworkInfo.addTop5 = function(builder, top5) {
  builder.addFieldFloat32(7, top5, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} top1
 */
enlight_schema.NetworkInfo.addTop1 = function(builder, top1) {
  builder.addFieldFloat32(8, top1, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} evaluationDatasetOffset
 */
enlight_schema.NetworkInfo.addEvaluationDataset = function(builder, evaluationDatasetOffset) {
  builder.addFieldOffset(9, evaluationDatasetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isFusedNormalization
 */
enlight_schema.NetworkInfo.addIsFusedNormalization = function(builder, isFusedNormalization) {
  builder.addFieldInt8(10, +isFusedNormalization, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} normMeanOffset
 */
enlight_schema.NetworkInfo.addNormMean = function(builder, normMeanOffset) {
  builder.addFieldOffset(11, normMeanOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.createNormMeanVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.NetworkInfo.startNormMeanVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} normStdOffset
 */
enlight_schema.NetworkInfo.addNormStd = function(builder, normStdOffset) {
  builder.addFieldOffset(12, normStdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.createNormStdVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.NetworkInfo.startNormStdVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optimizationOffset
 */
enlight_schema.NetworkInfo.addOptimization = function(builder, optimizationOffset) {
  builder.addFieldOffset(13, optimizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.createOptimizationVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.NetworkInfo.startOptimizationVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isTracked
 */
enlight_schema.NetworkInfo.addIsTracked = function(builder, isTracked) {
  builder.addFieldInt8(14, +isTracked, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} trackDatasetOffset
 */
enlight_schema.NetworkInfo.addTrackDataset = function(builder, trackDatasetOffset) {
  builder.addFieldOffset(15, trackDatasetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numImages
 */
enlight_schema.NetworkInfo.addNumImages = function(builder, numImages) {
  builder.addFieldInt32(16, numImages, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isQuantized
 */
enlight_schema.NetworkInfo.addIsQuantized = function(builder, isQuantized) {
  builder.addFieldInt8(17, +isQuantized, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} quantizationMethodOffset
 */
enlight_schema.NetworkInfo.addQuantizationMethod = function(builder, quantizationMethodOffset) {
  builder.addFieldOffset(18, quantizationMethodOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mStd8
 */
enlight_schema.NetworkInfo.addMStd8 = function(builder, mStd8) {
  builder.addFieldFloat32(19, mStd8, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mStd4
 */
enlight_schema.NetworkInfo.addMStd4 = function(builder, mStd4) {
  builder.addFieldFloat32(20, mStd4, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mStdRatio
 */
enlight_schema.NetworkInfo.addMStdRatio = function(builder, mStdRatio) {
  builder.addFieldFloat32(21, mStdRatio, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} clipMinMax
 */
enlight_schema.NetworkInfo.addClipMinMax = function(builder, clipMinMax) {
  builder.addFieldInt8(22, +clipMinMax, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} iterWeightMeanCorrection
 */
enlight_schema.NetworkInfo.addIterWeightMeanCorrection = function(builder, iterWeightMeanCorrection) {
  builder.addFieldInt32(23, iterWeightMeanCorrection, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} quantizePostProcess
 */
enlight_schema.NetworkInfo.addQuantizePostProcess = function(builder, quantizePostProcess) {
  builder.addFieldInt8(24, +quantizePostProcess, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} hasHistogram
 */
enlight_schema.NetworkInfo.addHasHistogram = function(builder, hasHistogram) {
  builder.addFieldInt8(25, +hasHistogram, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} quantizationModeOffset
 */
enlight_schema.NetworkInfo.addQuantizationMode = function(builder, quantizationModeOffset) {
  builder.addFieldOffset(26, quantizationModeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} analysisMethodOffset
 */
enlight_schema.NetworkInfo.addAnalysisMethod = function(builder, analysisMethodOffset) {
  builder.addFieldOffset(27, analysisMethodOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sdkVersionOffset
 */
enlight_schema.NetworkInfo.addSdkVersion = function(builder, sdkVersionOffset) {
  builder.addFieldOffset(28, sdkVersionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} yoloVersionOffset
 */
enlight_schema.NetworkInfo.addYoloVersion = function(builder, yoloVersionOffset) {
  builder.addFieldOffset(29, yoloVersionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.endNetworkInfo = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modelOffset
 * @param {flatbuffers.Offset} typeOffset
 * @param {boolean} hasDetectionLayer
 * @param {number} numClass
 * @param {flatbuffers.Offset} classLabelsOffset
 * @param {boolean} hasScore
 * @param {number} mAP
 * @param {number} top5
 * @param {number} top1
 * @param {flatbuffers.Offset} evaluationDatasetOffset
 * @param {boolean} isFusedNormalization
 * @param {flatbuffers.Offset} normMeanOffset
 * @param {flatbuffers.Offset} normStdOffset
 * @param {flatbuffers.Offset} optimizationOffset
 * @param {boolean} isTracked
 * @param {flatbuffers.Offset} trackDatasetOffset
 * @param {number} numImages
 * @param {boolean} isQuantized
 * @param {flatbuffers.Offset} quantizationMethodOffset
 * @param {number} mStd8
 * @param {number} mStd4
 * @param {number} mStdRatio
 * @param {boolean} clipMinMax
 * @param {number} iterWeightMeanCorrection
 * @param {boolean} quantizePostProcess
 * @param {boolean} hasHistogram
 * @param {flatbuffers.Offset} quantizationModeOffset
 * @param {flatbuffers.Offset} analysisMethodOffset
 * @param {flatbuffers.Offset} sdkVersionOffset
 * @param {flatbuffers.Offset} yoloVersionOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.NetworkInfo.createNetworkInfo = function(builder, modelOffset, typeOffset, hasDetectionLayer, numClass, classLabelsOffset, hasScore, mAP, top5, top1, evaluationDatasetOffset, isFusedNormalization, normMeanOffset, normStdOffset, optimizationOffset, isTracked, trackDatasetOffset, numImages, isQuantized, quantizationMethodOffset, mStd8, mStd4, mStdRatio, clipMinMax, iterWeightMeanCorrection, quantizePostProcess, hasHistogram, quantizationModeOffset, analysisMethodOffset, sdkVersionOffset, yoloVersionOffset) {
  enlight_schema.NetworkInfo.startNetworkInfo(builder);
  enlight_schema.NetworkInfo.addModel(builder, modelOffset);
  enlight_schema.NetworkInfo.addType(builder, typeOffset);
  enlight_schema.NetworkInfo.addHasDetectionLayer(builder, hasDetectionLayer);
  enlight_schema.NetworkInfo.addNumClass(builder, numClass);
  enlight_schema.NetworkInfo.addClassLabels(builder, classLabelsOffset);
  enlight_schema.NetworkInfo.addHasScore(builder, hasScore);
  enlight_schema.NetworkInfo.addMAP(builder, mAP);
  enlight_schema.NetworkInfo.addTop5(builder, top5);
  enlight_schema.NetworkInfo.addTop1(builder, top1);
  enlight_schema.NetworkInfo.addEvaluationDataset(builder, evaluationDatasetOffset);
  enlight_schema.NetworkInfo.addIsFusedNormalization(builder, isFusedNormalization);
  enlight_schema.NetworkInfo.addNormMean(builder, normMeanOffset);
  enlight_schema.NetworkInfo.addNormStd(builder, normStdOffset);
  enlight_schema.NetworkInfo.addOptimization(builder, optimizationOffset);
  enlight_schema.NetworkInfo.addIsTracked(builder, isTracked);
  enlight_schema.NetworkInfo.addTrackDataset(builder, trackDatasetOffset);
  enlight_schema.NetworkInfo.addNumImages(builder, numImages);
  enlight_schema.NetworkInfo.addIsQuantized(builder, isQuantized);
  enlight_schema.NetworkInfo.addQuantizationMethod(builder, quantizationMethodOffset);
  enlight_schema.NetworkInfo.addMStd8(builder, mStd8);
  enlight_schema.NetworkInfo.addMStd4(builder, mStd4);
  enlight_schema.NetworkInfo.addMStdRatio(builder, mStdRatio);
  enlight_schema.NetworkInfo.addClipMinMax(builder, clipMinMax);
  enlight_schema.NetworkInfo.addIterWeightMeanCorrection(builder, iterWeightMeanCorrection);
  enlight_schema.NetworkInfo.addQuantizePostProcess(builder, quantizePostProcess);
  enlight_schema.NetworkInfo.addHasHistogram(builder, hasHistogram);
  enlight_schema.NetworkInfo.addQuantizationMode(builder, quantizationModeOffset);
  enlight_schema.NetworkInfo.addAnalysisMethod(builder, analysisMethodOffset);
  enlight_schema.NetworkInfo.addSdkVersion(builder, sdkVersionOffset);
  enlight_schema.NetworkInfo.addYoloVersion(builder, yoloVersionOffset);
  return enlight_schema.NetworkInfo.endNetworkInfo(builder);
}

/**
 * @constructor
 */
enlight_schema.Network = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {enlight_schema.Network}
 */
enlight_schema.Network.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Network=} obj
 * @returns {enlight_schema.Network}
 */
enlight_schema.Network.prototype.getRootAsNetwork = function(bb, obj) {
  return (obj || new enlight_schema.Network).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {enlight_schema.Network=} obj
 * @returns {enlight_schema.Network}
 */
enlight_schema.Network.getSizePrefixedRootAsNetwork = function(bb, obj) {
  return (obj || new enlight_schema.Network).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
enlight_schema.Network.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('ENLT');
};

/**
 * @param {enlight_schema.NetworkInfo=} obj
 * @returns {enlight_schema.NetworkInfo|null}
 */
enlight_schema.Network.prototype.netinfo = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new enlight_schema.NetworkInfo).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {enlight_schema.AnyLayer=} obj
 * @returns {enlight_schema.AnyLayer}
 */
enlight_schema.Network.prototype.layers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new enlight_schema.AnyLayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
enlight_schema.Network.prototype.layersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.Network.prototype.inputIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Network.prototype.inputIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.Network.prototype.inputIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
enlight_schema.Network.prototype.outputIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
enlight_schema.Network.prototype.outputIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
enlight_schema.Network.prototype.outputIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
enlight_schema.Network.startNetwork = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} netinfoOffset
 */
enlight_schema.Network.addNetinfo = function(builder, netinfoOffset) {
  builder.addFieldOffset(0, netinfoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} layersOffset
 */
enlight_schema.Network.addLayers = function(builder, layersOffset) {
  builder.addFieldOffset(1, layersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Network.createLayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.Network.startLayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputIdsOffset
 */
enlight_schema.Network.addInputIds = function(builder, inputIdsOffset) {
  builder.addFieldOffset(2, inputIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Network.createInputIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.Network.startInputIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputIdsOffset
 */
enlight_schema.Network.addOutputIds = function(builder, outputIdsOffset) {
  builder.addFieldOffset(3, outputIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Network.createOutputIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
enlight_schema.Network.startOutputIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Network.endNetwork = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
enlight_schema.Network.finishNetworkBuffer = function(builder, offset) {
  builder.finish(offset, 'ENLT');
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
enlight_schema.Network.finishSizePrefixedNetworkBuffer = function(builder, offset) {
  builder.finish(offset, 'ENLT', true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} netinfoOffset
 * @param {flatbuffers.Offset} layersOffset
 * @param {flatbuffers.Offset} inputIdsOffset
 * @param {flatbuffers.Offset} outputIdsOffset
 * @returns {flatbuffers.Offset}
 */
enlight_schema.Network.createNetwork = function(builder, netinfoOffset, layersOffset, inputIdsOffset, outputIdsOffset) {
  enlight_schema.Network.startNetwork(builder);
  enlight_schema.Network.addNetinfo(builder, netinfoOffset);
  enlight_schema.Network.addLayers(builder, layersOffset);
  enlight_schema.Network.addInputIds(builder, inputIdsOffset);
  enlight_schema.Network.addOutputIds(builder, outputIdsOffset);
  return enlight_schema.Network.endNetwork(builder);
}

// if (typeof module !== 'undefined' && typeof module.exports === 'object') { 
//   module.exports = enlight_schema; 
// }


export const Network = enlight_schema.Network;
export const DataTypeName = enlight_schema.DataTypeName;
export const Enlight_Schema = enlight_schema;
